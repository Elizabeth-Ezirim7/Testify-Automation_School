{
	"info": {
		"_postman_id": "2e85ec72-8918-4f3d-b275-e0393a43664a",
		"name": "SendInBlueAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31491193"
	},
	"item": [
		{
			"name": "Sales CRM",
			"item": [
				{
					"name": "Companies",
					"item": [
						{
							"name": "Get all Companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"\r",
											"//postman.setNextRequest(\"Create a company\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									],
									"query": [
										{
											"key": "filters",
											"value": "",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as {\"attributes.owner\":\"6299dcf3874a14eacbc65c46\"}",
											"disabled": true
										},
										{
											"key": "linkedContactsIds",
											"value": "1,2,3",
											"description": "Filter by linked contacts ids",
											"disabled": true
										},
										{
											"key": "linkedDealsIds",
											"value": "61a5ce58c5d4795761045990",
											"description": "Filter by linked Deals ids",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "",
											"description": "The field used to sort field names.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns companies list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n        \"domain\": \"xyz\",\n        \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n        \"name\": \"text\",\n        \"number_of_contacts\": 0,\n        \"owner\": \"62260474111b1101704a9d85\",\n        \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n        \"phone_number\": 8171844192,\n        \"revenue\": 10\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedDealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies?filters=veniam elit in&linkedContactsIds=13396752&linkedDealsIds=veniam elit in&page=13396752&limit=13396752&sort=desc&sortBy=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											],
											"query": [
												{
													"key": "filters",
													"value": "veniam elit in"
												},
												{
													"key": "linkedContactsIds",
													"value": "13396752"
												},
												{
													"key": "linkedDealsIds",
													"value": "veniam elit in"
												},
												{
													"key": "page",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a company",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"\r",
											"pm.environment.set(\"companyId\", id);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"console.log(id)\r",
											"\r",
											"//postman.setNextRequest(\"Get a Company\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attributes\": {\n        \"name\": \"Testable\",\n        \"owner\": \"655b2b6a37d1815642496c9d\",\n        \"domain\": \"www.testable.com\",\n        \"industry\": \"Medicine\"\n    },\n    \"linkedContactsIds\": [\n        1\n    ],\n    \"linkedDealsIds\": [\n        \"655f66b8e122b6bf37823d06\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies"
									]
								}
							},
							"response": [
								{
									"name": "Created new Company",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"domain\": \"https://example.com\",\n    \"industry\": \"Fabric\",\n    \"owner\": \"60e68d60582a3b006f524197\"\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get company attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const secondLabel = jsonData[1].label;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly Internal Name\", function () {\r",
											"    pm.expect(jsonData[0].internalName).to.eql(\"created_at\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 2\", function () {\r",
											"    pm.expect(jsonData[1].attributeTypeName).to.eql(\"text\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 3\", function () {\r",
											"    pm.expect(jsonData[2].internalName).to.eql(\"industry\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 4\", function () {\r",
											"    pm.expect(jsonData[3].internalName).to.eql(\"last_updated_at\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 5\", function () {\r",
											"    pm.expect(jsonData[4].internalName).to.eql(\"linked_contacts\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 6\", function () {\r",
											"    pm.expect(jsonData[5].internalName).to.eql(\"name\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 7\", function () {\r",
											"    pm.expect(jsonData[6].internalName).to.eql(\"next_activity_date\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify internalName 8\", function () {\r",
											"    pm.expect(jsonData[7].internalName).to.eql(\"number_of_activities\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(jsonData[0]);\r",
											"console.log(jsonData[1]);\r",
											"console.log(secondLabel);\r",
											"\r",
											"//postman.setNextRequest(\"Update a company\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{Elizabeth-api-key}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "api-key",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"attributes"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of company attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"name\",\n    \"label\": \"Company Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Link and Unlink company with contact and deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const reposnseCode = 204;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(reposnseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has No content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"console.log(reposnseCode)\r",
											"//postman.setNextRequest(\"Get pipeline stages\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"655f88aee122b6bf37823d94\",\n    \"attributes\": {\n        \"created_at\": \"2023-11-23T17:15:26.44Z\",\n        \"domain\": \"ww.testable.com\",\n        \"industry\": \"Tech\",\n        \"last_updated_at\": \"2023-11-23T17:15:26.44Z\",\n        \"name\": \"Testable\",\n        \"number_of_contacts\": 1,\n        \"owner\": \"655b2b6a37d1815642496c9d\",\n        \"owner_assign_date\": \"2023-11-23T17:15:26.44Z\"\n    },\n    \"linkedContactsIds\": [\n        1\n    ],\n    \"createdBy\": \"655b2b6a37d1815642496c9d\",\n    \"linkedDealsIds\": [\n        \"655f66b8e122b6bf37823d06\"\n    ],\n    \"refs\": {\n        \"linkedContacts\": null\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully linked/unlinked contacts/deals with the company.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkDealsIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed syntax error and updated attribute values for verification\r",
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const attributes = jsonData.attributes\r",
											"const id = jsonData.id;\r",
											"const attributesObj = jsonData.attributes;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify attributeTypeName \", function () {\r",
											"    pm.expect(jsonData.attributes).to.eql(attributesObj);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Domain \", function () {\r",
											"    pm.expect(jsonData.attributes.domain).to.eql(\"www.testable.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Industry \", function () {\r",
											"    pm.expect(jsonData.attributes.industry).to.eql(\"Medicine\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Name \", function () {\r",
											"    pm.expect(jsonData.attributes.name).to.eql(\"Testable\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Ok\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyId}}",
											"description": "(Required) Get Company Details"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Company",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Get Company Details"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const reposnseCode = 204;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(reposnseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"console.log(reposnseCode)\r",
											"\r",
											"//postman.setNextRequest(null)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyId}}",
											"description": "(Required) Company ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "When company deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route company id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Company ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const reposnseCode = 204;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(reposnseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(reposnseCode)\r",
											"\r",
											"//postman.setNextRequest(\"Link and Unlink company with contact and deal\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"allSelected\": false,\n    \"items\": [\n        \"655f839e4d83740dfe43085f\"\n    ],\n    \"attributes\": {\n        \"domain\": \"www.testable.com\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/companies/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"companies",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{companyId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Company updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"created_at\": \"2022-01-13T19:04:24.376+05:30\",\n    \"domain\": \"xyz\",\n    \"last_updated_at\": \"2022-04-01T18:47:48.283+05:30\",\n    \"name\": \"text\",\n    \"number_of_contacts\": 0,\n    \"owner\": \"62260474111b1101704a9d85\",\n    \"owner_assign_date\": \"2022-04-01T18:21:13.379+05:30\",\n    \"phone_number\": 8171844192,\n    \"revenue\": 10\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedDealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when company id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"company\",\n  \"attributes\": {\n    \"category\": \"label_2\",\n    \"domain\": \"xyz\",\n    \"date\": \"2022-05-04T00:00:00+05:30\",\n    \"industry\": \"flipkart\",\n    \"number_of_contacts\": 1,\n    \"number_of_employees\": 100,\n    \"owner\": \"5b1a17d914b73d35a76ca0c7\",\n    \"phone_number\": \"81718441912\",\n    \"revenue\": 10000.34222\n  },\n  \"countryCode\": 91\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/companies/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"companies",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get pipeline stages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = pm.response.code;\r",
											"const jsonData = pm.response.json();\r",
											"const stages = jsonData.stages;\r",
											"const pipeline = jsonData.pipeline;\r",
											"const pipeline_name = jsonData.pipeline_name;\r",
											"\r",
											"pm.test(\"Verify status code\", function () {\r",
											"    pm.expect(responseCode).to.equal(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Pipeline Value\", function () {\r",
											"    pm.expect(jsonData.pipeline).to.equal(pipeline);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Pipeline name\", function () {\r",
											"    pm.expect(jsonData.pipeline_name).to.equal(pipeline_name);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Stage 1\", function () {\r",
											"    pm.expect(jsonData.stages[0].name).to.equal(\"New\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Stage 2\", function () {\r",
											"    pm.expect(jsonData.stages[1].name).to.equal(\"Qualifying\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Stage 3\", function () {\r",
											"    pm.expect(jsonData.stages[2].name).to.equal(\"Demo scheduled\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Stage 4\", function () {\r",
											"    pm.expect(jsonData.stages[3].name).to.equal(\"Pending commitment\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Stage 5\", function () {\r",
											"    pm.expect(jsonData.stages[4].name).to.equal(\"In negotiation\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Stage 6\", function () {\r",
											"    pm.expect(jsonData.stages[5].name).to.equal(\"Won\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Stage 7\", function () {\r",
											"    pm.expect(jsonData.stages[6].name).to.equal(\"Lost\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(stages);\r",
											"console.log(pipeline);\r",
											"console.log(pipeline_name);\r",
											"\r",
											"//postman.setNextRequest(\"Delete a company\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/pipeline/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"pipeline",
										"details"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of pipeline stages",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/pipeline/details",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"pipeline",
												"details"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"stages\": [\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    },\n    {\n      \"id\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n      \"name\": \"New\"\n    }\n  ]\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Deals",
					"item": [
						{
							"name": "Get all deals",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const items = jsonData.items;\r",
											"const pager = jsonData.pager;\r",
											"const linkedCompaniesIds = jsonData.items[2];\r",
											"const id = jsonData.items[0].id\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.equal(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Items \", function () {\r",
											"    pm.expect(jsonData.items[0].id).to.equal(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Pipeline name\", function () {\r",
											"    pm.expect(linkedCompaniesIds).to.equal(linkedCompaniesIds);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Items 1 \", function () {\r",
											"    pm.expect(items[0]).to.equal(items);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Items 2 \", function () {\r",
											"    pm.expect(jsonData.items[1]).to.equal(items);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Items 3\", function () {\r",
											"    pm.expect(jsonData.items[2]).to.equal(items);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Items 4\", function () {\r",
											"    pm.expect(jsonData.items[3]).to.equal(items);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Items  5\", function () {\r",
											"    pm.expect(jsonData.items[4]).to.equal(items);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Count \", function () {\r",
											"    pm.expect(jsonData.pager.count).to.equal(8);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(id);\r",
											"//console.log(items);\r",
											"console.log(pager);\r",
											"console.log(linkedCompaniesIds);\r",
											"\r",
											"//postman.setNextRequest(null)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									],
									"query": [
										{
											"key": "filter[attributes]",
											"value": "",
											"description": "Filter by attrbutes. If you have filter for owner on your side please send it as `attributes.owner`.\"",
											"disabled": true
										},
										{
											"key": "filter[linkedCompaniesIds]",
											"value": "",
											"description": "Filter by linked companies ids",
											"disabled": true
										},
										{
											"key": "filter[linkedContactsIds]",
											"value": "",
											"description": "Filter by linked companies ids",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns deals list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"id\": \"629475917295261d9b1f4403\",\n      \"attributes\": {\n        \"deal_name\": \"testname\",\n        \"deal_owner\": \"6093d2425a9b436e9519d034\",\n        \"amount\": 12,\n        \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n        \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n        \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n        \"created_at\": \"2022-05-30T07:42:05.671Z\",\n        \"number_of_contacts\": 1,\n        \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n        \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n        \"next_activity_date\": null,\n        \"number_of_activities\": 0\n      },\n      \"linkedContactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"linkedCompaniesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals?filter[attributes]=veniam elit in&filter[linkedCompaniesIds]=veniam elit in&filter[linkedContactsIds]=veniam elit in&offset=13396752&limit=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											],
											"query": [
												{
													"key": "filter[attributes]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedCompaniesIds]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[linkedContactsIds]",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"\r",
											"pm.environment.set(\"dealId\", id);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"console.log(id)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"655b2b6a37d1815642496c9d\",\n    \"amount\": 12\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals"
									]
								}
							},
							"response": [
								{
									"name": "Created new Deal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with company\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Link and Unlink a deal with contacts and companies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const reposnseCode = 204;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(reposnseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No content\");\r",
											"});\r",
											"\r",
											"console.log(reposnseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										"link-unlink",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{dealId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Successfully linked/unlinked contacts/companies with the deal.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when query params are invalid or invalid data provided in request.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"linkContactIds\": [\n    1,\n    2,\n    3\n  ],\n  \"unlinkContactIds\": [\n    4,\n    5,\n    6\n  ],\n  \"linkCompanyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"unlinkCompanyIds\": [\n    \"61a5ce58c5d4795761045994\",\n    \"61a5ce58c5d479576104595\",\n    \"61a5ce58c5d4795761045996\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/link-unlink/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												"link-unlink",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Get deal attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const secondLabel = jsonData[1].label;\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode = 200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly Internal Name\", function () {\r",
											"    pm.expect(jsonData[0].internalName).to.eql(\"actual_close_date\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify attributeTypeName 1 \", function () {\r",
											"    pm.expect(jsonData[0].attributeTypeName).to.eql(\"date\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify attributeTypeName 2 \", function () {\r",
											"    pm.expect(jsonData[1].attributeTypeName).to.eql(\"number\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify attributeTypeName 3 \", function () {\r",
											"    pm.expect(jsonData[2].attributeTypeName).to.eql(\"date\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify attributeTypeName 4\", function () {\r",
											"    pm.expect(jsonData[3].attributeTypeName).to.eql(\"text\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify attributeTypeName 5\", function () {\r",
											"    pm.expect(jsonData[4].attributeTypeName).to.eql(\"text\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(jsonData[0]);\r",
											"console.log(jsonData[1]);\r",
											"console.log(secondLabel);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/attributes/deals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"attributes",
										"deals"
									]
								}
							},
							"response": [
								{
									"name": "Returns list of deal attributes",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/attributes/deals",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"attributes",
												"deals"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  },\n  {\n    \"internalName\": \"deal_name\",\n    \"label\": \"Deal Name\",\n    \"attributeTypeName\": \"text\",\n    \"attributeOptions\": [\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      },\n      {\n        \"key\": \"custom key\",\n        \"value\": \"custom label\"\n      }\n    ],\n    \"isRequired\": true\n  }\n]"
								}
							]
						},
						{
							"name": "Get a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.id;\r",
											"const attributes = jsonData.items[0].attributes;\r",
											"const dealOwner = attributes.deal_owner;\r",
											"const dealName = attributes.deal_name;\r",
											"const pipeline = attributes.pipeline\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"\r",
											"pm.expect(jsonData.value).to.eql(jsonData.value);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ID \", function () {\r",
											"    pm.expect(id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Deal Name \", function () {\r",
											"    pm.expect(attributes).to.eql(attributes);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Deal Owner \", function () {\r",
											"    pm.expect(attributes.deal_owner).to.eql(dealOwner);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Deal Name \", function () {\r",
											"    pm.expect(attributes.deal_name).to.eql(dealName);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Pipeline \", function () {\r",
											"    pm.expect(attributes.pipeline).to.eql(pipeline);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"pm.test(\"Status code name has Ok\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(id);\r",
											"console.log(attributes);\r",
											"console.log(dealOwner);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{dealId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the deal by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"629475917295261d9b1f4403\",\n  \"attributes\": {\n    \"deal_name\": \"testname\",\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12,\n    \"pipeline\": \"6093d296ad1e9c5cf2140a58\",\n    \"deal_stage\": \"9e577ff7-8e42-4ab3-be26-2b5e01b42518\",\n    \"stage_updated_at\": \"2022-05-30T07:42:05.671Z\",\n    \"created_at\": \"2022-05-30T07:42:05.671Z\",\n    \"number_of_contacts\": 1,\n    \"last_updated_date\": \"2022-06-06T08:38:36.761Z\",\n    \"last_activity_date\": \"2022-06-06T08:38:36.000Z\",\n    \"next_activity_date\": null,\n    \"number_of_activities\": 0\n  },\n  \"linkedContactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"linkedCompaniesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"console.log(responseCode)\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"\r",
											"pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 4000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(4000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 204]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{dealId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a deal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"console.log(responseCode)\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"\r",
											"pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"items\": [\n        \"6568e08ae9b135555c0cf325\"\n    ],\n    \"allSelected\": false,\n    \"attributes\": {\n        \"deal_description\": \"for testing purpose\"\n    },\n    \"pipeline\": \"655f4e6b2fae546da267b5a0\",\n    \"event\": \"bulk_update\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/deals/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"deals",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{dealId}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Deal updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when deal id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Deal: Connect with client\",\n  \"attributes\": {\n    \"deal_owner\": \"6093d2425a9b436e9519d034\",\n    \"amount\": 12\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/deals/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"deals",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Tasks",
					"item": [
						{
							"name": "Get all tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const items = jsonData.items;\r",
											"const pager = jsonData.pager;\r",
											"const id = jsonData.items[0].id;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.equal(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Items \", function () {\r",
											"    pm.expect(jsonData.items[0].id).to.equal(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify  Limit\", function () {\r",
											"    pm.expect(pager.limit).to.equal(50);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify 1st Items \", function () {\r",
											"    pm.expect(jsonData.items[0]).to.equal(items);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify 2nd Items \", function () {\r",
											"    pm.expect(jsonData.items[1].id).to.equal(items);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify 3rd Items \", function () {\r",
											"    pm.expect(jsonData.items[2].id).to.equal(items);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify 4th Items \", function () {\r",
											"    pm.expect(jsonData.items[3].id).to.equal(items);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify 5th Items \", function () {\r",
											"    pm.expect(jsonData.items[4].id).to.equal(items);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Items \", function () {\r",
											"    pm.expect(jsonData.items[0].id).to.equal(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 200ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(items[0].id);\r",
											"console.log(items);\r",
											"console.log(pager);\r",
											"\r",
											"//postman.setNextRequest(\"Create a task\")\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									],
									"query": [
										{
											"key": "filter[type]",
											"value": "",
											"description": "Filter by task type (ID)",
											"disabled": true
										},
										{
											"key": "filter[status]",
											"value": "",
											"description": "Filter by task status",
											"disabled": true
										},
										{
											"key": "filter[date]",
											"value": "",
											"description": "Filter by date",
											"disabled": true
										},
										{
											"key": "filter[assignTo]",
											"value": "",
											"description": "Filter by assignTo id",
											"disabled": true
										},
										{
											"key": "filter[contacts]",
											"value": "[4, 5, 6]",
											"description": "Filter by contact ids",
											"disabled": true
										},
										{
											"key": "filter[deals]",
											"value": "",
											"description": "Filter by deals ids",
											"disabled": true
										},
										{
											"key": "filter[companies]",
											"value": "",
											"description": "Filter by companies ids",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "1677168398000",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "1677168398000",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "sortBy",
											"value": "name",
											"description": "The field used to sort field names.",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns task list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"items\": [\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    },\n    {\n      \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n      \"name\": \"Task: Connect with client\",\n      \"id\": \"61a5cd07ca1347c82306ad06\",\n      \"contactsIds\": [\n        1,\n        2,\n        3\n      ],\n      \"dealsIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ],\n      \"companiesIds\": [\n        \"61a5ce58c5d4795761045990\",\n        \"61a5ce58c5d4795761045991\",\n        \"61a5ce58c5d4795761045992\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks?filter[type]=veniam elit in&filter[status]=done&filter[date]=range&filter[assignTo]=veniam elit in&filter[contacts]=veniam elit in&filter[deals]=veniam elit in&filter[companies]=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc&sortBy=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											],
											"query": [
												{
													"key": "filter[type]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[status]",
													"value": "done"
												},
												{
													"key": "filter[date]",
													"value": "range"
												},
												{
													"key": "filter[assignTo]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[contacts]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[deals]",
													"value": "veniam elit in"
												},
												{
													"key": "filter[companies]",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "sortBy",
													"value": "name"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"var id = jsonData.id\r",
											"\r",
											"\r",
											"pm.collectionVariables.set(\"task_id\", id);\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Priority\", function () {\r",
											"    pm.expect(jsonData.priority).to.eql(false);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"console.log(id)\r",
											"console.log(jsonData.priority)\r",
											"\r",
											"\r",
											"//postman.setNextRequest(\"Get a task\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lunch\",\n    \"taskTypeId\": \"655b2b95a913dfc90f6166b5\",\n    \"done\": false,\n    \"reminder\": null,\n    \"priority\": false,\n    \"notes\": \"I love Food\",\n    \"date\": \"2023-11-24T01:00:00+01:00\",\n    \"duration\": 0,\n    \"assignToId\": \"655b2b6a37d1815642496c9d\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks"
									]
								}
							},
							"response": [
								{
									"name": "Created new task",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad06\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"duration\": 600000,\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all task types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify that one of the titles has the name, Meeting\", function () {\r",
											"    pm.expect(jsonData[3].title).to.eql(\"Meeting\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify the ID of the 4th object array \", function () {\r",
											"    pm.expect(jsonData[4].id).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log((jsonData[4].id))\r",
											"\r",
											"//postman.setNextRequest(\"Update a task\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasktypes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasktypes"
									]
								}
							},
							"response": [
								{
									"name": "Returns all the Task types",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasktypes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasktypes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a88a2eb7a574180261234\",\n  \"title\": \"Email\"\n}"
								}
							]
						},
						{
							"name": "Get a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify ID from the response body\", function () {\r",
											"    pm.expect(jsonData.id).to.not.eql(null);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify TaskTypeID from the response body\", function () {\r",
											"    pm.expect(jsonData.taskTypeId).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(jsonData.id)\r",
											"console.log(jsonData.taskTypeId)\r",
											"\r",
											"//postman.setNextRequest(\"Get all task types\")\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{task_id}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Task by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"name\": \"Task: Connect with client\",\n  \"id\": \"61a5cd07ca1347c82306ad06\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ]\n}"
								},
								{
									"name": "Returned when task id is invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//postman.setNextRequest(null)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{task_id}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"//postman.setNextRequest(\"Delete a task\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstContact\": {\n        \"virtualNextTask\": null,\n        \"id\": 1,\n        \"contactId\": 1,\n        \"email\": \"testcad77@gmail.com\",\n        \"attributes\": {\n            \"FIRSTNAME\": \"Elizabeth\",\n            \"LASTNAME\": \"Ezirim\"\n        },\n        \"lists\": [],\n        \"assignToId\": null,\n        \"crmLists\": [],\n        \"createdAt\": null,\n        \"updatedAt\": null\n    },\n    \"id\": \"{{task_id}}\",\n    \"taskTypeId\": \"655b2b95a913dfc90f6166b4\",\n    \"name\": \"Meeting is now\",\n    \"done\": false,\n    \"reminder\": null,\n    \"priority\": false,\n    \"notes\": \"This is a meeting Task\",\n    \"date\": \"2023-11-23T17:00:00+01:00\",\n    \"duration\": 0,\n    \"assignToId\": \"655b2b6a37d1815642496c9d\",\n    \"contactsIds\": [\n        1\n    ],\n    \"dealsIds\": [\n        \"655f4ea2638e3c2e6009efe4\",\n        \"655f66b8e122b6bf37823d06\"\n    ],\n    \"companiesIds\": [\n        \"655f4e96c70088a3d04c238d\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/tasks/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"tasks",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{task_id}}",
											"description": "(Required) "
										}
									]
								}
							},
							"response": [
								{
									"name": "Task updated succussfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when task id is not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Task: Connect with client\",\n  \"duration\": 600000,\n  \"taskTypeId\": \"61a5cd07ca1347c82306ad09\",\n  \"date\": \"2021-11-01T17:44:54.668Z\",\n  \"notes\": \"In communication with client for resolution of queries.\",\n  \"done\": false,\n  \"assignToId\": \"5faab4b7f195bb3c4c31e62a\",\n  \"contactsIds\": [\n    1,\n    2,\n    3\n  ],\n  \"dealsIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"companiesIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\",\n    \"61a5ce58c5d4795761045992\"\n  ],\n  \"reminder\": {\n    \"value\": 10,\n    \"unit\": \"days\",\n    \"types\": [\n      \"email\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/tasks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"tasks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) "
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Notes",
					"item": [
						{
							"name": "Get all notes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"\r",
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const createdAt = jsonData[0].createdAt;\r",
											"const authorIdArray = jsonData;\r",
											"\r",
											"for (let i = 0; i < authorIdArray.length; i++) {\r",
											"    const id = authorIdArray[i].id;\r",
											"    console.log(`file ID for item ${i + 1}: ${id}`);\r",
											"}\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify file ID\", function () {\r",
											"    pm.expect(jsonData[0].createdAt).to.eql(createdAt);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Company ID\", function () {\r",
											"    pm.expect(jsonData[0].companyId).to.eql(jsonData[0].companyId);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//postman.setNextRequest(\"Create a note\")\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by note entity type",
											"disabled": true
										},
										{
											"key": "entityIds",
											"value": "61a5cd07ca1347c82306ad09",
											"description": "Filter by note entity IDs",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "1677168398000",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "1677254798000",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns notes list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"text\": \"In communication with client for resolution of queries.\",\n    \"id\": \"61a5cd07ca1347c82306ad09\",\n    \"contactIds\": [\n      247,\n      1,\n      2\n    ],\n    \"dealIds\": [\n      \"61a5ce58c5d4795761045990\",\n      \"61a5ce58c5d4795761045991\"\n    ],\n    \"authorId\": {\n      \"email\": \"johndoe@example.com\",\n      \"locale\": \"en_GB\",\n      \"timezone\": \"Asia/Kolkata\",\n      \"name\": {\n        \"fullName\": \"John Doe\"\n      }\n    },\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n    \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Create a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"var id = jsonData.id\r",
											"\r",
											"\r",
											"pm.collectionVariables.set(\"note_id\", id);\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Author ID\", function () {\r",
											"    pm.expect(jsonData.authorId).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Family Name\", function () {\r",
											"    pm.expect(jsonData.author.name.familyName).to.eql(\"Ezirim\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Given Name\", function () {\r",
											"    pm.expect(jsonData.author.name.givenName).to.eql(\"Elizabeth\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(id);\r",
											"console.log(jsonData.author.name.familyName);\r",
											"console.log(jsonData.author.name.givenName);\r",
											"\r",
											"//postman.setNextRequest(\"Get a note\")\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactIds\": [\n        5\n    ],\n    \"dealIds\": [],\n    \"companyIds\": [],\n    \"text\": \"<p>Testing Notes</p>\\n\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes"
									]
								}
							},
							"response": [
								{
									"name": "Created new note",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"61a5cd07ca1347c82306ad09\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"name": "Format is not supported",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes"
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Get a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"var id = jsonData.id;\r",
											"const fullName = jsonData.author.name.fullName;\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Author ID\", function () {\r",
											"    pm.expect(jsonData.authorId).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Full Name\", function () {\r",
											"    pm.expect(fullName).to.eql(fullName);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Tiome Zone\", function () {\r",
											"    pm.expect(jsonData.author.timezone).to.eql(\"Africa/Lagos\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(id);\r",
											"console.log(fullName);\r",
											"console.log(jsonData.author.timezone);\r",
											"\r",
											"//postman.setNextRequest(\"Update a note\")\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{note_id}}",
											"description": "(Required) Note ID to get"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the Note by id",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"id\": \"61a5cd07ca1347c82306ad09\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"authorId\": {\n    \"email\": \"johndoe@example.com\",\n    \"locale\": \"en_GB\",\n    \"timezone\": \"Asia/Kolkata\",\n    \"name\": {\n      \"fullName\": \"John Doe\"\n    }\n  },\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n  \"updatedAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to get"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Update a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"var id = jsonData.id;\r",
											"\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Author ID\", function () {\r",
											"    pm.expect(jsonData.authorId).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Text \", function () {\r",
											"    pm.expect(jsonData.text).to.eql(\"<p>Testing Notes under patch</p>\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"console.log(id);\r",
											"console.log(jsonData.text);\r",
											"\r",
											"//postman.setNextRequest(\"Delete a note\")\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n    \"text\": \"<p>Testing Notes under patch</p>\"\n\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{note_id}}",
											"description": "(Required) Note ID to update"
										}
									]
								}
							},
							"response": [
								{
									"name": "Note updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								},
								{
									"name": "Format is not supported",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"In communication with client for resolution of queries.\",\n  \"contactIds\": [\n    247,\n    1,\n    2\n  ],\n  \"dealIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ],\n  \"companyIds\": [\n    \"61a5ce58c5d4795761045990\",\n    \"61a5ce58c5d4795761045991\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to update"
												}
											]
										}
									},
									"status": "Unsupported Media Type",
									"code": 415,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"The format not supported for deserialization.\"\n}"
								}
							]
						},
						{
							"name": "Delete a note",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Verify status code', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//postman.setNextRequest(null)\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/notes/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"notes",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{note_id}}",
											"description": "(Required) Note ID to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when item deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid.\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/notes/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"notes",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) Note ID to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Get all files",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const createdAt = jsonData[0].createdAt;\r",
											"const fileIdArray = jsonData;\r",
											"\r",
											"for (let i = 0; i < fileIdArray.length; i++) {\r",
											"    const id = fileIdArray[i].id;\r",
											"    console.log(`file ID for item ${i + 1}: ${id}`);\r",
											"}\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify file ID\", function () {\r",
											"    pm.expect(jsonData[0].createdAt).to.eql(createdAt);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Company ID\", function () {\r",
											"    pm.expect(jsonData[0].companyId).to.eql(jsonData[0].companyId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"//postman.setNextRequest(\"Upload a file\")\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									],
									"query": [
										{
											"key": "entity",
											"value": "deals",
											"description": "Filter by file entity type",
											"disabled": true
										},
										{
											"key": "entityIds",
											"value": "",
											"description": "Filter by file entity IDs",
											"disabled": true
										},
										{
											"key": "dateFrom",
											"value": "1677168398000",
											"description": "dateFrom to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "dateTo",
											"value": "1677254798000",
											"description": "dateTo to date range filter type (timestamp in milliseconds)",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order. Default order is **descending** by creation if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns files list with filters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  },\n  {\n    \"name\": \"example.png\",\n    \"authorId\": \"61a5ce58y5d4795761045991\",\n    \"contactId\": 1,\n    \"dealId\": \"61a5ce58c5d4795761045991\",\n    \"companyId\": \"61a5ce58c5d4795761045991\",\n    \"size\": 10,\n    \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n  }\n]"
								},
								{
									"name": "Returned when query params are invalid",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files?entity=deals&entityIds=veniam elit in&dateFrom=-41398727&dateTo=-41398727&offset=13396752&limit=50&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											],
											"query": [
												{
													"key": "entity",
													"value": "deals"
												},
												{
													"key": "entityIds",
													"value": "veniam elit in"
												},
												{
													"key": "dateFrom",
													"value": "-41398727"
												},
												{
													"key": "dateTo",
													"value": "-41398727"
												},
												{
													"key": "offset",
													"value": "13396752"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Not valid data.\"\n}"
								}
							]
						},
						{
							"name": "Upload a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id;\r",
											"const name  = jsonData.name;\r",
											"const authorId  = jsonData.authorId;\r",
											"const companyId  = jsonData.companyId;\r",
											"\r",
											"\r",
											"\r",
											"pm.environment.set(\"fileid\", id);\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify File ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify File Name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(name);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Author ID\", function () {\r",
											"    pm.expect(jsonData.authorId).to.eql(authorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Company ID\", function () {\r",
											"    pm.expect(jsonData.companyId).to.eql(companyId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"console.log(id);\r",
											"console.log(name);\r",
											"console.log(authorId);\r",
											"console.log(companyId)\r",
											"\r",
											"\r",
											"//postman.setNextRequest(\"Download a file\")\r",
											"\r",
											"//postman.setNextRequest(\"Get file details\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) File data to create a file.",
											"type": "file",
											"src": "/C:/Users/EEzirim/Documents/TESTIFY/Testify-Automation_School/Module3/Module3B/API_Project/EmojiTrain.PNG"
										},
										{
											"key": "dealId",
											"value": "{{dealId}}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "contactId",
											"value": "27165486",
											"type": "text",
											"disabled": true
										},
										{
											"key": "companyId",
											"value": "656073344c0645730170cef9",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/crm/files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files"
									]
								}
							},
							"response": [
								{
									"name": "Returns the created File with additional details",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/crm/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) File data to create a file.",
													"type": "file",
													"src": []
												},
												{
													"key": "dealId",
													"value": "proident",
													"type": "text"
												},
												{
													"key": "contactId",
													"value": "27165486",
													"type": "text"
												},
												{
													"key": "companyId",
													"value": "nisi aliquip",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/crm/files",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Invalid deals ids format.\"\n}"
								}
							]
						},
						{
							"name": "Download a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"\r",
											"//postman.setNextRequest(\"Get file details\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fileid}}",
											"description": "(Required) File id to download."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns downloadable file link. Valid for next 5 minutes only.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"fileUrl\": \"https://storage.googleapis.com/sendinblue-app-crm.......-sample.pdf\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to download."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Get file details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify fullname\", function () {\r",
											"    pm.expect(jsonData.author.name.fullName).to.eql(\"Ezirim Elizabeth\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Time zone\", function () {\r",
											"    pm.expect(jsonData.author.timezone).to.eql(\"Africa/Lagos\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"console.log(jsonData.author.name.fullName);\r",
											"console.log(jsonData.author.timezone);\r",
											"\r",
											"//postman.setNextRequest(\"Delete a file\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/{{fileid}}/data",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										"{{fileid}}",
										"data"
									]
								}
							},
							"response": [
								{
									"name": "Returned when file is found.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"example.png\",\n  \"authorId\": \"61a5ce58y5d4795761045991\",\n  \"contactId\": 1,\n  \"dealId\": \"61a5ce58c5d4795761045991\",\n  \"companyId\": \"61a5ce58c5d4795761045991\",\n  \"size\": 10,\n  \"createdAt\": \"2017-05-01T17:05:03.000Z\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id/data",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id",
												"data"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to get file data."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						},
						{
							"name": "Delete a file",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"\r",
											"//postman.setNextRequest(null)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/crm/files/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"crm",
										"files",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{fileid}}",
											"description": "(Required) File id to delete."
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when file is deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Route attribute id is not valid\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/crm/files/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"crm",
												"files",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) File id to delete."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"Document not found\"\n}"
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "Messages",
					"item": [
						{
							"name": "Send a message as an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"const type  = jsonData.type\r",
											"const visitorId  = jsonData.visitorId\r",
											"const agentId  = jsonData.agentId\r",
											"\r",
											"pm.environment.set(\"message_Id\", id);\r",
											"pm.environment.set(\"agent_Id\",  agentId);\r",
											"pm.environment.set(\"visitor_Id\",  visitorId);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated message ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify User type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify visitor ID\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(visitorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify agent Id\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(agentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id);\r",
											"console.log(visitorId);\r",
											"console.log(agentId);\r",
											"\r",
											"//postman.setNextRequest(\"Get a message\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"//pm.environment.get(\"visitor_id\", visitorId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you, Madam?\",\n  \"agentEmail\": \"liz@getwear.com\",\n  \"agentName\": \"Liz\",\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages"
									]
								}
							},
							"response": [
								{
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Hello! How can I help you?\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"const type  = jsonData.type\r",
											"const visitorId  = jsonData.visitorId\r",
											"const agentId  = jsonData.agentId\r",
											"\r",
											"pm.test(\"Verify status code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated message ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify User type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify visitor ID\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(visitorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify agent Id\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(agentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id);\r",
											"console.log(visitorId);\r",
											"console.log(agentId);\r",
											"\r",
											"//postman.setNextRequest(\"Update a message sent by an agent\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{message_Id}}",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a message sent by an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"const type  = jsonData.type\r",
											"const visitorId  = jsonData.visitorId\r",
											"const agentId  = jsonData.agentId\r",
											"\r",
											"pm.test(\"Verify status code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated message ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify User type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify visitor ID\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(visitorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify agent Id\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(agentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(id);\r",
											"console.log(visitorId);\r",
											"console.log(agentId);\r",
											"console.log(responseCode);\r",
											"\r",
											"//postman.setNextRequest(\"Delete a message sent by an agent\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Good evening Sir/Madam! How can I help you?\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{message_Id}}",
											"description": "(Required) ID of the message"
										}
									]
								},
								"description": "Only agents’ messages can be edited."
							},
							"response": [
								{
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"eYBEm3gq3zc5ayE2g\",\n  \"type\": \"agent\",\n  \"text\": \"Hello! How can I help you?\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1482512803740,\n  \"receivedFrom\": \"SuperAwesomeHelpdesk\"\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Good morning! How can I help you?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a message sent by an agent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"console.log(responseCode);\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify status\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"//postman.setNextRequest(null)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{message_Id}}",
											"description": "(Required) ID of the message"
										}
									]
								},
								"description": "Only agents’ messages can be deleted."
							},
							"response": [
								{
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Status",
					"item": [
						{
							"name": "Sets agent’s status to online for 2-3 minutes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"agentId\": \"{{agent_Id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/agentOnlinePing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"agentOnlinePing"
									]
								},
								"description": "We recommend pinging this endpoint every minute for as long as the agent has to be considered online."
							},
							"response": [
								{
									"name": "Status of the agent was set successfully. Response body will be empty.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/agentOnlinePing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"agentOnlinePing"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"agentId\": \"d9nKoegKSjmCtyK78\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/agentOnlinePing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"agentOnlinePing"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Pushed messages",
					"item": [
						{
							"name": "Send an automated message to a visitor",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"const type  = jsonData.type\r",
											"const visitorId  = jsonData.visitorId\r",
											"const agentId  = jsonData.agentId\r",
											"\r",
											"pm.environment.set(\"pushedMessage_Id\", id);\r",
											"pm.environment.set(\"agent_Id\",  agentId);\r",
											"pm.environment.set(\"visitor_Id\",  visitorId);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated message ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify User type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify visitor ID\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(visitorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify agent Id\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(agentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id);\r",
											"console.log(visitorId);\r",
											"console.log(agentId);\r",
											"\r",
											"//postman.setNextRequest(\"Get an automated message\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"visitorId\": \"{{visitor_Id}}\",\n  \"text\": \"Your order has shipped! Here’s your tracking number : 9114 5847 3325 9667 4328 88\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages"
									]
								},
								"description": "Example of automated messages: order status, announce new features in your web app, etc."
							},
							"response": [
								{
									"name": "Newly created message is returned as a response",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"const type  = jsonData.type\r",
											"const visitorId  = jsonData.visitorId\r",
											"const agentId  = jsonData.agentId\r",
											"\r",
											"pm.environment.set(\"message_Id\", id);\r",
											"pm.environment.set(\"agent_Id\",  agentId);\r",
											"//pm.environment.set(\"visitor_Id\",  visitorId);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated message ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify User type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify visitor ID\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(visitorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify agent Id\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(agentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id);\r",
											"console.log(visitorId);\r",
											"console.log(agentId);\r",
											"\r",
											"//postman.setNextRequest(\"Update an automated message\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pushedMessage_Id}}",
											"description": "(Required) ID of the message sent previously"
										}
									]
								}
							},
							"response": [
								{
									"name": "Requested message is returned as a response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 3325 9667 4328 88\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message sent previously"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id\r",
											"const type  = jsonData.type\r",
											"const visitorId  = jsonData.visitorId\r",
											"const agentId  = jsonData.agentId\r",
											"\r",
											"pm.environment.set(\"message_Id\", id);\r",
											"pm.environment.set(\"agent_Id\",  agentId);\r",
											"//pm.environment.set(\"visitor_Id\",  visitorId);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated message ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify User type\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(\"agent\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify visitor ID\", function () {\r",
											"    pm.expect(jsonData.visitorId).to.eql(visitorId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify agent Id\", function () {\r",
											"    pm.expect(jsonData.agentId).to.eql(agentId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id);\r",
											"console.log(visitorId);\r",
											"console.log(agentId);\r",
											"\r",
											"//postman.setNextRequest(\"Delete an automated message\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"text\": \"Your order has shipped/sent! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pushedMessage_Id}}",
											"description": "(Required) ID of the message"
										}
									]
								}
							},
							"response": [
								{
									"name": "Updated message is returned as a response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"AXCR3k9bpSY7bpuh7\",\n  \"type\": \"agent\",\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\",\n  \"visitorId\": \"kZMvWhf8npAu3H6qd57w2Hv6nh6rnxvg\",\n  \"agentId\": \"d9nKoegKSjmCtyK78\",\n  \"createdAt\": 1470222622433,\n  \"isPushed\": true\n}"
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"text\": \"Your order has shipped! Here’s your tracking number: 9114 5847 4668 7775 9233 54\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an automated message",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"console.log(responseCode);\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify status\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"//postman.setNextRequest(null)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"conversations",
										"pushedMessages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{pushedMessage_Id}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "The message was deleted from the conversation",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Returned when invalid data posted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Returned when item not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/conversations/pushedMessages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"conversations",
												"pushedMessages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "veniam elit in",
													"description": "(Required) ID of the message"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			],
			"description": "With our comprehensive API offering, you can tailor Conversations to your needs:\n\n- The [**Javascript API**](https://developers.sendinblue.com/docs/javascript-api-reference) gives you full control over the chat widget. Read our guide on [customizing the chat widget](https://developers.sendinblue.com/docs/customize-the-widget) for use cases and explanations.\n- The [**REST API**](https://developers.sendinblue.com/docs/rest-api-reference) allows you to programmatically send, retrieve and manage chat messages, among other endpoints.\n- The [**webhooks**](https://developers.sendinblue.com/docs/conversations-webhooks) are for integrating Conversations with your system or other services, such as help desks.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "eCommerce",
			"item": [
				{
					"name": "Orders",
					"item": [
						{
							"name": "Create/update an order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"#109\",\n  \"status\": \"completed\",\n  \"amount\": 160.96,\n  \"createdAt\": \"2023-01-10T03:20:04Z\",\n  \"updatedAt\": \"2023-01-10T03:20:04Z\",\n  \"products\": [\n    {\n      \"productId\": \"41498620592335\",\n      \"quantity\": 2,\n      \"price\":200.89\n    },\n    {\n      \"productId\": \"41498620559567\",\n      \"quantity\": 2,\n      \"variantId\": \"76337-dvvkt\",\n      \"price\":400\n    }\n  ],\n  \"email\": \"patricia@tremblay.net\",\n  \"billing\": {\n    \"address\": \"43411 Braun Circle\",\n    \"city\": \"Gerrybury\",\n    \"countryCode\": \"GE\",\n    \"phone\": \"2901692763956\",\n    \"postcode\": \"07366-7886\",\n    \"paymentMethod\": \"Pay Pal\",\n    \"region\": \"Florida\"\n  },\n  \"coupons\": [\n    \"WINTER\",\n    \"15OFF\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										"status"
									]
								}
							},
							"response": [
								{
									"name": "Order Event posted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"14\",\n  \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n  \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n  \"status\": \"completed\",\n  \"amount\": 308.42,\n  \"products\": [\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    },\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    }\n  ],\n  \"email\": \"example@sendinblue.com\",\n  \"billing\": {\n    \"address\": \"15 Somewhere Road, Brynmenyn\",\n    \"city\": \"Basel\",\n    \"countryCode\": \"CA\",\n    \"phone\": \"01559 032133\",\n    \"postCode\": \"4052\",\n    \"paymentMethod\": \"PayPal\",\n    \"region\": \"Northwestern Switzerland\"\n  },\n  \"coupons\": [\n    \"EASTER15OFF\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"status"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"14\",\n  \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n  \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n  \"status\": \"completed\",\n  \"amount\": 308.42,\n  \"products\": [\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    },\n    {\n      \"productId\": \"P1\",\n      \"quantity\": 10,\n      \"price\": 99.99,\n      \"variantId\": \"P100\"\n    }\n  ],\n  \"email\": \"example@sendinblue.com\",\n  \"billing\": {\n    \"address\": \"15 Somewhere Road, Brynmenyn\",\n    \"city\": \"Basel\",\n    \"countryCode\": \"CA\",\n    \"phone\": \"01559 032133\",\n    \"postCode\": \"4052\",\n    \"paymentMethod\": \"PayPal\",\n    \"region\": \"Northwestern Switzerland\"\n  },\n  \"coupons\": [\n    \"EASTER15OFF\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"status"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create orders in batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"orders\": [\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    },\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    }\n  ],\n  \"notifyUrl\": \"https://en.wikipedia.org/wiki/Webhook\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/status/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										"status",
										"batch"
									]
								}
							},
							"response": [
								{
									"name": "batch id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \" \"\n        },\n        {\n          \"value\": \" \"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \" \"\n        },\n        \"city\": {\n          \"value\": \" \"\n        },\n        \"countryCode\": {\n          \"value\": \" \"\n        },\n        \"phone\": {\n          \"value\": \" \"\n        },\n        \"postCode\": {\n          \"value\": \" \"\n        },\n        \"paymentMethod\": {\n          \"value\": \" \"\n        },\n        \"region\": {\n          \"value\": \" \"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    },\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \" \"\n        },\n        {\n          \"value\": \" \"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \" \"\n        },\n        \"city\": {\n          \"value\": \" \"\n        },\n        \"countryCode\": {\n          \"value\": \" \"\n        },\n        \"phone\": {\n          \"value\": \" \"\n        },\n        \"postCode\": {\n          \"value\": \" \"\n        },\n        \"paymentMethod\": {\n          \"value\": \" \"\n        },\n        \"region\": {\n          \"value\": \" \"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    }\n  ],\n  \"notifyUrl\": \"https://en.wikipedia.org/wiki/Webhook\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/status/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"status",
												"batch"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"batchId\": 67473922.20865113\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"orders\": [\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    },\n    {\n      \"id\": \"14\",\n      \"createdAt\": \"2021-07-29T20:59:23.383Z\",\n      \"updatedAt\": \"2021-07-30T10:59:23.383Z\",\n      \"status\": \"completed\",\n      \"amount\": 308.42,\n      \"products\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"email\": \"example@sendinblue.com\",\n      \"billing\": {\n        \"address\": {\n          \"value\": \"\"\n        },\n        \"city\": {\n          \"value\": \"\"\n        },\n        \"countryCode\": {\n          \"value\": \"\"\n        },\n        \"phone\": {\n          \"value\": \"\"\n        },\n        \"postCode\": {\n          \"value\": \"\"\n        },\n        \"paymentMethod\": {\n          \"value\": \"\"\n        },\n        \"region\": {\n          \"value\": \"\"\n        }\n      },\n      \"coupons\": [\n        \"EASTER15OFF\"\n      ]\n    }\n  ],\n  \"notifyUrl\": \"https://en.wikipedia.org/wiki/Webhook\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/status/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												"status",
												"batch"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"description": "You can manage your orders seamlessly through the eCommerce platform. You can see all the endpoints for eCommerce order management in the [API reference here.](https://developers.sendinblue.com/reference/post_ecommerce-activate)"
				},
				{
					"name": "Categories",
					"item": [
						{
							"name": "Get all categories",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "ids",
											"value": " ",
											"description": "Filter by category ids",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "All categories listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"categories\": [\n    {\n      \"id\": 19,\n      \"name\": \"Food\",\n      \"url\": \"http://mydomain.com/cagetory/food\",\n      \"modifiedAt\": \"2022-03-03T14:48:31.867Z\",\n      \"createdAt\": \"2021-12-31T11:42:35.638Z\"\n    },\n    {\n      \"id\": 20,\n      \"name\": \"clothing\",\n      \"url\": \"http://mydomain.com/cagetory/clothing\",\n      \"modifiedAt\": \"2022-03-03T14:48:31.867Z\",\n      \"createdAt\": \"2021-12-31T11:42:35.638Z\"\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create/update a category",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"4ym78sfr8@VaAMB.xgn\",\n  \"name\": \"Electronics\",\n  \"url\": \"http://mydomain.com/category/electronics\",\n  \"updateEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories"
									]
								}
							},
							"response": [
								{
									"name": "Category created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"4ym78sfr8@VaAMB.xgn\",\n  \"name\": \"Electronics\",\n  \"url\": \"http://mydomain.com/category/electronics\",\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Category updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"4ym78sfr8@VaAMB.xgn\",\n  \"name\": \"Electronics\",\n  \"url\": \"http://mydomain.com/category/electronics\",\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create categories in batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"categories\": [\n    {\n      \"id\": \"cI5vQG@akAvYs.aakp\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    },\n    {\n      \"id\": \"lw76jTxBp@ZL.vlo\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    }\n  ],\n  \"updateEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/categories/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										"batch"
									]
								}
							},
							"response": [
								{
									"name": "Category created and updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    {\n      \"id\": \"N9JVW1@Tv.muzn\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    },\n    {\n      \"id\": \"aCHK9Hu@JnFDbgWZnFTvPaDMqfCOv.hs\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    }\n  ],\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/categories/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												"batch"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"createdCount\": 2,\n  \"updatedCount\": 7\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"categories\": [\n    {\n      \"id\": \"N9JVW1@Tv.muzn\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    },\n    {\n      \"id\": \"aCHK9Hu@JnFDbgWZnFTvPaDMqfCOv.hs\",\n      \"name\": \"Electronics\",\n      \"url\": \"http://mydomain.com/category/electronics\"\n    }\n  ],\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/categories/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												"batch"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a category details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/categories/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"categories",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) Category ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Category informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"C11\",\n  \"name\": \"Electronics\",\n  \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n  \"url\": \"http://mydomain.com/cagetory/clothing\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Category id not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Category ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"description": "After accessing the eCommerce platform you can start defining the categories that your products will be associated to. Note that this should ideally be the first object type you import into your account."
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Get all products",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "ids",
											"value": "",
											"description": "Filter by product ids",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "All products listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"products\": [\n    {\n      \"id\": 7498033266862,\n      \"name\": \"Alpina Panoma Classic\",\n      \"url\": \"https://mydomain.com/products/alpina-panoma-classic\",\n      \"sku\": \"186622-9\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"categories\": [\n        \"279638835374\",\n        \"279502848174\"\n      ],\n      \"price\": 49.95,\n      \"modifiedAt\": \"2022-06-30T10:29:16.078Z\",\n      \"createdAt\": \"2022-06-30T10:29:16.078Z\",\n      \"s3Original\": \"https://img-ecom.mailinblue.com/path-to-original/img.jpg\",\n      \"s3ThumbAnalytics\": \"https://img-ecom.mailinblue.com/path-to-analytics/img.jpg\",\n      \"s3ThumbEditor\": \"https://img-ecom.mailinblue.com/path-to-editor/img.jpg\"\n    },\n    {\n      \"id\": 7498033266862,\n      \"name\": \"Alpina Panoma Classic2\",\n      \"url\": \"https://mydomain.com/products/alpina-panoma-classic2\",\n      \"sku\": \"186622-9\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"categories\": [\n        \"2d79638835374\",\n        \"27d9502848174\"\n      ],\n      \"price\": 49.95,\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      },\n      \"modifiedAt\": \"2022-06-30T10:29:16.078Z\",\n      \"createdAt\": \"2022-06-30T10:29:16.078Z\",\n      \"s3Original\": \"https://img-ecom.mailinblue.com/path-to-original/img.jpg\",\n      \"s3ThumbAnalytics\": \"https://img-ecom.mailinblue.com/path-to-analytics/img.jpg\",\n      \"s3ThumbEditor\": \"https://img-ecom.mailinblue.com/path-to-editor/img.jpg\"\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products?limit=50&offset=0&sort=desc&ids=laboris ad culpa occaecat non&ids=ex velit i",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "ids",
													"value": "laboris ad culpa occaecat non"
												},
												{
													"key": "ids",
													"value": "ex velit i"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a product's details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "",
											"description": "(Required) Product ID"
										}
									]
								}
							},
							"response": [
								{
									"name": "Product informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Product ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"P11\",\n  \"name\": \"Iphone 11\",\n  \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n  \"s3ThumbAnalytics\": \"irure eiusmod ut est\",\n  \"s3ThumbEditor\": \"enim incididunt\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"dolore officia sit\",\n  \"price\": 61347100.411326766,\n  \"categories\": [\n    \"dolore eiusmod exercitation\",\n    \"in\"\n  ],\n  \"parentId\": \"Excepteur irure minim\",\n  \"s3Original\": \"consectetur velit cillum\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Product ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Product's id not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "laborum occaecat nisi Ut eu",
													"description": "(Required) Product ID"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create/update a product",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"P11\",\n  \"name\": \"IPhone 11\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"SKU523452235\",\n  \"price\": -48445562.575949855,\n  \"categories\": [\n    \"id\",\n    \"v\"\n  ],\n  \"parentId\": \"minim amet\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  },\n  \"updateEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									]
								}
							},
							"response": [
								{
									"name": "Product created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"P11\",\n  \"name\": \"Iphone 11\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"deserunt\",\n  \"price\": -65097201.96352307,\n  \"categories\": [\n    \"Ut\",\n    \"ex id aliqua\"\n  ],\n  \"parentId\": \"irure ex laborum\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  },\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Product updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"P11\",\n  \"name\": \"Iphone 11\",\n  \"url\": \"http://mydomain.com/product/electronics/product1\",\n  \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n  \"sku\": \"deserunt\",\n  \"price\": -65097201.96352307,\n  \"categories\": [\n    \"Ut\",\n    \"ex id aliqua\"\n  ],\n  \"parentId\": \"irure ex laborum\",\n  \"metaInfo\": {\n    \"description\": \"Shoes for sports\",\n    \"brand\": \"addidas\"\n  },\n  \"updateEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/products",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create products in batch",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"products\": [\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"SKU5234522331\",\n      \"price\": 9965553.347645134,\n      \"categories\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"parentId\": \"GH56214\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"adidas\"\n      }\n    },\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"SKU523452235\",\n      \"price\": -2971697.3335331976,\n      \"categories\": [\n        {\n          \"value\": \"\"\n        },\n        {\n          \"value\": \"\"\n        }\n      ],\n      \"parentId\": \"HG3561\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    }\n  ],\n  \"updateEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/products/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										"batch"
									]
								}
							},
							"response": [
								{
									"name": "Products created and updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"products\": [\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"est anim labore proident i\",\n      \"price\": 49031262.39617145,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"sunt pariatur sint cillum fugiat\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    },\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"nulla\",\n      \"price\": 82197173.7573795,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"aliquip ullamco sint\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    }\n  ],\n  \"updateEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/products/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"batch"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"createdCount\": 2,\n  \"updatedCount\": 7\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"products\": [\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"est anim labore proident i\",\n      \"price\": 49031262.39617145,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"sunt pariatur sint cillum fugiat\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    },\n    {\n      \"id\": \"P11\",\n      \"name\": \"Iphone 11\",\n      \"url\": \"http://mydomain.com/product/electronics/product1\",\n      \"imageUrl\": \"http://mydomain.com/product-absoulte-url/img.jpeg\",\n      \"sku\": \"nulla\",\n      \"price\": 82197173.7573795,\n      \"categories\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"parentId\": \"aliquip ullamco sint\",\n      \"metaInfo\": {\n        \"description\": \"Shoes for sports\",\n        \"brand\": \"addidas\"\n      }\n    }\n  ],\n  \"updateEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/products/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												"batch"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					],
					"description": "After [importing your product categories](https://developers.sendinblue.com/reference/createupdatecategory) you can easily manage your product inventory through the following steps. \n\n## Requirements\n\nTo create and manage your eCommerce store products you need to have access to the Sendinblue eCommerce app. If you have not already activated the eCommerce platform on your account you can go to [eCommerce > Add the eCommerce App.](https://developers.sendinblue.com/reference/post_ecommerce-activate)"
				},
				{
					"name": "Activate eCommerce platform on your account",
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "key",
									"value": "api-key",
									"type": "string"
								},
								{
									"key": "value",
									"value": "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",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/ecommerce/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"ecommerce",
								"activate"
							]
						}
					},
					"response": []
				}
			],
			"description": "You can integrate your eCommerce shop with Sendinblue and benefit from great analytics and extended segmentation capabilities. \n\n- Analyse your customer conversions in the dashboard from new and returning customers along with the metrics about your most purchased product.\n- Monitor specific metrics on your products like the amount of revenue you got from a key products etc.\n- Retention analysis for your customers. Understand how likely is for your customers to visit again your store.\n    \n\n**For more details you can follow our eCommerce integration guide in the** [**Developers Portal**](https://developers.sendinblue.com/docs/import-your-products)."
		},
		{
			"name": "Transactional",
			"item": [
				{
					"name": "Email API",
					"item": [
						{
							"name": "Send a transactional email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const jsonData = pm.response.json();\r",
											"const expectedStatusCode = 201;\r",
											"const messageId  = jsonData.messageId;\r",
											"\r",
											"pm.environment.set(\"messageId\", messageId);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"  pm.expect(pm.response.code).to.eql(expectedStatusCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify newly generated ID\", function () {\r",
											"    pm.expect(jsonData.messageId).to.eql(messageId);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"console.log(messageId)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sender\": {\n        \"name\": \"DVPOS POS service\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard BCC\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"howard_weng@datavan.com.tw\",\n            \"name\": \"Howard CC\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n    },\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email"
									]
								}
							},
							"response": [
								{
									"name": "Batch send transactional emails",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"sender\": {\n        \"name\": \"Mary from MyShop\",\n        \"email\": \"no-reply@myshop.com\"\n    },\n    \"to\": [\n        {\n            \"email\": \"jimmy98@example.com\",\n            \"name\": \"Jimmy\"\n        }\n    ],\n    \"bcc\": [\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        },\n        {\n            \"email\": \"helen9766@example.com\",\n            \"name\": \"Helen\"\n        }\n    ],\n    \"cc\": [\n        {\n            \"email\": \"ann6533@example.com\",\n            \"name\": \"Ann\"\n        }\n    ],\n    \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>This is sample HTML</h1> </html>\",\n    \"subject\": \"Login Email confirmation\",\n    \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n    },\n    \"attachment\": [\n        {\n            \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.png\",\n            \"name\": \"myAttachment.png\"\n        }\n    ],\n    \"params\": {\n        \"name\": \"Ann\",\n        \"greeting\": \"Hello fellow customer!\"\n    },\n    \"messageVersions\": [\n        {\n            \"to\": [\n                {\n                    \"email\": \"jimmy98@example.com\",\n                    \"name\": \"Jimmy\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Jimmy\",\n                \"greeting\": \"This is a custom greeting for Jimmy\"\n            },\n            \"replyTo\": {\n                \"email\": \"ann6533@example.com\",\n                \"name\": \"Ann\"\n            },\n            \"subject\": \"Login Email confirmation\"\n        },\n        {\n            \"to\": [\n                {\n                    \"email\": \"mark@example.com\",\n                    \"name\": \"Mark\"\n                }\n            ],\n            \"params\": {\n                \"name\": \"Mark\",\n                \"greeting\": \"This is a custom greeting for Mark\"\n            },\n            \"bcc\": [\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                },\n                {\n                    \"email\": \"helen9766@example.com\",\n                    \"name\": \"Helen\"\n                }\n            ],\n            \"cc\": [\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                },\n                {\n                    \"email\": \"ann6533@example.com\",\n                    \"name\": \"Ann\"\n                }\n            ],\n            \"subject\": \"Login Email confirmation\"\n        }\n    ],\n    \"tags\": [\n        \"tag1\",\n        \"tag2\"\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"_postman_previewlanguage": "Text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "transactional email sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"name": "transactional email scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": \"<201798300811.5787683@relay.domain.com>\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"no-reply@myshop.com\",\n    \"id\": 2\n  },\n  \"to\": [\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    },\n    {\n      \"email\": \"jimmy98@example.com\",\n      \"name\": \"Jimmy\"\n    }\n  ],\n  \"bcc\": [\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    },\n    {\n      \"email\": \"helen9766@example.com\",\n      \"name\": \"Helen\"\n    }\n  ],\n  \"cc\": [\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    },\n    {\n      \"email\": \"ann6533@example.com\",\n      \"name\": \"Ann\"\n    }\n  ],\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"textContent\": \"Please confirm your email address by clicking on the link https://text.domain.com\",\n  \"subject\": \"Login Email confirmation\",\n  \"replyTo\": {\n    \"email\": \"ann6533@example.com\",\n    \"name\": \"Ann\"\n  },\n  \"attachment\": [\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    },\n    {\n      \"url\": \"https://attachment.domain.com/myAttachmentFromUrl.jpg\",\n      \"content\": \"b3JkZXIucGRm\",\n      \"name\": \"myAttachment.png\"\n    }\n  ],\n  \"headers\": {\n    \"ut_86_\": {}\n  },\n  \"templateId\": 2,\n  \"params\": {\n    \"Utf08\": {}\n  },\n  \"messageVersions\": [\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"dolore__b\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    },\n    {\n      \"to\": [\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        },\n        {\n          \"email\": \"jimmy98@example.com\",\n          \"name\": \"Jimmy\"\n        }\n      ],\n      \"params\": {\n        \"Lorem749\": {}\n      },\n      \"bcc\": [\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        },\n        {\n          \"email\": \"helen9766@example.com\",\n          \"name\": \"Helen\"\n        }\n      ],\n      \"cc\": [\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        },\n        {\n          \"email\": \"ann6533@example.com\",\n          \"name\": \"Ann\"\n        }\n      ],\n      \"replyTo\": {\n        \"email\": \"ann6533@example.com\",\n        \"name\": \"Ann\"\n      },\n      \"subject\": \"Login Email confirmation\"\n    }\n  ],\n  \"tags\": [\n    \"tag1\",\n    \"tag1\"\n  ],\n  \"scheduledAt\": \"2022-04-05T12:30:00+02:00\",\n  \"batchId\": \"5c6cfa04-eed9-42c2-8b5c-6d470d978e9d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of transactional emails on the basis of allowed filters",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/smtp/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"smtp",
										"emails"
									],
									"query": [
										{
											"key": "email",
											"value": "test123@gmail.com",
											"description": "**Mandatory if templateId and messageId are not passed in query filters.** Email address to which transactional email has been sent.\n",
											"disabled": true
										},
										{
											"key": "templateId",
											"value": "155",
											"description": "**Mandatory if email and messageId are not passed in query filters.** Id of the template that was used to compose transactional email.\n",
											"disabled": true
										},
										{
											"key": "messageId",
											"value": "22<202311301220.72643040456@smtp-relay.mailin.fr>",
											"description": "**Mandatory if templateId and email are not passed in query filters.** Message ID of the transactional email sent.\n",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "2023-11-02",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the list. **Maximum time period that can be selected is one month**.\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "2023-12-02",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the list. **Maximum time period that can be selected is one month.**\n",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number of documents returned per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the list of emails for past 30 days by default. To retrieve emails before that time, please pass startDate and endDate in query filters."
							},
							"response": [
								{
									"name": "List of transactional emails",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=&templateId=13396752&messageId=&startDate=&endDate=&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": ""
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "messageId",
													"value": ""
												},
												{
													"key": "startDate",
													"value": ""
												},
												{
													"key": "endDate",
													"value": ""
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 120,\n  \"transactionalEmails\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"subject\": \"summer camp\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5787683@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-std2341\",\n      \"date\": \"2019-05-25T11:53:26.000Z\"\n    },\n    {\n      \"email\": \"test@test.com\",\n      \"subject\": \"details verification\",\n      \"templateId\": 15,\n      \"messageId\": \"<201798300811.5700093@relay.domain.com>\",\n      \"uuid\": \"5a78c-209ok98262910-s99a341\",\n      \"date\": \"2019-05-25T07:28:11.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails?email=&templateId=13396752&endDate=&sort=desc&limit=500&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails"
											],
											"query": [
												{
													"key": "email",
													"value": ""
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "endDate",
													"value": ""
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete scheduled emails by batchId or messageId",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/email/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"email",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "64fb5827-d1f2-4ccc-9837-eafac9d18d72",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
										}
									]
								},
								"description": "Delete scheduled batch of emails by batchId or single scheduled email by messageId"
							},
							"response": [
								{
									"name": "Scheduled email(s) deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/email/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"email",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the personalized content of a sent transactional email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Email Address\", function () {\r",
											"    pm.expect(jsonData.email).to.eql(\"testcad77@gmail.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Subject\", function () {\r",
											"    pm.expect(jsonData.subject).to.eql(\"New one\");\r",
											"});\r",
											"pm.test(\"Verify Date\", function () {\r",
											"    pm.expect(jsonData.date).to.eql(\"2023-11-30T13:17:08.296+01:00\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify First event\", function () {\r",
											"    pm.expect(jsonData.events[0]).to.eql(jsonData.events[0]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Second event\", function () {\r",
											"    pm.expect(jsonData.events[1]).to.eql(jsonData.events[1]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Template ID\", function () {\r",
											"    pm.expect(jsonData.templateId).to.eql(10);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(jsonData.email);\r",
											"console.log(jsonData.events[0]);\r",
											"console.log(jsonData.events[1]);\r",
											"console.log(jsonData.templateId)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emails/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emails",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "64fb5827-d1f2-4ccc-9837-eafac9d18d72",
											"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Transactional email content",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emails/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emails",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) Unique id of the transactional email that has been sent to a particular contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"abc@example.com\",\n  \"subject\": \"Summer Camps\",\n  \"templateId\": 12,\n  \"date\": \"2016-02-25T11:53:26.000Z\",\n  \"events\": [\n    {\n      \"name\": \"sent\",\n      \"time\": \"2016-02-25T11:53:26.000Z\"\n    },\n    {\n      \"name\": \"delivered\",\n      \"time\": \"2016-02-25T11:55:26.000Z\"\n    },\n    {\n      \"name\": \"opened\",\n      \"time\": \"2016-02-26T09:53:26.000Z\"\n    }\n  ],\n  \"body\": \"<!DOCTYPE html> <html> <body> <h1>Greetings from the team</h1> <p>This is the actual html content sent</p> </body> </html>\"\n}"
								}
							]
						},
						{
							"name": "Fetch scheduled emails by batchId or messageId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/emailStatus/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"emailStatus",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "2022-02-02",
											"description": "Mandatory if `endDate` is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Can be maximum 30 days older tha current date.",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "2022-03-02",
											"description": "Mandatory if `startDate` is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed. Not valid when identifier is `messageId`.",
											"disabled": true
										},
										{
											"key": "status",
											"value": "queued",
											"description": "Filter the records by `status` of the scheduled email batch or message. Not valid when identifier is `messageId`.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page. Not valid when identifier is `messageId`.",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page.  Not valid when identifier is `messageId`.",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "<202311301220.72643040456@smtp-relay.mailin.fr>",
											"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
										}
									]
								},
								"description": "Fetch scheduled batch of emails by batchId or single scheduled email by messageId (Can retrieve data upto 30 days old)"
							},
							"response": [
								{
									"name": "Scheduled email batches",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 3,\n  \"batches\": [\n    {\n      \"scheduledAt\": \"2022-02-28T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"status\": \"queued\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-24T11:36:43.576000000Z\",\n      \"status\": \"processed\"\n    },\n    {\n      \"scheduledAt\": \"2022-02-26T11:36:43.576000000Z\",\n      \"createdAt\": \"2022-02-25T11:36:43.576000000Z\",\n      \"status\": \"inProgress\"\n    }\n  ]\n}"
								},
								{
									"name": "Invalid parameters passed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Record(s) for identifier not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/emailStatus/:identifier?startDate=2022-02-02&endDate=2022-03-02&sort=desc&status=queued&limit=100&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"emailStatus",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "2022-02-02"
												},
												{
													"key": "endDate",
													"value": "2022-03-02"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "status",
													"value": "queued"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "4320f270-a4e3-4a2e-b591-edfe30a5e627",
													"description": "(Required) The `batchId` of scheduled emails batch (Should be a valid UUIDv4) or the `messageId` of scheduled email."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Templates",
					"item": [
						{
							"name": "Get the list of email templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const count = jsonData.count;\r",
											"\r",
											"const templates = jsonData.templates[1];\r",
											"\r",
											"const cookies = pm.cookies.all();\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Count\", function () {\r",
											"    pm.expect(jsonData.count).to.eql(count);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify template\", function () {\r",
											"    pm.expect(jsonData.templates[1]).to.eql(templates);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(count);\r",
											"console.log(templates);\r",
											"console.log(cookies);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"warning": "This is a duplicate header and will be overridden by the api-key header generated by Postman.",
										"key": "api-key",
										"value": "{{Elizabeth-api-key}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									],
									"query": [
										{
											"key": "templateStatus",
											"value": "false",
											"description": "Filter on the status of the template. Active = true, inactive = false",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email templates informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 2,\n  \"templates\": [\n    {\n      \"id\": 5,\n      \"name\": \"ChristomasTimeTemplate\",\n      \"subject\": \"Merry Christmas\",\n      \"isActive\": false,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Festival\",\n      \"htmlContent\": \"HTML CONTENT 1\",\n      \"createdAt\": \"2016-02-24T14:44:24.000Z\",\n      \"modifiedAt\": \"2016-02-24T15:37:11.000Z\"\n    },\n    {\n      \"id\": 12,\n      \"name\": \"SummerSales2017Template\",\n      \"subject\": \"Enjoy our summer Sales !\",\n      \"isActive\": true,\n      \"testSent\": false,\n      \"sender\": {\n        \"name\": \"John\",\n        \"email\": \"john.smith@example.com\",\n        \"id\": 23\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"\",\n      \"tag\": \"Summer\",\n      \"htmlContent\": \"HTML CONTENT 2\",\n      \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n      \"modifiedAt\": \"2016-02-25T11:53:26.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates?templateStatus=false&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											],
											"query": [
												{
													"key": "templateStatus",
													"value": "false"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create an email template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\n            //\"id\": 7,\n            \"name\": \"Email Transactional Template2\",\n            \"subject\": \"This is for API automation for email transactional template\",\n            \"isActive\": false,\n            \"testSent\": false,\n            \"sender\": {\n                \"name\": \"Testaholics\",\n                \"email\": \"testcad77@gmail.com\",\n                \"id\": 1\n            },\n            \"replyTo\": \"testcad77@gmail.com\",\n            \"toField\": \"\",\n            \"tag\": \"\",\n            \"htmlContent\": \"\",\n            \"createdAt\": \"2023-11-29T15:28:30.000+01:00\",\n            \"modifiedAt\": \"2023-11-29T15:28:30.000+01:00\"\n        }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"subject\": \"Thanks for your purchase !\",\n  \"templateName\": \"Order Confirmation - EN\",\n  \"tag\": \"OrderConfirmation\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns the template information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.id;\r",
											"const name = jsonData.name;\r",
											"const subject = jsonData.subject;\r",
											"const sendersName = jsonData.sender.name;\r",
											"const sendersEmail = jsonData.sender.email;\r",
											"const sendersId = jsonData.sender.id;\r",
											"const cookies = pm.cookies.all();\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Template ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Template Name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(name);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Template Subject\", function () {\r",
											"    pm.expect(jsonData.subject).to.eql(subject);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Sender's Name\", function () {\r",
											"    pm.expect(jsonData.sender.name).to.eql(sendersName);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Sender's Email\", function () {\r",
											"    pm.expect(jsonData.sender.email).to.eql(sendersEmail);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Sender's ID\", function () {\r",
											"    pm.expect(jsonData.sender.id).to.eql(sendersId);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(id);\r",
											"console.log(name);\r",
											"console.log(subject);\r",
											"console.log(sendersName);\r",
											"console.log(sendersEmail);\r",
											"console.log(sendersId);\r",
											"console.log(cookies);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "7",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email template informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 33,\n  \"name\": \"OrderConfirmation\",\n  \"subject\": \"Order Confirmation : Thanks for your Purchase !\",\n  \"isActive\": true,\n  \"testSent\": false,\n  \"sender\": {\n    \"name\": \"John\",\n    \"email\": \"john.smith@example.com\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"\",\n  \"tag\": \"\",\n  \"htmlContent\": \"HTML CONTENT 4\",\n  \"createdAt\": \"2016-02-25T11:53:26.000Z\",\n  \"modifiedAt\": \"2016-02-25T11:53:26.000Z\",\n  \"doiTemplate\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"\r",
											"/*pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});*/\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"testcad77@gmail.com\"\n    //\"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  //\"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  //\"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "10",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "transactional email template updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"OrderConfirmation\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"contact@myshop.com\",\n    \"id\": 3\n  },\n  \"templateName\": \"Order Confirmation - EN\",\n  \"htmlContent\": \"The order n°xxxxx has been confirmed. Thanks for your purchase\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"subject\": \"Thanks for your purchase !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"isActive\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an inactive email template",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "10",
											"description": "(Required) id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "Inactive transactional email template has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a template to your test list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const cookies = pm.cookies.all();\r",
											"const value = cookies.value;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify cookies parameter\", function () {\r",
											"    pm.expect(cookies.value).to.eql(value);\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(cookies);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailTo\": [\n    \"testcad77@gmail.com\",\n    \"testcad77@gmail.com\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"templates",
										":templateId",
										"sendTest"
									],
									"variable": [
										{
											"key": "templateId",
											"value": "10",
											"description": "(Required) Id of the template"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								},
								{
									"name": "Template ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/templates/:templateId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"templates",
												":templateId",
												"sendTest"
											],
											"variable": [
												{
													"key": "templateId",
													"value": "13396752",
													"description": "(Required) Id of the template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Statistics",
					"item": [
						{
							"name": "Get your transactional email activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date range\", function () {\r",
											"    pm.expect(jsonData.range).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(jsonData.range);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "",
											"description": "Tag of the emails",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 90 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"range\": \"2016-09-08|2017-04-28\",\n  \"requests\": 19887,\n  \"delivered\": 18996,\n  \"hardBounces\": 234,\n  \"softBounces\": 1533,\n  \"clicks\": 9987,\n  \"uniqueClicks\": 8766,\n  \"opens\": 17654,\n  \"uniqueOpens\": 13688,\n  \"spamReports\": 1,\n  \"blocked\": 2,\n  \"invalid\": 0,\n  \"unsubscribed\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your transactional email activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Date range\", function () {\r",
											"    pm.expect(jsonData.reports[0].date).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify repots\", function () {\r",
											"    pm.expect(jsonData.reports[1].date).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify report date\", function () {\r",
											"    pm.expect(jsonData.reports[2].date).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(jsonData.reports[0].date);\r",
											"console.log(jsonData.reports[1].date);\r",
											"console.log(jsonData.reports[2].date);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/statistics/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents returned per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD)\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD)\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "",
											"description": "Tag of the emails",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"clicks\": 1026,\n      \"uniqueClicks\": 720,\n      \"opens\": 5091,\n      \"uniqueOpens\": 2318,\n      \"spamReports\": 0,\n      \"blocked\": 519,\n      \"invalid\": 1,\n      \"unsubscribed\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"clicks\": 1514,\n      \"uniqueClicks\": 1090,\n      \"opens\": 10089,\n      \"uniqueOpens\": 4393,\n      \"spamReports\": 0,\n      \"blocked\": 920,\n      \"invalid\": 2,\n      \"unsubscribed\": 3\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/reports?limit=10&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your transactional email activity (unaggregated events)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const events = jsonData.events;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify first events\", function () {\r",
											"    pm.expect(jsonData.events).to.eql(events);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify MEssage ID\", function () {\r",
											"    pm.expect(jsonData.events[1].messageId).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Message ID\", function () {\r",
											"    pm.expect(jsonData.events[2].messageId).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(jsonData.events[0]);\r",
											"console.log(jsonData.events[1].messageId);\r",
											"console.log(jsonData.events[2].messageId);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.sendinblue.com/v3/smtp/statistics/events",
									"protocol": "https",
									"host": [
										"api",
										"sendinblue",
										"com"
									],
									"path": [
										"v3",
										"smtp",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "veniam elit in",
											"description": "**Mandatory if endDate is used.** Starting date of the report (YYYY-MM-DD). Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "veniam elit in",
											"description": "**Mandatory if startDate is used.** Ending date of the report (YYYY-MM-DD). Must be greater than equal to startDate\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "11",
											"description": "Number of days in the past including today (positive integer). _Not compatible with 'startDate' and 'endDate'_\n",
											"disabled": true
										},
										{
											"key": "email",
											"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml",
											"description": "Filter the report for a specific email addresses",
											"disabled": true
										},
										{
											"key": "event",
											"value": "invalid",
											"description": "Filter the report for a specific event type",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "veniam elit in",
											"description": "Filter the report for tags (serialized and urlencoded array)",
											"disabled": true
										},
										{
											"key": "messageId",
											"value": "202212281024.62341432715@smtp-relay.mailin.fr",
											"description": "Filter on a specific message id",
											"disabled": true
										},
										{
											"key": "templateId",
											"value": "13396752",
											"description": "Filter on a specific template id",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the aggregated stats for past 30 days by default if `startDate` and `endDate` OR `days` is not passed. The date range can not exceed 90 days"
							},
							"response": [
								{
									"name": "Email events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"deferred\",\n      \"reason\": \"Error connection timeout\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 4\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"date\": \"2017-03-13T16:30:00.000Z\",\n      \"messageId\": \"<201798300811.5787683@example.domain.com>\",\n      \"event\": \"delivered\",\n      \"tag\": \"OrderConfirmation\",\n      \"from\": \"john@example.com\",\n      \"templateId\": 5\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/statistics/events?limit=50&offset=0&startDate=veniam elit in&endDate=veniam elit in&days=13396752&email=2RGqj@OVCPsUENXisekVnjFnfB.xml&event=invalid&tags=veniam elit in&messageId=veniam elit in&templateId=13396752&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "email",
													"value": "2RGqj@OVCPsUENXisekVnjFnfB.xml"
												},
												{
													"key": "event",
													"value": "invalid"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "messageId",
													"value": "veniam elit in"
												},
												{
													"key": "templateId",
													"value": "13396752"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blocked Contacts",
					"item": [
						{
							"name": "Get the list of blocked or unsubscribed transactional contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Status code name has string\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"BL_EMAIL\",\r\n    \"is_all_selected\": false,\r\n    \"ids\": [\r\n        43,\r\n        40,\r\n        12,\r\n        10,\r\n        9\r\n    ],\r\n    \"fe_query\": {},\r\n    \"searchBy\": \"\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) from which you want to fetch the blocked or unsubscribed contacts\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) till which you want to fetch the blocked or unsubscribed contacts\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents returned per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page",
											"disabled": true
										},
										{
											"key": "senders",
											"value": "",
											"description": "Comma separated list of emails of the senders from which contacts are blocked or unsubscribed",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "List of blocked or unsubscribed transactional contacts",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 1,\n  \"contacts\": [\n    {\n      \"email\": \"abc@xyz.com\",\n      \"senderEmail\": \"ez312@gmal.com\",\n      \"reason\": {\n        \"message\": \"Admin blocked\",\n        \"code\": \"adminBlocked\"\n      },\n      \"blockedAt\": \"2017-05-01T12:30:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts?startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&senders=ullamco nostrud,occaecat in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "senders",
													"value": "ullamco nostrud,occaecat in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock or resubscribe a transactional contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 404;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(404);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Status code name has string\r",
											"pm.test(\"Status code name has Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedContacts",
										":email"
									],
									"variable": [
										{
											"key": "email",
											"value": "dre77@gmail.com",
											"description": "(Required) contact email (urlencoded) to unblock."
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact unblocked",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact email not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedContacts/:email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedContacts",
												":email"
											],
											"variable": [
												{
													"key": "email",
													"value": "veniam elit in",
													"description": "(Required) contact email (urlencoded) to unblock."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Blocked Domains",
					"item": [
						{
							"name": "Get the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const domains  = jsonData.domains;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Events\", function () {\r",
											"    pm.expect(jsonData.domains).to.eql(domains);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(domains);\r",
											"\r",
											"postman.setNextRequest(\"Add a new domain to the list of blocked domains\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains"
									]
								},
								"description": "Get the list of blocked domains"
							},
							"response": [
								{
									"name": "List of blocked domains",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"domains\": [\n    \"example.com\",\n    \"testdomain.com\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Add a new domain to the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"\r",
											"//postman.setNextRequest(\"Unblock an existing domain from the list of blocked domains\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Function to generate a random string\r",
											"function getRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Set the length of the random string\r",
											"const randomStringLength = 8; // Adjust the length as needed\r",
											"\r",
											"// Generate a random string\r",
											"const randomString = getRandomString(randomStringLength);\r",
											"\r",
											"// Combine the random string with \".com\"\r",
											"const randomDomain = `${randomString}.com`;\r",
											"\r",
											"// Log the generated random domain for reference\r",
											"console.log(`Random Domain: ${randomDomain}`);\r",
											"\r",
											"// Set the generated domain as an environment variable for future use\r",
											"pm.environment.set('generatedDomain', randomDomain);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"domain\": \"{{generatedDomain}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains"
									]
								},
								"description": "Blocks a new domain in order to avoid messages being sent to the same"
							},
							"response": [
								{
									"name": "Domain is successfully blocked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Unblock an existing domain from the list of blocked domains",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"/*pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});*/\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"//postman.setNextRequest(null)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"blockedDomains",
										":domain"
									],
									"variable": [
										{
											"key": "domain",
											"value": "{{generatedDomain}}",
											"description": "(Required) The name of the domain to be deleted"
										}
									]
								},
								"description": "Unblocks an existing domain from the list of blocked domains"
							},
							"response": [
								{
									"name": "Domain is successfully deleted from the list of blocked domains",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Domain not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/blockedDomains/:domain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"blockedDomains",
												":domain"
											],
											"variable": [
												{
													"key": "domain",
													"value": "veniam elit in",
													"description": "(Required) The name of the domain to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Logs",
					"item": [
						{
							"name": "Delete hardbounces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const cookies = pm.cookies.all()\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(cookies)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"startDate\": \"2023-11-29\",\n  \"endDate\": \"2023-11-30\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smtp/deleteHardbounces",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"deleteHardbounces"
									]
								},
								"description": "Delete hardbounces. To use carefully (e.g. in case of temporary ISP failures)"
							},
							"response": [
								{
									"name": "Hardbounces deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/deleteHardbounces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"deleteHardbounces"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"startDate\": \"nostrud magna\",\n  \"endDate\": \"incididunt\",\n  \"contactEmail\": \"alex76@example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smtp/deleteHardbounces",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"deleteHardbounces"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMTP transactional log",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smtp/log/:messageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smtp",
										"log",
										":messageId"
									],
									"variable": [
										{
											"key": "messageId",
											"value": "235614243234124@mailin.fr",
											"description": "(Required) MessageId of the transactional log to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Transactional Logs deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Message ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smtp/log/:messageId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smtp",
												"log",
												":messageId"
											],
											"variable": [
												{
													"key": "messageId",
													"value": "veniam elit in",
													"description": "(Required) MessageId of the transactional log to delete"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Inbound Email Parsing",
					"item": [
						{
							"name": "Get the list of all the events for the received emails.",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const events  = jsonData.events;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Events\", function () {\r",
											"    pm.expect(jsonData.events).to.eql(events);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(events);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events"
									],
									"query": [
										{
											"key": "sender",
											"value": "",
											"description": "Email address of the sender.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "1947-08-13",
											"description": "Mandatory if endDate is used. Starting date (YYYY-MM-DD) from which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "1947-08-13",
											"description": "Mandatory if startDate is used. Ending date (YYYY-MM-DD) till which you want to fetch the list. Maximum time period that can be selected is one month.",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "100",
											"description": "Number of documents returned per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document on the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will show the list of all the events for the received emails."
							},
							"response": [
								{
									"name": "List of events for received emails.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-1a825d56\",\n      \"date\": \"2017-03-11T12:30:00.000Z\",\n      \"sender\": \"john@example.com\",\n      \"recipient\": \"alexa@example.com\"\n    },\n    {\n      \"uuid\": \"1a825d56-029b-4a41-b8e4-61670463431b\",\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"sender\": \"alice@example.com\",\n      \"recipient\": \"bob@example.com\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events?sender=veniam elit in&startDate=1947-08-13&endDate=1947-08-13&limit=100&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events"
											],
											"query": [
												{
													"key": "sender",
													"value": "veniam elit in"
												},
												{
													"key": "startDate",
													"value": "1947-08-13"
												},
												{
													"key": "endDate",
													"value": "1947-08-13"
												},
												{
													"key": "limit",
													"value": "100"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Fetch all events history for one particular received email.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/events/:uuid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"events",
										":uuid"
									],
									"variable": [
										{
											"key": "uuid",
											"value": "",
											"description": "(Required) UUID to fetch events specific to recieved email"
										}
									]
								},
								"description": "This endpoint will show the list of all events history for one particular received email."
							},
							"response": [
								{
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"receivedAt\": \"2017-03-12T12:30:00.000Z\",\n  \"deliveredAt\": \"2017-03-12T12:31:00.000Z\",\n  \"sender\": \"alice@example.com\",\n  \"recipient\": \"bob@example.com\",\n  \"messageId\": \"<a_nice@message.id>\",\n  \"subject\": \"Re: Question about your API\",\n  \"attachments\": [\n    {\n      \"name\": \"invoice.pdf\",\n      \"contentType\": \"application/pdf\",\n      \"contentId\": null,\n      \"contentLength\": 12345\n    }\n  ],\n  \"logs\": [\n    {\n      \"date\": \"2017-03-12T12:30:00.000Z\",\n      \"type\": \"received\"\n    },\n    {\n      \"date\": \"2017-03-12T12:30:04.000Z\",\n      \"type\": \"webhookFailed\"\n    },\n    {\n      \"date\": \"2017-03-12T12:31:04.000Z\",\n      \"type\": \"webhookDelivered\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/events/:uuid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"events",
												":uuid"
											],
											"variable": [
												{
													"key": "uuid",
													"value": "veniam elit in",
													"description": "(Required) UUID to fetch events specific to recieved email"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Retrieve inbound attachment with download token.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inbound",
										"attachments",
										":downloadToken"
									],
									"variable": [
										{
											"key": "downloadToken",
											"value": "",
											"description": "(Required) Token to fetch a particular attachment"
										}
									]
								},
								"description": "This endpoint will retrieve inbound attachment with download token."
							},
							"response": [
								{
									"name": "Attachment information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "attachment; filename=\"download.png\"",
											"description": ""
										},
										{
											"key": "Content-Length",
											"value": "4032",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"body": "veniam elit in"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "attachment not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inbound/attachments/:downloadToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inbound",
												"attachments",
												":downloadToken"
											],
											"variable": [
												{
													"key": "downloadToken",
													"value": "veniam elit in",
													"description": "(Required) Token to fetch a particular attachment"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transactional SMS",
					"item": [
						{
							"name": "Send SMS message to a mobile number",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyCollectionandAutomationSpot\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/sms",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"sms"
									]
								}
							},
							"response": [
								{
									"name": "SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"messageId\": 1511882900176220,\n  \"reference\": \"ab1cde2fgh3i4jklmno\",\n  \"smsCount\": 2,\n  \"usedCredits\": 0.7,\n  \"remainingCredits\": 82.85\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your SMS. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Enter this code:CCJJG8 to validate your account\",\n  \"recipient\": \"33689965433\",\n  \"sender\": \"MyShop\",\n  \"type\": \"marketing\",\n  \"tag\": \"accountValidation\",\n  \"webUrl\": \"http://requestb.in/173lyyx1\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/sms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"sms"
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SMS statistics",
					"item": [
						{
							"name": "Get your SMS activity aggregated over a period of time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"aggregatedReport"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). **Not compatible with startDate and endDate**\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "",
											"description": "Filter on a tag",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"range\": \"2015-05-22|2017-11-29\",\n  \"requests\": 54,\n  \"delivered\": 16,\n  \"hardBounces\": 5,\n  \"softBounces\": 26,\n  \"blocked\": 4,\n  \"unsubscribed\": 10,\n  \"replied\": 8,\n  \"accepted\": 6,\n  \"rejected\": 14\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/aggregatedReport?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"aggregatedReport"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get your SMS activity aggregated per day",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"reports"
									],
									"query": [
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n",
											"disabled": true
										},
										{
											"key": "tag",
											"value": "",
											"description": "Filter on a tag",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Aggregated SMS report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"reports\": [\n    {\n      \"date\": \"2017-04-30T00:00:00.000Z\",\n      \"requests\": 10756,\n      \"delivered\": 10103,\n      \"hardBounces\": 21,\n      \"softBounces\": 137,\n      \"blocked\": 1026,\n      \"unsubscribed\": 720,\n      \"replied\": 5091,\n      \"accepted\": 2318,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-01T00:00:00.000Z\",\n      \"requests\": 18812,\n      \"delivered\": 17499,\n      \"hardBounces\": 34,\n      \"softBounces\": 254,\n      \"blocked\": 1514,\n      \"unsubscribed\": 1090,\n      \"replied\": 10089,\n      \"accepted\": 4393,\n      \"rejected\": 0\n    },\n    {\n      \"date\": \"2017-05-02T00:00:00.000Z\",\n      \"requests\": 14321,\n      \"delivered\": 13427,\n      \"hardBounces\": 16,\n      \"softBounces\": 176,\n      \"blocked\": 1646,\n      \"unsubscribed\": 1170,\n      \"replied\": 11563,\n      \"accepted\": 4689,\n      \"rejected\": 0\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/reports?startDate=veniam elit in&endDate=veniam elit in&days=13396752&tag=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"reports"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "tag",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all your SMS activity (unaggregated events)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transactionalSMS/statistics/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transactionalSMS",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the report\n",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "days",
											"value": "7",
											"description": "Number of days in the past including today (positive integer). **Not compatible with 'startDate' and 'endDate'**\n",
											"disabled": true
										},
										{
											"key": "phoneNumber",
											"value": "",
											"description": "Filter the report for a specific phone number",
											"disabled": true
										},
										{
											"key": "event",
											"value": "bounces",
											"description": "Filter the report for specific events",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "",
											"description": "Filter the report for specific tags passed as a serialized urlencoded array",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Sms events report informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"events\": [\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T12:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"sent\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabWaiting\"\n    },\n    {\n      \"phoneNumber\": \"00911059469013\",\n      \"date\": \"2015-05-20T16:30:00.000Z\",\n      \"messageId\": \"1473139351170140\",\n      \"event\": \"delivered\",\n      \"reason\": \"Recipient is currently unreachable\",\n      \"tag\": \"cabRequest\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/transactionalSMS/statistics/events?limit=50&startDate=veniam elit in&endDate=veniam elit in&offset=0&days=13396752&phoneNumber=veniam elit in&event=bounces&tags=veniam elit in&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"transactionalSMS",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "days",
													"value": "13396752"
												},
												{
													"key": "phoneNumber",
													"value": "veniam elit in"
												},
												{
													"key": "event",
													"value": "bounces"
												},
												{
													"key": "tags",
													"value": "veniam elit in"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "WhatsApp Transactional",
					"item": [
						{
							"name": "Send a WhatsApp message",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"contactNumbers\": [\n        \"919808240608\"\n    ],\n    \"senderNumber\": \"919900751564\",\n    \"xtext\": \"saranghe\",\n    \"templateId\": 744919760309407\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/whatsapp/sendMessage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"whatsapp",
										"sendMessage"
									]
								}
							},
							"response": [
								{
									"name": "Send a whatsapp message",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-sib-client-id",
												"value": "2040074",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"contactNumbers\": [\n        \"917017247118\"\n    ],\n    \"senderNumber\": \"919368207022\",\n    \"text\": \"saranghe\",\n    \"xtemplateId\": 2327199890770871\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "public-transactional-whatsapp-api.51b.dev/v3/whatsapp/sendMessage",
											"host": [
												"public-transactional-whatsapp-api",
												"51b",
												"dev"
											],
											"path": [
												"v3",
												"whatsapp",
												"sendMessage"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "content-length",
											"value": "53"
										},
										{
											"key": "content-type",
											"value": "application/json"
										},
										{
											"key": "date",
											"value": "Fri, 27 Jan 2023 13:16:59 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"messageId\": \"5b0d880b-b258-4c9c-a31b-1e248d11d66c\"\n}"
								}
							]
						},
						{
							"name": "Get all your WhatsApp activity (unaggregated events) Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "api-key",
										"value": "{{api-key}}",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/whatsapp/statistics/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"whatsapp",
										"statistics",
										"events"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "9",
											"disabled": true
										},
										{
											"key": "event",
											"value": "sent",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"disabled": true
										},
										{
											"key": "contactNumber",
											"value": "918077039164",
											"disabled": true
										},
										{
											"key": "days",
											"value": "3",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Get events",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/whatsapp/statistics/events?limit=10&offset=0&event=soft-bounce&startDate=2023-01-19&endDate=2023-02-20&sort=desc&contactNumber=916666666666",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"whatsapp",
												"statistics",
												"events"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "event",
													"value": "soft-bounce"
												},
												{
													"key": "startDate",
													"value": "2023-01-19"
												},
												{
													"key": "endDate",
													"value": "2023-02-20"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "contactNumber",
													"value": "916666666666"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 22 Feb 2023 07:13:22 GMT"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "CF-Ray",
											"value": "79d5eb2e9cfc33c6-DEL"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "CF-Cache-Status",
											"value": "DYNAMIC"
										},
										{
											"key": "access-control-allow-credentials",
											"value": "true"
										},
										{
											"key": "access-control-allow-headers",
											"value": "*"
										},
										{
											"key": "access-control-allow-methods",
											"value": "PUT, POST, GET, DELETE, PATCH, OPTIONS"
										},
										{
											"key": "cf-apo-via",
											"value": "origin,host"
										},
										{
											"key": "sib-request-id",
											"value": "626c8458-1def-94cd-8cef-89894e1e5969"
										},
										{
											"key": "x-envoy-upstream-service-time",
											"value": "43"
										},
										{
											"key": "Server-Timing",
											"value": "cf-q-config;dur=6.9999987317715e-06"
										},
										{
											"key": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"key": "Server",
											"value": "cloudflare"
										},
										{
											"key": "Content-Encoding",
											"value": "br"
										}
									],
									"cookie": [],
									"body": "{\n    \"events\": [\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:18\",\n            \"date\": \"2023-02-16T11:38:09.395+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:22\",\n            \"date\": \"2023-02-16T11:38:09.395+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:20\",\n            \"date\": \"2023-02-16T11:38:08.139+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"43:16\",\n            \"date\": \"2023-02-16T11:38:08.139+01:00\"\n        },\n        {\n            \"senderNumber\": \"9368207022\",\n            \"contactNumber\": \"916666666666\",\n            \"event\": \"soft-bounce\",\n            \"messageId\": \"30:2\",\n            \"date\": \"2023-01-30T13:51:31.263+01:00\"\n        }\n    ]\n}"
								}
							]
						}
					],
					"description": "WhatsApp Transactional helps you send one time messages to your customers seamlessly, such as order confirmations, status updates or password reset links. You can check out the API reference for WhatsApp Transactional at [API Reference > WhatsApp.](https://developers.sendinblue.com/reference/getwhatsappcampaign)\n\n## Requirements\n\nTo create and manage your WhatsApp messages you need to have access to the Sendinblue WhatsApp platform. If you have not already activated the WhatsApp platform on your account you can go to [WhatsApp Campaigns > Activating WhatsApp Campaigns.](https://developers.sendinblue.com/docs/activating-whatsapp-campaigns)\n\nSee more details in our dedicated guide [here](https://developers.sendinblue.com/docs/whatsapp-messages)."
				}
			],
			"description": "Benefit from transactional sending in our different channels. Email, SMS, WhatsApp.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Marketing",
			"item": [
				{
					"name": "Email Campaigns",
					"item": [
						{
							"name": "Get an email campaign report",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const cookies = pm.cookies.all();\r",
											"//const id = jsonData.id;\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"//Verify Campaign Name\r",
											"pm.test(\"Verify Campaign Name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(\"API Automation Campaign\")\r",
											"});\r",
											"\r",
											"//Verify Sender ID\r",
											"pm.test(\"Verify Campaign ID\", function () {\r",
											"    pm.expect(jsonData.sender.id).to.eql(1)\r",
											"});\r",
											"\r",
											"//Verify Sender Name\r",
											"pm.test(\"Verify Sender Name\", function () {\r",
											"    pm.expect(jsonData.sender.name).to.eql(\"Testaholics\")\r",
											"});\r",
											"\r",
											"//Verify Campaign Email\r",
											"pm.test(\"Verify Sender Email\", function () {\r",
											"    pm.expect(jsonData.sender.email).to.eql(\"testcad77@gmail.com\")\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"\r",
											"});\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);\r",
											"console.log(jsonData.name);\r",
											"console.log(jsonData.sender.id);\r",
											"console.log(jsonData.sender.name);\r",
											"console.log(jsonData.sender.email);\r",
											"console.log(cookies)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "3",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 22,\n  \"name\": \"Weekly - 1\",\n  \"subject\": \"Week 1 - Newsletter\",\n  \"type\": \"classic\",\n  \"status\": \"draft\",\n  \"scheduledAt\": \"2017-09-22T12:30:00.000Z\",\n  \"testSent\": false,\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"sender\": {\n    \"email\": \"newsletter@mycompany.com\",\n    \"name\": \"Newsletter\",\n    \"id\": 26\n  },\n  \"replyTo\": \"replyto@domain.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"htmlContent\": \"This is my HTML Content\",\n  \"shareLink\": \"http://dhh.sendinblue.com/fhsgccc.html?t=9865448900\",\n  \"tag\": \"Newsletter\",\n  \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"recipients\": {\n    \"lists\": [\n      22\n    ],\n    \"exclusionLists\": [\n      45\n    ]\n  },\n  \"statistics\": {\n    \"globalStats\": {\n      \"uniqueClicks\": 2300,\n      \"clickers\": 2665,\n      \"complaints\": 1,\n      \"delivered\": 19765,\n      \"sent\": 19887,\n      \"softBounces\": 100,\n      \"hardBounces\": 87,\n      \"uniqueViews\": 7779,\n      \"trackableViews\": 5661,\n      \"trackableViewsRate\": 23.45,\n      \"estimatedViews\": 560,\n      \"unsubscriptions\": 2,\n      \"viewed\": 8999\n    },\n    \"campaignStats\": [\n      {\n        \"listId\": 22,\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"trackableViews\": 5661,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    ],\n    \"mirrorClick\": 120,\n    \"remaining\": 1000,\n    \"linksStats\": {\n      \"http://myUrl1.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl2.domain.com\": {\n        \"nbClick\": 80\n      },\n      \"http://myUrl3.domain.com\": {\n        \"nbClick\": 80\n      }\n    },\n    \"statsByDomain\": {\n      \"gmail\": {\n        \"uniqueClicks\": 2300,\n        \"clickers\": 2665,\n        \"complaints\": 1,\n        \"delivered\": 19765,\n        \"sent\": 19887,\n        \"softBounces\": 100,\n        \"hardBounces\": 87,\n        \"uniqueViews\": 7779,\n        \"unsubscriptions\": 2,\n        \"viewed\": 8999,\n        \"deferred\": 30\n      }\n    },\n    \"statsByDevice\": {\n      \"desktop\": {\n        \"mac\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 1\n        }\n      },\n      \"mobile\": {\n        \"androidMobile\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 1,\n          \"uniqueViews\": 0\n        },\n        \"iPhone\": {\n          \"clickers\": 1,\n          \"uniqueClicks\": 0,\n          \"viewed\": 2,\n          \"uniqueViews\": 0\n        }\n      }\n    },\n    \"statsByBrowser\": {\n      \"thunderbird\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"safari\": {\n        \"clickers\": 1,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      },\n      \"internetExplorer\": {\n        \"clickers\": 0,\n        \"uniqueClicks\": 0,\n        \"viewed\": 1,\n        \"uniqueViews\": 0\n      }\n    }\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an email campaign",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"// Function to generate a random string with given length\r",
											"function generateRandomString(length) {\r",
											"    var result = '';\r",
											"    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for (var i = 0; i < length; i++) {\r",
											"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Generate a random first name, last name, phone number & email\r",
											"var updateToField = generateRandomString(5);\r",
											"////var updateLastName = generateRandomString(5);\r",
											"\r",
											"/*var phoneNumber = Math.floor(Math.random() * 100000000).toString();\r",
											"let contactPhoneNumber = '234' + phoneNumber;\r",
											"pm.environment.set(\"msisdn\", contactPhoneNumber)*/\r",
											"\r",
											"// Set country code to \"+234\" for Nigeria\r",
											"//var countryCode = \"+234\";\r",
											"//pm.environment.set(\"countryCode\", countryCode)\r",
											"\r",
											"/*var contactEmail = generateRandomString(5) + \"@yopmail.com\";*/\r",
											"\r",
											"\r",
											"\r",
											"// Set the request body with the random values\r",
											"pm.variables.set(\"update_ToField\", updateToField);\r",
											"//pm.variables.set(\"update_lastName\", updateLastName);\r",
											"//pm.variables.set(\"phoneNumber\", contactPhoneNumber);\r",
											"//pm.variables.set(\"countryCode\", countryCode);\r",
											"//pm.variables.set(\"email\", contactEmail);\r",
											"\r",
											"\r",
											"console.log(\"Generated Updated Data:\");\r",
											"console.log(\"To Field has : \" + updateToField);\r",
											"//console.log(\"Last Name: \" + updateLastName);\r",
											"//console.log(\"Phone Number: \" + contactPhoneNumber);\r",
											"//console.log(\"Country Code: \" + countryCode);\r",
											"//console.log(\"Email: \" + contactEmail);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"const cookies = pm.cookies.all();\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);\r",
											"console.log(cookies)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 3,\n    \"name\": \"API Automation Campaign\",\n    \"type\": \"classic\",\n    \"status\": \"sent\",\n    \"testSent\": false,\n    \"header\": \"[DEFAULT_HEADER]\",\n    \"footer\": \"EXISTS\",\n    \"sender\": {\n        \"name\": \"Testaholics\",\n        //\"id\": 1,\n        \"email\": \"testcad77@gmail.com\"\n    },\n    \"replyTo\": \"testcad77@gmail.com\",\n    \"toField\": \"{{update_ToField}}\",\n    \"previewText\": \"We will teach you everything\",\n    \"tag\": \"You are welcome\",\n    \"inlineImageActivation\": true,\n    \"mirrorActive\": false,\n    /*\"recipients\": {\n        \"lists\": [\n            5,\n            10\n        ],\n        \"exclusionLists\": []\n    },*/\n    \"statistics\": {\n        \"globalStats\": {\n            \"uniqueClicks\": 0,\n            \"clickers\": 0,\n            \"complaints\": 0,\n            \"delivered\": 0,\n            \"sent\": 0,\n            \"softBounces\": 0,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 0,\n            \"unsubscriptions\": 0,\n            \"viewed\": 0,\n            \"trackableViews\": 0,\n            \"trackableViewsRate\": 0,\n            \"estimatedViews\": 0\n        },\n        \"campaignStats\": [\n            {\n                \"listId\": 5,\n                \"uniqueClicks\": 0,\n                \"clickers\": 0,\n                \"complaints\": 0,\n                \"delivered\": 0,\n                \"sent\": 1,\n                \"softBounces\": 0,\n                \"hardBounces\": 1,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0,\n                \"unsubscriptions\": 0,\n                \"viewed\": 0,\n                \"deferred\": 0\n            }\n        ],\n        \"mirrorClick\": 0,\n        \"remaining\": 0,\n        \"linksStats\": {\n            \"https://www.brevo.com?utm_source=logo_client&utm_medium=email\": 0\n        },\n        \"statsByDomain\": {},\n        \"statsByDevice\": {\n            \"desktop\": {\n                \"mac\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                },\n                \"windows\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                },\n                \"otherSystem\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                }\n            },\n            \"mobile\": {\n                \"androidMobile\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                },\n                \"iPhone\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                }\n            },\n            \"tablet\": {\n                \"androidTablet\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                },\n                \"appleIPad\": {\n                    \"clickers\": 0,\n                    \"uniqueClicks\": 0,\n                    \"viewed\": 0,\n                    \"uniqueViews\": 0,\n                    \"trackableViews\": 0\n                }\n            }\n        },\n        \"statsByBrowser\": {\n            \"android\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"chrome\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"edge\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"firefox\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"internetExplorer\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"opera\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"safari\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"electron\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"mailChannelsScanner\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"microsoft\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"mozilla\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"outlookExpress\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"thunderbird\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"yahooMailProxy\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            },\n            \"unknown\": {\n                \"clickers\": 0,\n                \"uniqueClicks\": 0,\n                \"viewed\": 0,\n                \"uniqueViews\": 0,\n                \"trackableViews\": 0\n            }\n        }\n    },\n    \"htmlContent\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xmlns:v=\\\"urn:schemas-microsoft-com:vml\\\" xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\"><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><meta name=\\\"format-detection\\\" content=\\\"telephone=no\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><title>Enroll Now and Learn How to Become a Test Automation Master!</title><style type=\\\"text/css\\\" emogrify=\\\"no\\\">#outlook a { padding:0; } .ExternalClass { width:100%; } .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div { line-height: 100%; } table td { border-collapse: collapse; mso-line-height-rule: exactly; } .editable.image { font-size: 0 !important; line-height: 0 !important; } .nl2go_preheader { display: none !important; mso-hide:all !important; mso-line-height-rule: exactly; visibility: hidden !important; line-height: 0px !important; font-size: 0px !important; } body { width:100% !important; -webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; margin:0; padding:0; } img { outline:none; text-decoration:none; -ms-interpolation-mode: bicubic; } a img { border:none; } table { border-collapse:collapse; mso-table-lspace:0pt; mso-table-rspace:0pt; } th { font-weight: normal; text-align: left; } *[class=\\\"gmail-fix\\\"] { display: none !important; } </style><style type=\\\"text/css\\\" emogrify=\\\"no\\\"> @media (max-width: 600px) { .gmx-killpill { content: ' \\\\03D1';} } </style><style type=\\\"text/css\\\" emogrify=\\\"no\\\">@media (max-width: 600px) { .gmx-killpill { content: ' \\\\03D1';} .r0-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 320px !important } .r1-i { background-color: #ffffff !important } .r2-c { box-sizing: border-box !important; text-align: center !important; valign: top !important; width: 100% !important } .r3-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 100% !important } .r4-i { background-color: #ffffff !important; padding-bottom: 20px !important; padding-left: 15px !important; padding-right: 15px !important; padding-top: 20px !important } .r5-c { box-sizing: border-box !important; display: block !important; valign: top !important; width: 100% !important } .r6-o { border-style: solid !important; width: 100% !important } .r7-i { padding-left: 0px !important; padding-right: 0px !important } .r8-i { padding-bottom: 20px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 20px !important } .r9-c { box-sizing: border-box !important; text-align: left !important; valign: top !important; width: 100% !important } .r10-o { border-style: solid !important; margin: 0 auto 0 0 !important; width: 100% !important } .r11-i { padding-top: 15px !important; text-align: center !important } .r12-i { padding-bottom: 15px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 15px !important } .r13-i { padding-top: 20px !important } .r14-i { padding-top: 15px !important; text-align: left !important } .r15-i { padding-bottom: 15px !important; padding-top: 15px !important; text-align: left !important } .r16-c { box-sizing: border-box !important; padding: 0 !important; text-align: center !important; valign: top !important; width: 100% !important } .r17-o { border-style: solid !important; margin: 0 auto 0 auto !important; margin-bottom: 15px !important; margin-top: 15px !important; width: 100% !important } .r18-i { padding: 0 !important; text-align: center !important } .r19-r { background-color: #1B1B1B !important; border-radius: 4px !important; border-width: 0px !important; box-sizing: border-box; height: initial !important; padding: 0 !important; padding-bottom: 12px !important; padding-left: 5px !important; padding-right: 5px !important; padding-top: 12px !important; text-align: center !important; width: 100% !important } .r20-i { background-color: #eff2f7 !important; padding-bottom: 20px !important; padding-left: 15px !important; padding-right: 15px !important; padding-top: 20px !important } .r21-i { padding-bottom: 0px !important; padding-top: 15px !important; text-align: center !important } .r22-i { padding-bottom: 0px !important; padding-top: 0px !important; text-align: center !important } .r23-i { padding-bottom: 15px !important; padding-top: 15px !important; text-align: center !important } .r24-c { box-sizing: border-box !important; text-align: center !important; width: 100% !important } .r25-i { padding-bottom: 15px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 0px !important } .r26-c { box-sizing: border-box !important; text-align: center !important; valign: top !important; width: 129px !important } .r27-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 129px !important } body { -webkit-text-size-adjust: none } .nl2go-responsive-hide { display: none } .nl2go-body-table { min-width: unset !important } .mobshow { height: auto !important; overflow: visible !important; max-height: unset !important; visibility: visible !important; border: none !important } .resp-table { display: inline-table !important } .magic-resp { display: table-cell !important } } </style><style type=\\\"text/css\\\">p, h1, h2, h3, h4, ol, ul { margin: 0; } a, a:link { color: #696969; text-decoration: underline } .nl2go-default-textstyle { color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word } .default-button { color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px; font-style: normal; font-weight: normal; line-height: 1.15; text-decoration: none; word-break: break-word } .default-heading1 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 36px; word-break: break-word } .default-heading2 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 32px; word-break: break-word } .default-heading3 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 24px; word-break: break-word } .default-heading4 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 18px; word-break: break-word } a[x-apple-data-detectors] { color: inherit !important; text-decoration: inherit !important; font-size: inherit !important; font-family: inherit !important; font-weight: inherit !important; line-height: inherit !important; } .no-show-for-you { border: none; display: none; float: none; font-size: 0; height: 0; line-height: 0; max-height: 0; mso-hide: all; overflow: hidden; table-layout: fixed; visibility: hidden; width: 0; } </style><!--[if mso]><xml> <o:OfficeDocumentSettings> <o:AllowPNG/> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]--><style type=\\\"text/css\\\">a:link{color: #696969; text-decoration: underline;}</style></head><body bgcolor=\\\"#ffffff\\\" text=\\\"#3b3f44\\\" link=\\\"#696969\\\" yahoo=\\\"fix\\\" style=\\\"background-color: #ffffff;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" class=\\\"nl2go-body-table\\\" width=\\\"100%\\\" style=\\\"background-color: #ffffff; width: 100%;\\\"><tr><td> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"600\\\" align=\\\"center\\\" class=\\\"r0-o\\\" style=\\\"table-layout: fixed; width: 600px;\\\"><tr><td valign=\\\"top\\\" class=\\\"r1-i\\\" style=\\\"background-color: #ffffff;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r4-i\\\" style=\\\"background-color: #ffffff; padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"200\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 200px;\\\"><tr><td style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/logo-placeholder.png\\\" width=\\\"200\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r11-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-top: 15px; text-align: center;\\\"> <div><h1 class=\\\"default-heading1\\\" style=\\\"margin: 0; color: #1f2d3d; font-family: arial,helvetica,sans-serif; font-size: 36px; word-break: break-word;\\\">This is your headline.</h1></div> </td> </tr></table></td> </tr><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"570\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 570px;\\\"><tr><td class=\\\"r12-i\\\" style=\\\"font-size: 0px; line-height: 0px; padding-bottom: 15px; padding-top: 15px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-2x-1.png\\\" width=\\\"570\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"50%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"270\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 270px;\\\"><tr><td style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-1x-2.png\\\" width=\\\"270\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> <th width=\\\"50%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"270\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 270px;\\\"><tr><td class=\\\"r13-i\\\" style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-1x-1.png\\\" width=\\\"270\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 10px; padding-right: 10px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"left\\\" valign=\\\"top\\\" class=\\\"r14-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-top: 15px; text-align: left;\\\"> <div><h2 class=\\\"default-heading2\\\" style=\\\"margin: 0; color: #1f2d3d; font-family: arial,helvetica,sans-serif; font-size: 32px; word-break: break-word;\\\">Your title here</h2></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"left\\\" valign=\\\"top\\\" class=\\\"r15-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-bottom: 15px; padding-top: 15px; text-align: left;\\\"> <div><p style=\\\"margin: 0;\\\">Start your newsletter with multiple visually striking images.</p><p style=\\\"margin: 0;\\\"> </p><p style=\\\"margin: 0;\\\">Start by replacing the full-width header and main images with your own, or use a solid color background.</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r16-c\\\" align=\\\"center\\\" style=\\\"align: center; padding-bottom: 15px; padding-top: 15px; valign: top;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"290\\\" class=\\\"r17-o\\\" style=\\\"background-color: #1B1B1B; border-collapse: separate; border-color: #1B1B1B; border-radius: 4px; border-style: solid; border-width: 0px; table-layout: fixed; width: 290px;\\\"><tr><td height=\\\"18\\\" align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r18-i nl2go-default-textstyle\\\" style=\\\"word-break: break-word; background-color: #1B1B1B; border-radius: 4px; color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px; font-style: normal; line-height: 1.15; padding-bottom: 12px; padding-left: 5px; padding-right: 5px; padding-top: 12px; text-align: center;\\\"> <a href=\\\"#top\\\" class=\\\"r19-r default-button\\\" target=\\\"_blank\\\" data-btn=\\\"1\\\" style=\\\"font-style: normal; font-weight: normal; line-height: 1.15; text-decoration: none; word-break: break-word; word-wrap: break-word; display: block; -webkit-text-size-adjust: none; color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px;\\\"> <span>Call to action</span></a> </td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r20-i\\\" style=\\\"background-color: #eff2f7; padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r21-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0;\\\"><strong>Testaholics</strong></p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r22-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">44, idowu taylor street, victoria island, lagos State, 101241, Lagos</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r21-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">This email was sent to {{contact.EMAIL}}</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r22-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">You've received this email because you've subscribed to our newsletter.</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r23-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-bottom: 15px; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\"> <a href=\\\"{{ unsubscribe }}\\\" style=\\\"color: #696969; text-decoration: underline;\\\">Unsubscribe</a></p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r24-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r25-i\\\" style=\\\"padding-bottom: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r26-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"129\\\" class=\\\"r27-o\\\" style=\\\"table-layout: fixed;\\\"><tr><td height=\\\"48\\\" style=\\\"font-size: 0px; line-height: 0px;\\\"> <a href=\\\"https://www.brevo.com?utm_source=brevo&utm_medium=email&utm_campaign=Elizabeth Automation Campaign\\\"><img src=\\\"https://creative-assets.mailinblue.com/rnb-assets/en.png\\\" width=\\\"129\\\" height=\\\"48\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></a></td> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></body></html>\\n\",\n    \"subject\": \"Enroll Now and Learn How to Become a Test Automation Master!\",\n    \"scheduledAt\": \"2023-12-30T12:07:02.000+01:00\",\n    \"createdAt\": \"2023-11-29T11:51:41.000+01:00\",\n    \"modifiedAt\": \"2023-11-29T13:39:04.000+01:00\",\n    \"shareLink\": \"http://sh1.sendinblue.com/1yjw7dl7sc.html\",\n    \"sentDate\": \"2023-11-29T12:08:21.000+01:00\",\n    \"sendAtBestTime\": false,\n    \"abTesting\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "3",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag\": \"Newsletter\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"name\": \"Newsletter - May 2017\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"scheduledAt\": \"laborum eu occaecat nulla\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"recurring\": false,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_8\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "6",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign immediately, based on campaignId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n            \"id\": 4,\r\n            \"name\": \"TestEmail\",\r\n            \"type\": \"classic\",\r\n            \"status\": \"sent\",\r\n            \"testSent\": false,\r\n            \"header\": \"[DEFAULT_HEADER]\",\r\n            \"footer\": \"EXISTS\",\r\n            \"sender\": {\r\n                \"name\": \"Testaholics\",\r\n                \"id\": 1,\r\n                \"email\": \"testcad77@gmail.com\"\r\n            },\r\n            \"replyTo\": \"testcad77@gmail.com\",\r\n            \"toField\": \"\",\r\n            \"previewText\": \"Become a pro!!!!!!!!!\",\r\n            \"tag\": \"\",\r\n            \"inlineImageActivation\": false,\r\n            \"mirrorActive\": false,\r\n            \"recipients\": {\r\n                \"lists\": [\r\n                    2\r\n                ],\r\n                \"exclusionLists\": []\r\n            },\r\n            \"statistics\": {\r\n                \"globalStats\": {\r\n                    \"uniqueClicks\": 0,\r\n                    \"clickers\": 0,\r\n                    \"complaints\": 0,\r\n                    \"delivered\": 0,\r\n                    \"sent\": 0,\r\n                    \"softBounces\": 0,\r\n                    \"hardBounces\": 0,\r\n                    \"uniqueViews\": 0,\r\n                    \"unsubscriptions\": 0,\r\n                    \"viewed\": 0,\r\n                    \"trackableViews\": 0,\r\n                    \"trackableViewsRate\": 0,\r\n                    \"estimatedViews\": 0\r\n                },\r\n                \"campaignStats\": [\r\n                    {\r\n                        \"listId\": 2,\r\n                        \"uniqueClicks\": 0,\r\n                        \"clickers\": 0,\r\n                        \"complaints\": 0,\r\n                        \"delivered\": 1,\r\n                        \"sent\": 2,\r\n                        \"softBounces\": 0,\r\n                        \"hardBounces\": 1,\r\n                        \"uniqueViews\": 0,\r\n                        \"trackableViews\": 0,\r\n                        \"unsubscriptions\": 0,\r\n                        \"viewed\": 0,\r\n                        \"deferred\": 0\r\n                    }\r\n                ],\r\n                \"mirrorClick\": 0,\r\n                \"remaining\": 0,\r\n                \"linksStats\": {\r\n                    \"https://www.brevo.com?utm_source=logo_client&utm_medium=email\": 0\r\n                },\r\n                \"statsByDomain\": {}\r\n            },\r\n            \"htmlContent\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xmlns:v=\\\"urn:schemas-microsoft-com:vml\\\" xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\"><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><meta name=\\\"format-detection\\\" content=\\\"telephone=no\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><title>Act Now! Unlock the Secrets of Email Automation</title><style type=\\\"text/css\\\" emogrify=\\\"no\\\">#outlook a { padding:0; } .ExternalClass { width:100%; } .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div { line-height: 100%; } table td { border-collapse: collapse; mso-line-height-rule: exactly; } .editable.image { font-size: 0 !important; line-height: 0 !important; } .nl2go_preheader { display: none !important; mso-hide:all !important; mso-line-height-rule: exactly; visibility: hidden !important; line-height: 0px !important; font-size: 0px !important; } body { width:100% !important; -webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; margin:0; padding:0; } img { outline:none; text-decoration:none; -ms-interpolation-mode: bicubic; } a img { border:none; } table { border-collapse:collapse; mso-table-lspace:0pt; mso-table-rspace:0pt; } th { font-weight: normal; text-align: left; } *[class=\\\"gmail-fix\\\"] { display: none !important; } </style><style type=\\\"text/css\\\" emogrify=\\\"no\\\"> @media (max-width: 600px) { .gmx-killpill { content: ' \\\\03D1';} } </style><style type=\\\"text/css\\\" emogrify=\\\"no\\\">@media (max-width: 600px) { .gmx-killpill { content: ' \\\\03D1';} .r0-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 320px !important } .r1-i { background-color: #ffffff !important } .r2-c { box-sizing: border-box !important; text-align: center !important; valign: top !important; width: 100% !important } .r3-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 100% !important } .r4-i { background-color: #ffffff !important; padding-bottom: 20px !important; padding-left: 15px !important; padding-right: 15px !important; padding-top: 20px !important } .r5-c { box-sizing: border-box !important; display: block !important; valign: top !important; width: 100% !important } .r6-o { border-style: solid !important; width: 100% !important } .r7-i { padding-left: 0px !important; padding-right: 0px !important } .r8-i { padding-bottom: 20px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 20px !important } .r9-c { box-sizing: border-box !important; text-align: left !important; valign: top !important; width: 100% !important } .r10-o { border-style: solid !important; margin: 0 auto 0 0 !important; width: 100% !important } .r11-i { padding-top: 15px !important; text-align: center !important } .r12-i { padding-bottom: 15px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 15px !important } .r13-i { padding-top: 20px !important } .r14-i { padding-top: 15px !important; text-align: left !important } .r15-i { padding-bottom: 15px !important; padding-top: 15px !important; text-align: left !important } .r16-c { box-sizing: border-box !important; padding: 0 !important; text-align: center !important; valign: top !important; width: 100% !important } .r17-o { border-style: solid !important; margin: 0 auto 0 auto !important; margin-bottom: 15px !important; margin-top: 15px !important; width: 100% !important } .r18-i { padding: 0 !important; text-align: center !important } .r19-r { background-color: #1B1B1B !important; border-radius: 4px !important; border-width: 0px !important; box-sizing: border-box; height: initial !important; padding: 0 !important; padding-bottom: 12px !important; padding-left: 5px !important; padding-right: 5px !important; padding-top: 12px !important; text-align: center !important; width: 100% !important } .r20-i { background-color: #eff2f7 !important; padding-bottom: 20px !important; padding-left: 15px !important; padding-right: 15px !important; padding-top: 20px !important } .r21-i { padding-bottom: 0px !important; padding-top: 15px !important; text-align: center !important } .r22-i { padding-bottom: 0px !important; padding-top: 0px !important; text-align: center !important } .r23-i { padding-bottom: 15px !important; padding-top: 15px !important; text-align: center !important } .r24-c { box-sizing: border-box !important; text-align: center !important; width: 100% !important } .r25-i { padding-bottom: 15px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 0px !important } .r26-c { box-sizing: border-box !important; text-align: center !important; valign: top !important; width: 129px !important } .r27-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 129px !important } body { -webkit-text-size-adjust: none } .nl2go-responsive-hide { display: none } .nl2go-body-table { min-width: unset !important } .mobshow { height: auto !important; overflow: visible !important; max-height: unset !important; visibility: visible !important; border: none !important } .resp-table { display: inline-table !important } .magic-resp { display: table-cell !important } } </style><style type=\\\"text/css\\\">p, h1, h2, h3, h4, ol, ul { margin: 0; } a, a:link { color: #696969; text-decoration: underline } .nl2go-default-textstyle { color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word } .default-button { color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px; font-style: normal; font-weight: normal; line-height: 1.15; text-decoration: none; word-break: break-word } .default-heading1 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 36px; word-break: break-word } .default-heading2 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 32px; word-break: break-word } .default-heading3 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 24px; word-break: break-word } .default-heading4 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 18px; word-break: break-word } a[x-apple-data-detectors] { color: inherit !important; text-decoration: inherit !important; font-size: inherit !important; font-family: inherit !important; font-weight: inherit !important; line-height: inherit !important; } .no-show-for-you { border: none; display: none; float: none; font-size: 0; height: 0; line-height: 0; max-height: 0; mso-hide: all; overflow: hidden; table-layout: fixed; visibility: hidden; width: 0; } </style><!--[if mso]><xml> <o:OfficeDocumentSettings> <o:AllowPNG/> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]--><style type=\\\"text/css\\\">a:link{color: #696969; text-decoration: underline;}</style></head><body bgcolor=\\\"#ffffff\\\" text=\\\"#3b3f44\\\" link=\\\"#696969\\\" yahoo=\\\"fix\\\" style=\\\"background-color: #ffffff;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" class=\\\"nl2go-body-table\\\" width=\\\"100%\\\" style=\\\"background-color: #ffffff; width: 100%;\\\"><tr><td> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"600\\\" align=\\\"center\\\" class=\\\"r0-o\\\" style=\\\"table-layout: fixed; width: 600px;\\\"><tr><td valign=\\\"top\\\" class=\\\"r1-i\\\" style=\\\"background-color: #ffffff;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r4-i\\\" style=\\\"background-color: #ffffff; padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"200\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 200px;\\\"><tr><td style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/logo-placeholder.png\\\" width=\\\"200\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r11-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-top: 15px; text-align: center;\\\"> <div><h1 class=\\\"default-heading1\\\" style=\\\"margin: 0; color: #1f2d3d; font-family: arial,helvetica,sans-serif; font-size: 36px; word-break: break-word;\\\">This is your headline.</h1></div> </td> </tr></table></td> </tr><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"570\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 570px;\\\"><tr><td class=\\\"r12-i\\\" style=\\\"font-size: 0px; line-height: 0px; padding-bottom: 15px; padding-top: 15px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-2x-1.png\\\" width=\\\"570\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"50%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"270\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 270px;\\\"><tr><td style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-1x-2.png\\\" width=\\\"270\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> <th width=\\\"50%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"270\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 270px;\\\"><tr><td class=\\\"r13-i\\\" style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-1x-1.png\\\" width=\\\"270\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 10px; padding-right: 10px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"left\\\" valign=\\\"top\\\" class=\\\"r14-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-top: 15px; text-align: left;\\\"> <div><h2 class=\\\"default-heading2\\\" style=\\\"margin: 0; color: #1f2d3d; font-family: arial,helvetica,sans-serif; font-size: 32px; word-break: break-word;\\\">Your title here</h2></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"left\\\" valign=\\\"top\\\" class=\\\"r15-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-bottom: 15px; padding-top: 15px; text-align: left;\\\"> <div><p style=\\\"margin: 0;\\\">Start your newsletter with multiple visually striking images.</p><p style=\\\"margin: 0;\\\"> </p><p style=\\\"margin: 0;\\\">Start by replacing the full-width header and main images with your own, or use a solid color background.</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r16-c\\\" align=\\\"center\\\" style=\\\"align: center; padding-bottom: 15px; padding-top: 15px; valign: top;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"290\\\" class=\\\"r17-o\\\" style=\\\"background-color: #1B1B1B; border-collapse: separate; border-color: #1B1B1B; border-radius: 4px; border-style: solid; border-width: 0px; table-layout: fixed; width: 290px;\\\"><tr><td height=\\\"18\\\" align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r18-i nl2go-default-textstyle\\\" style=\\\"word-break: break-word; background-color: #1B1B1B; border-radius: 4px; color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px; font-style: normal; line-height: 1.15; padding-bottom: 12px; padding-left: 5px; padding-right: 5px; padding-top: 12px; text-align: center;\\\"> <a href=\\\"#top\\\" class=\\\"r19-r default-button\\\" target=\\\"_blank\\\" data-btn=\\\"1\\\" style=\\\"font-style: normal; font-weight: normal; line-height: 1.15; text-decoration: none; word-break: break-word; word-wrap: break-word; display: block; -webkit-text-size-adjust: none; color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px;\\\"> <span>Call to action</span></a> </td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r20-i\\\" style=\\\"background-color: #eff2f7; padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r21-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0;\\\"><strong>Testaholics</strong></p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r22-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">44, idowu taylor street, victoria island, lagos State, 101241, Lagos</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r21-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">This email was sent to {{contact.EMAIL}}</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r22-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">You've received this email because you've subscribed to our newsletter.</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r23-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-bottom: 15px; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\"> <a href=\\\"{{ unsubscribe }}\\\" style=\\\"color: #696969; text-decoration: underline;\\\">Unsubscribe</a></p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r24-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r25-i\\\" style=\\\"padding-bottom: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r26-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"129\\\" class=\\\"r27-o\\\" style=\\\"table-layout: fixed;\\\"><tr><td height=\\\"48\\\" style=\\\"font-size: 0px; line-height: 0px;\\\"> <a href=\\\"https://www.brevo.com?utm_source=logo_client&utm_medium=email\\\"><img src=\\\"https://creative-assets.mailinblue.com/rnb-assets/en.png\\\" width=\\\"129\\\" height=\\\"48\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></a></td> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></body></html>\\n\",\r\n            \"subject\": \"Act Now! Unlock the Secrets of Email Automation\",\r\n            \"scheduledAt\": \"2023-11-29T12:36:53.000+01:00\",\r\n            \"createdAt\": \"2023-11-29T12:14:51.000+01:00\",\r\n            \"modifiedAt\": \"2023-11-29T12:36:53.000+01:00\",\r\n            \"shareLink\": \"http://sh1.sendinblue.com/1ytdjdl7sc.html\",\r\n            \"sentDate\": \"2023-11-29T12:37:30.000+01:00\",\r\n            \"sendAtBestTime\": false,\r\n            \"abTesting\": false\r\n        },"
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/6/sendNow/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										"6",
										"sendNow",
										""
									]
								}
							},
							"response": [
								{
									"name": "Email campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an email campaign to your test list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emailTo\": [\n        \"testcad77@gmail.com\"\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "6"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test email has been sent successfully to all recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test email could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"75BfS6kLq8tM@SJimzZAEpYHRyLStQjY.gxs\",\n    \"5raZtMVhzx@gMjdaabGzAjkYrK.fnco\"\n  ],\n  \"withoutListEmails\": [\n    \"3j0Dt@VghDwawjVvNTjFVmRKWJ.agyu\",\n    \"UaS0Xey-oMdkd@vZKiBhSUbOueTWIJZpFdJmnF.ug\"\n  ],\n  \"blackListedEmails\": [\n    \"jooW@GLWhkVFSczNd.qgrn\",\n    \"K0YvNXk7f@tETerPDdjJVYYwNPbKs.pur\"\n  ]\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailTo\": [\n    \"helen.jurger@example.com\",\n    \"helen.jurger@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The email could not be sent to all recipients\",\n  \"unexistingEmails\": [\n    \"XUvXs2MUkZy@eNdDZoaehFi.etn\",\n    \"HnrmUyMYn@sfTjWkSBpk.hm\"\n  ],\n  \"withoutListEmails\": [\n    \"qSPfAA-ZR9R@CdCUpePDRUIlyeX.js\",\n    \"hoJRuR3l@MHrCixtPTEHuYek.hs\"\n  ],\n  \"blackListedEmails\": [\n    \"wjSlx1vUDTsWt5@SzwzihE.ot\",\n    \"LO4E3a@ycxq.ri\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an email campaign status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "6",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send the report of a campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has Ok\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "6",
											"description": "(Required) Id of the campaign"
										}
									]
								},
								"description": "A PDF will be sent to the specified email addresses"
							},
							"response": [
								{
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an A/B test email campaign results",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"abTestCampaignResult"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "3",
											"description": "(Required) Id of the A/B test campaign"
										}
									]
								},
								"description": "Obtain winning version of an A/B test email campaign"
							},
							"response": [
								{
									"name": "A/B test email campaign Result",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"winningVersion\": \"B\",\n  \"winningCriteria\": \"Click\",\n  \"openRate\": \"100%\",\n  \"clickRate\": \"50%\",\n  \"winningVersionRate\": \"0%\",\n  \"statistics\": {\n    \"openers\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"100%\"\n    },\n    \"clicks\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"50%\"\n    },\n    \"unsubscribed\": {\n      \"Version A\": \"20%\",\n      \"Version B\": \"0%\"\n    },\n    \"softBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"hardBounces\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    },\n    \"complaints\": {\n      \"Version A\": \"0%\",\n      \"Version B\": \"0%\"\n    }\n  },\n  \"clickedLinks\": {\n    \"Version A\": [\n      {\n        \"link\": \"https://google.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      },\n      {\n        \"link\": \"https://youtube.com\",\n        \"clicksCount\": 0,\n        \"clickRate\": \"0%\"\n      }\n    ],\n    \"Version B\": [\n      {\n        \"link\": \"http://www.github.com\",\n        \"clicksCount\": 2,\n        \"clickRate\": \"40%\"\n      },\n      {\n        \"link\": \"http://www.stackoverflow.com\",\n        \"clicksCount\": 3,\n        \"clickRate\": \"60%\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "A/B test Email Campaign not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/abTestCampaignResult",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"abTestCampaignResult"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the A/B test campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a shared template url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const sharedUrl = jsonData.sharedUrl;\r",
											"\r",
											"//Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Shared URl\r",
											"pm.test(\"Verify shared URL\", function () {\r",
											"    pm.expect(jsonData.sharedUrl).to.eql(sharedUrl);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify reponse time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"//Log response to the console\r",
											"console.log(responseCode);\r",
											"console.log(sharedUrl);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"sharedUrl"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "3",
											"description": "(Required) Id of the campaign or template"
										}
									]
								},
								"description": "Get a unique URL to share & import an email template from one Sendinblue account to another."
							},
							"response": [
								{
									"name": "Shared template URL information",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"sharedUrl\": \"https://my.sendinblue.com/pt2YU7R5W_guXlowgumy_VX4pFsKu._zd0Gjj96x1_GMmzc1Qps5ZIpj6nx-\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign/Template ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Only email campaigns or templates are allowed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/sharedUrl",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"sharedUrl"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign or template"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export the recipients of an email campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has No OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "6",
											"description": "(Required) Id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"openers\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return all your created email campaigns",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const count = jsonData.count;\r",
											"const campaigns = jsonData.campaigns[3];\r",
											"\r",
											"\r",
											"//Verify Status Code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"//Verify status code has a string\r",
											"pm.test(\"Status code name has Ok\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//Verify Count\r",
											"pm.test(\"Verify Count\", function () {\r",
											"    pm.expect(jsonData.count).to.eql(count);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Campaign with ID 3\r",
											"pm.test(\"Verify Campaign with ID 3\", function () {\r",
											"    pm.expect(jsonData.campaigns[3]).to.eql(campaigns);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);\r",
											"\r",
											"console.log(count);\r",
											"\r",
											"console.log(campaigns);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									],
									"query": [
										{
											"key": "type",
											"value": "",
											"description": "Filter on the type of the campaigns",
											"disabled": true
										},
										{
											"key": "status",
											"value": "",
											"description": "Filter on the status of the campaign",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used**. Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used**. Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent email campaigns.\n**Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document in the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Email campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 2,\n  \"campaigns\": [\n    {\n      \"id\": 12,\n      \"name\": \"EN - Sales Summer 2017\",\n      \"subject\": \"20% OFF for 2017 Summer Sales\",\n      \"type\": \"classic\",\n      \"status\": \"sent\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"marketing@mycompany.com\",\n        \"name\": \"Marketing\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          5\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 5,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": 80\n        },\n        \"statsByDomain\": {\n          \"yahoo.com\": {\n            \"uniqueClicks\": 298,\n            \"clickers\": 533,\n            \"complaints\": 0,\n            \"sent\": 25601,\n            \"softBounces\": 5,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 3527,\n            \"unsubscriptions\": 17,\n            \"viewed\": 5255,\n            \"delivered\": 25596\n          },\n          \"hotmail.co.uk\": {\n            \"uniqueClicks\": 1970,\n            \"clickers\": 2720,\n            \"complaints\": 5,\n            \"sent\": 117055,\n            \"softBounces\": 111,\n            \"hardBounces\": 0,\n            \"uniqueViews\": 21111,\n            \"unsubscriptions\": 105,\n            \"viewed\": 35251,\n            \"delivered\": 117056\n          }\n        }\n      }\n    },\n    {\n      \"id\": 22,\n      \"name\": \"Weekly - 1\",\n      \"subject\": \"Week 1 - Newsletter\",\n      \"type\": \"Classic\",\n      \"status\": \"draft\",\n      \"scheduledAt\": \"\",\n      \"testSent\": false,\n      \"header\": \"[DEFAULT_HEADER]\",\n      \"footer\": \"[DEFAULT_FOOTER]\",\n      \"sender\": {\n        \"email\": \"newsletter@mycompany.com\",\n        \"name\": \"Newsletter\",\n        \"id\": 26\n      },\n      \"replyTo\": \"replyto@domain.com\",\n      \"toField\": \"{FNAME} {LNAME}\",\n      \"htmlContent\": \"This is my HTML Content\",\n      \"shareLink\": \"http://example.com/fhsgccc.html?t=9865448900\",\n      \"tag\": \"Newsletter\",\n      \"createdAt\": \"2017-05-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"inlineImageActivation\": true,\n      \"mirrorActive\": true,\n      \"recurring\": false,\n      \"recipients\": {\n        \"lists\": [\n          10\n        ],\n        \"exclusionLists\": [\n          45\n        ]\n      },\n      \"statistics\": {\n        \"globalStats\": {\n          \"uniqueClicks\": 2300,\n          \"clickers\": 2665,\n          \"complaints\": 1,\n          \"delivered\": 19765,\n          \"sent\": 19887,\n          \"softBounces\": 100,\n          \"hardBounces\": 87,\n          \"uniqueViews\": 7779,\n          \"trackableViews\": 5661,\n          \"trackableViewsRate\": 23.45,\n          \"estimatedViews\": 560,\n          \"unsubscriptions\": 2,\n          \"viewed\": 8999\n        },\n        \"campaignStats\": [\n          {\n            \"listId\": 10,\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"trackableViews\": 5661,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        ],\n        \"mirrorClick\": 120,\n        \"remaining\": 1000,\n        \"linksStats\": {\n          \"http://myUrl1.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl2.domain.com\": {\n            \"nbClick\": 80\n          },\n          \"http://myUrl3.domain.com\": {\n            \"nbClick\": 80\n          }\n        },\n        \"statsByDomain\": {\n          \"gmail\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          },\n          \"aol\": {\n            \"uniqueClicks\": 2300,\n            \"clickers\": 2665,\n            \"complaints\": 1,\n            \"delivered\": 19765,\n            \"sent\": 19887,\n            \"softBounces\": 100,\n            \"hardBounces\": 87,\n            \"uniqueViews\": 7779,\n            \"unsubscriptions\": 2,\n            \"viewed\": 8999,\n            \"deferred\": 30\n          }\n        }\n      }\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns?type=classic&status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											],
											"query": [
												{
													"key": "type",
													"value": "classic"
												},
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create an email campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            //\"id\": 7,\n            \"name\": \"Test Email Category\",\n            \"type\": \"classic\",\n            \"status\": \"draft\",\n            \"testSent\": false,\n            \"header\": \"\",\n            \"footer\": \"\",\n            \"sender\": {\n                \"name\": \"Testaholics\",\n                //\"id\": 1,\n                \"email\": \"testcad77@gmail.com\"\n            },\n            \"replyTo\": \"testcad77@gmail.com\",\n            \"toField\": \"\",\n            \"previewText\": \"Testing API\",\n            \"tag\": \"Test\",\n            \"inlineImageActivation\": false,\n            \"mirrorActive\": false,\n            \"recipients\": {\n                \"lists\": [\n                    2,\n                    5,\n                    10\n                ],\n                \"exclusionLists\": []\n            },\n            \"statistics\": {\n                \"globalStats\": {\n                    \"uniqueClicks\": 0,\n                    \"clickers\": 0,\n                    \"complaints\": 0,\n                    \"delivered\": 0,\n                    \"sent\": 0,\n                    \"softBounces\": 0,\n                    \"hardBounces\": 0,\n                    \"uniqueViews\": 0,\n                    \"unsubscriptions\": 0,\n                    \"viewed\": 0,\n                    \"trackableViews\": 0,\n                    \"trackableViewsRate\": 0,\n                    \"estimatedViews\": 0\n                },\n                \"campaignStats\": [],\n                \"mirrorClick\": 0,\n                \"remaining\": 0,\n                \"linksStats\": {},\n                \"statsByDomain\": {}\n            },\n            \"htmlContent\": \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Strict//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\\\">\\n<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" xmlns:v=\\\"urn:schemas-microsoft-com:vml\\\" xmlns:o=\\\"urn:schemas-microsoft-com:office:office\\\"><head><meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"><meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\"><meta name=\\\"format-detection\\\" content=\\\"telephone=no\\\"><meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"><title>Act Now! Unlock the Secrets of Email Automation</title><style type=\\\"text/css\\\" emogrify=\\\"no\\\">#outlook a { padding:0; } .ExternalClass { width:100%; } .ExternalClass, .ExternalClass p, .ExternalClass span, .ExternalClass font, .ExternalClass td, .ExternalClass div { line-height: 100%; } table td { border-collapse: collapse; mso-line-height-rule: exactly; } .editable.image { font-size: 0 !important; line-height: 0 !important; } .nl2go_preheader { display: none !important; mso-hide:all !important; mso-line-height-rule: exactly; visibility: hidden !important; line-height: 0px !important; font-size: 0px !important; } body { width:100% !important; -webkit-text-size-adjust:100%; -ms-text-size-adjust:100%; margin:0; padding:0; } img { outline:none; text-decoration:none; -ms-interpolation-mode: bicubic; } a img { border:none; } table { border-collapse:collapse; mso-table-lspace:0pt; mso-table-rspace:0pt; } th { font-weight: normal; text-align: left; } *[class=\\\"gmail-fix\\\"] { display: none !important; } </style><style type=\\\"text/css\\\" emogrify=\\\"no\\\"> @media (max-width: 600px) { .gmx-killpill { content: ' \\\\03D1';} } </style><style type=\\\"text/css\\\" emogrify=\\\"no\\\">@media (max-width: 600px) { .gmx-killpill { content: ' \\\\03D1';} .r0-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 320px !important } .r1-i { background-color: #ffffff !important } .r2-c { box-sizing: border-box !important; text-align: center !important; valign: top !important; width: 100% !important } .r3-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 100% !important } .r4-i { background-color: #ffffff !important; padding-bottom: 20px !important; padding-left: 15px !important; padding-right: 15px !important; padding-top: 20px !important } .r5-c { box-sizing: border-box !important; display: block !important; valign: top !important; width: 100% !important } .r6-o { border-style: solid !important; width: 100% !important } .r7-i { padding-left: 0px !important; padding-right: 0px !important } .r8-i { padding-bottom: 20px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 20px !important } .r9-c { box-sizing: border-box !important; text-align: left !important; valign: top !important; width: 100% !important } .r10-o { border-style: solid !important; margin: 0 auto 0 0 !important; width: 100% !important } .r11-i { padding-top: 15px !important; text-align: center !important } .r12-i { padding-bottom: 15px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 15px !important } .r13-i { padding-top: 20px !important } .r14-i { padding-top: 15px !important; text-align: left !important } .r15-i { padding-bottom: 15px !important; padding-top: 15px !important; text-align: left !important } .r16-c { box-sizing: border-box !important; padding: 0 !important; text-align: center !important; valign: top !important; width: 100% !important } .r17-o { border-style: solid !important; margin: 0 auto 0 auto !important; margin-bottom: 15px !important; margin-top: 15px !important; width: 100% !important } .r18-i { padding: 0 !important; text-align: center !important } .r19-r { background-color: #1B1B1B !important; border-radius: 4px !important; border-width: 0px !important; box-sizing: border-box; height: initial !important; padding: 0 !important; padding-bottom: 12px !important; padding-left: 5px !important; padding-right: 5px !important; padding-top: 12px !important; text-align: center !important; width: 100% !important } .r20-i { background-color: #eff2f7 !important; padding-bottom: 20px !important; padding-left: 15px !important; padding-right: 15px !important; padding-top: 20px !important } .r21-i { padding-bottom: 0px !important; padding-top: 15px !important; text-align: center !important } .r22-i { padding-bottom: 0px !important; padding-top: 0px !important; text-align: center !important } .r23-i { padding-bottom: 15px !important; padding-top: 15px !important; text-align: center !important } .r24-c { box-sizing: border-box !important; text-align: center !important; width: 100% !important } .r25-i { padding-bottom: 15px !important; padding-left: 0px !important; padding-right: 0px !important; padding-top: 0px !important } .r26-c { box-sizing: border-box !important; text-align: center !important; valign: top !important; width: 129px !important } .r27-o { border-style: solid !important; margin: 0 auto 0 auto !important; width: 129px !important } body { -webkit-text-size-adjust: none } .nl2go-responsive-hide { display: none } .nl2go-body-table { min-width: unset !important } .mobshow { height: auto !important; overflow: visible !important; max-height: unset !important; visibility: visible !important; border: none !important } .resp-table { display: inline-table !important } .magic-resp { display: table-cell !important } } </style><style type=\\\"text/css\\\">p, h1, h2, h3, h4, ol, ul { margin: 0; } a, a:link { color: #696969; text-decoration: underline } .nl2go-default-textstyle { color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word } .default-button { color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px; font-style: normal; font-weight: normal; line-height: 1.15; text-decoration: none; word-break: break-word } .default-heading1 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 36px; word-break: break-word } .default-heading2 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 32px; word-break: break-word } .default-heading3 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 24px; word-break: break-word } .default-heading4 { color: #1F2D3D; font-family: arial,helvetica,sans-serif; font-size: 18px; word-break: break-word } a[x-apple-data-detectors] { color: inherit !important; text-decoration: inherit !important; font-size: inherit !important; font-family: inherit !important; font-weight: inherit !important; line-height: inherit !important; } .no-show-for-you { border: none; display: none; float: none; font-size: 0; height: 0; line-height: 0; max-height: 0; mso-hide: all; overflow: hidden; table-layout: fixed; visibility: hidden; width: 0; } </style><!--[if mso]><xml> <o:OfficeDocumentSettings> <o:AllowPNG/> <o:PixelsPerInch>96</o:PixelsPerInch> </o:OfficeDocumentSettings> </xml><![endif]--><style type=\\\"text/css\\\">a:link{color: #696969; text-decoration: underline;}</style></head><body bgcolor=\\\"#ffffff\\\" text=\\\"#3b3f44\\\" link=\\\"#696969\\\" yahoo=\\\"fix\\\" style=\\\"background-color: #ffffff;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" class=\\\"nl2go-body-table\\\" width=\\\"100%\\\" style=\\\"background-color: #ffffff; width: 100%;\\\"><tr><td> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"600\\\" align=\\\"center\\\" class=\\\"r0-o\\\" style=\\\"table-layout: fixed; width: 600px;\\\"><tr><td valign=\\\"top\\\" class=\\\"r1-i\\\" style=\\\"background-color: #ffffff;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r4-i\\\" style=\\\"background-color: #ffffff; padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"200\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 200px;\\\"><tr><td style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/logo-placeholder.png\\\" width=\\\"200\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r11-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-top: 15px; text-align: center;\\\"> <div><h1 class=\\\"default-heading1\\\" style=\\\"margin: 0; color: #1f2d3d; font-family: arial,helvetica,sans-serif; font-size: 36px; word-break: break-word;\\\">This is your headline.</h1></div> </td> </tr></table></td> </tr><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"570\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 570px;\\\"><tr><td class=\\\"r12-i\\\" style=\\\"font-size: 0px; line-height: 0px; padding-bottom: 15px; padding-top: 15px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-2x-1.png\\\" width=\\\"570\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"50%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"270\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 270px;\\\"><tr><td style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-1x-2.png\\\" width=\\\"270\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> <th width=\\\"50%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r2-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"270\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 270px;\\\"><tr><td class=\\\"r13-i\\\" style=\\\"font-size: 0px; line-height: 0px;\\\"> <img src=\\\"https://creative-assets.mailinblue.com/editor/templates/image-placeholder-1x-1.png\\\" width=\\\"270\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r8-i\\\" style=\\\"padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 10px; padding-right: 10px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"left\\\" valign=\\\"top\\\" class=\\\"r14-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-top: 15px; text-align: left;\\\"> <div><h2 class=\\\"default-heading2\\\" style=\\\"margin: 0; color: #1f2d3d; font-family: arial,helvetica,sans-serif; font-size: 32px; word-break: break-word;\\\">Your title here</h2></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"left\\\" valign=\\\"top\\\" class=\\\"r15-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; font-size: 16px; line-height: 1.5; word-break: break-word; padding-bottom: 15px; padding-top: 15px; text-align: left;\\\"> <div><p style=\\\"margin: 0;\\\">Start your newsletter with multiple visually striking images.</p><p style=\\\"margin: 0;\\\"> </p><p style=\\\"margin: 0;\\\">Start by replacing the full-width header and main images with your own, or use a solid color background.</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r16-c\\\" align=\\\"center\\\" style=\\\"align: center; padding-bottom: 15px; padding-top: 15px; valign: top;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"290\\\" class=\\\"r17-o\\\" style=\\\"background-color: #1B1B1B; border-collapse: separate; border-color: #1B1B1B; border-radius: 4px; border-style: solid; border-width: 0px; table-layout: fixed; width: 290px;\\\"><tr><td height=\\\"18\\\" align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r18-i nl2go-default-textstyle\\\" style=\\\"word-break: break-word; background-color: #1B1B1B; border-radius: 4px; color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px; font-style: normal; line-height: 1.15; padding-bottom: 12px; padding-left: 5px; padding-right: 5px; padding-top: 12px; text-align: center;\\\"> <a href=\\\"#top\\\" class=\\\"r19-r default-button\\\" target=\\\"_blank\\\" data-btn=\\\"1\\\" style=\\\"font-style: normal; font-weight: normal; line-height: 1.15; text-decoration: none; word-break: break-word; word-wrap: break-word; display: block; -webkit-text-size-adjust: none; color: #ffffff; font-family: arial,helvetica,sans-serif; font-size: 16px;\\\"> <span>Call to action</span></a> </td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table><table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td class=\\\"r20-i\\\" style=\\\"background-color: #eff2f7; padding-bottom: 20px; padding-top: 20px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><th width=\\\"100%\\\" valign=\\\"top\\\" class=\\\"r5-c\\\" style=\\\"font-weight: normal;\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r6-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r7-i\\\" style=\\\"padding-left: 15px; padding-right: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r21-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0;\\\"><strong>Testaholics</strong></p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r22-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">44, idowu taylor street, victoria island, lagos State, 101241, Lagos</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r21-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">This email was sent to {{contact.EMAIL}}</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r22-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\">You've received this email because you've subscribed to our newsletter.</p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r9-c\\\" align=\\\"left\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" class=\\\"r10-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td align=\\\"center\\\" valign=\\\"top\\\" class=\\\"r23-i nl2go-default-textstyle\\\" style=\\\"color: #3b3f44; font-family: arial,helvetica,sans-serif; word-break: break-word; font-size: 18px; line-height: 1.5; padding-bottom: 15px; padding-top: 15px; text-align: center;\\\"> <div><p style=\\\"margin: 0; font-size: 14px;\\\"> <a href=\\\"{{ unsubscribe }}\\\" style=\\\"color: #696969; text-decoration: underline;\\\">Unsubscribe</a></p></div> </td> </tr></table></td> </tr><tr><td class=\\\"r24-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"100%\\\" align=\\\"center\\\" class=\\\"r3-o\\\" style=\\\"table-layout: fixed; width: 100%;\\\"><tr><td valign=\\\"top\\\" class=\\\"r25-i\\\" style=\\\"padding-bottom: 15px;\\\"> <table width=\\\"100%\\\" cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\"><tr><td class=\\\"r26-c\\\" align=\\\"center\\\"> <table cellspacing=\\\"0\\\" cellpadding=\\\"0\\\" border=\\\"0\\\" role=\\\"presentation\\\" width=\\\"129\\\" class=\\\"r27-o\\\" style=\\\"table-layout: fixed;\\\"><tr><td height=\\\"48\\\" style=\\\"font-size: 0px; line-height: 0px;\\\"> <a href=\\\"https://www.brevo.com?utm_source=logo_client&utm_medium=email\\\"><img src=\\\"https://creative-assets.mailinblue.com/rnb-assets/en.png\\\" width=\\\"129\\\" height=\\\"48\\\" border=\\\"0\\\" style=\\\"display: block; width: 100%;\\\"></a></td> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></th> </tr></table></td> </tr></table></td> </tr></table></td> </tr></table></body></html>\\n\",\n            \"subject\": \"Save Big with Our December Discount!\",\n            \"scheduledAt\": \"2023-11-30T12:07:02.000+01:00\",\n            \"createdAt\": \"2023-11-29T12:46:38.000+01:00\",\n            \"modifiedAt\": \"2023-11-29T12:46:38.000+01:00\",\n            \"shareLink\": \"Share link not available for classic campaigns which are not sent\",\n            \"sendAtBestTime\": false,\n            \"abTesting\": false\n        }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter - May 2017\",\n  \"sender\": {\n    \"name\": \"Mary from MyShop\",\n    \"email\": \"newsletter@myshop.com\",\n    \"id\": 3\n  },\n  \"tag\": \"Newsletter\",\n  \"htmlContent\": \"<!DOCTYPE html> <html> <body> <h1>Confirm you email</h1> <p>Please confirm your email address by clicking on the link below</p> </body> </html>\",\n  \"htmlUrl\": \"https://html.domain.com\",\n  \"templateId\": -20032777,\n  \"scheduledAt\": \"exercitation labore Excepteur irure\",\n  \"subject\": \"Discover the New Collection !\",\n  \"replyTo\": \"support@myshop.com\",\n  \"toField\": \"{FNAME} {LNAME}\",\n  \"recipients\": {\n    \"exclusionListIds\": [\n      8,\n      8\n    ],\n    \"listIds\": [\n      32,\n      32\n    ]\n  },\n  \"attachmentUrl\": \"https://attachment.domain.com\",\n  \"inlineImageActivation\": true,\n  \"mirrorActive\": true,\n  \"footer\": \"[DEFAULT_FOOTER]\",\n  \"header\": \"[DEFAULT_HEADER]\",\n  \"utmCampaign\": \"NL_05_2017\",\n  \"params\": {\n    \"mollit_b6\": {}\n  },\n  \"sendAtBestTime\": true,\n  \"abTesting\": true,\n  \"subjectA\": \"Discover the New Collection!\",\n  \"subjectB\": \"Want to discover the New Collection?\",\n  \"splitRule\": 50,\n  \"winnerCriteria\": \"open\",\n  \"winnerDelay\": 50,\n  \"ipWarmupEnable\": true,\n  \"initialQuota\": 3000,\n  \"increaseRate\": 70,\n  \"unsubscriptionPageId\": \"62cbb7fabbe85021021aac52\",\n  \"updateFormId\": \"6313436b9ad40e23b371d095\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Upload an image to your account's image gallery",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emailCampaigns/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emailCampaigns",
										"images"
									]
								}
							},
							"response": [
								{
									"name": "Image has been successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												"images"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://img.mailinblue.com/100000/images/rnb/original/62casdase8wewq9df1c2f27c.jpeg\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"imageUrl\": \"https://somedomain.com/image1.jpg\",\n  \"name\": \"nature.jpg\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emailCampaigns/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emailCampaigns",
												"images"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "SMS Campaigns",
					"item": [
						{
							"name": "Returns the information for all your created SMS campaigns",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									],
									"query": [
										{
											"key": "status",
											"value": "archive",
											"description": "Status of campaign.",
											"disabled": true
										},
										{
											"key": "startDate",
											"value": "",
											"description": "**Mandatory if endDate is used.** Starting (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "",
											"description": "**Mandatory if startDate is used.** Ending (urlencoded) UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ) to filter the sent sms campaigns. **Prefer to pass your timezone in date-time format for accurate result** ( only available if either 'status' not passed and if passed is set to 'sent' )\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "500",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaigns informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"campaigns\": [\n    {\n      \"id\": 2,\n      \"name\": \"PROMO CODE\",\n      \"status\": \"sent\",\n      \"content\": \"Visit our Store and get some discount !\",\n      \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n      \"testSent\": true,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    },\n    {\n      \"id\": 10,\n      \"name\": \"SUMMER SALE\",\n      \"status\": \"draft\",\n      \"content\": \"Summer Sale is starting tomorrow. Get extra 10% with this code:SUM17\",\n      \"scheduledAt\": \"2017-08-04T12:30:00.000Z\",\n      \"testSent\": false,\n      \"sender\": \"MyCompany\",\n      \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n      \"sentDate\": \"2017-06-01T12:30:00.000Z\",\n      \"recipients\": {\n        \"lists\": [\n          21\n        ],\n        \"exclusionLists\": [\n          13\n        ]\n      },\n      \"statistics\": {\n        \"delivered\": 2987,\n        \"sent\": 3000,\n        \"processing\": 0,\n        \"softBounces\": 3,\n        \"hardBounces\": 1,\n        \"unsubscriptions\": 3,\n        \"answered\": 2\n      }\n    }\n  ],\n  \"count\": 12\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns?status=archive&startDate=veniam elit in&endDate=veniam elit in&limit=500&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											],
											"query": [
												{
													"key": "status",
													"value": "archive"
												},
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "500"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Creates an SMS campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      23,\n      23\n    ],\n    \"exclusionListIds\": [\n      12,\n      12\n    ]\n  },\n  \"scheduledAt\": \"2023-12-05T12:30:00+02:00\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"laborum ex\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get an SMS campaign",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "133",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 2,\n  \"name\": \"PROMO CODE\",\n  \"status\": \"sent\",\n  \"content\": \"Visit our Store and get some discount !\",\n  \"scheduledAt\": \"2017-06-01T12:30:00.000Z\",\n  \"testSent\": true,\n  \"sender\": \"MyCompany\",\n  \"createdAt\": \"2017-06-01T12:30:00.000Z\",\n  \"modifiedAt\": \"2017-05-01T12:30:00.000Z\",\n  \"recipients\": {\n    \"lists\": [\n      21\n    ],\n    \"exclusionLists\": [\n      13\n    ]\n  },\n  \"statistics\": {\n    \"delivered\": 2987,\n    \"sent\": 3000,\n    \"processing\": 0,\n    \"softBounces\": 3,\n    \"hardBounces\": 1,\n    \"unsubscriptions\": 3,\n    \"answered\": 2\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update an SMS campaign",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"irure deserunt mollit dolore\",\n  \"unicodeEnabled\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Spring Promo Code\",\n  \"sender\": \"MyShop\",\n  \"content\": \"Get a discount by visiting our NY store and saying : Happy Spring!\",\n  \"recipients\": {\n    \"listIds\": [\n      54,\n      54\n    ],\n    \"exclusionListIds\": [\n      15,\n      15\n    ]\n  },\n  \"scheduledAt\": \"tempor qui\",\n  \"unicodeEnabled\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an SMS campaign",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "133",
											"description": "(Required) id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign has been deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send your SMS campaign immediately",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendNow"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "SMS campaign has been scheduled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "SMS Campaign could not be sent",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You don't have enough credit to send your campaign. Please update your plan",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Payment Required",
									"code": 402,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendNow",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendNow"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a campaign's status",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"suspended\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"status"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "The campaign status has been updated successfully",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"suspended\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"status"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send a test SMS campaign",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendTest"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) Id of the SMS campaign"
										}
									]
								}
							},
							"response": [
								{
									"name": "Test SMS has been sent successfully to the recipient",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Test SMS could not be sent to the following email addresses",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"The SMS could not be sent to all recipients\",\n  \"unexistingSms\": [\n    \"uONf@iAiaZmhYWwGaKp.rtix\",\n    \"FYIHDS@aUQgXmyvqTgUDBWeTXsc.dh\"\n  ],\n  \"withoutListSms\": [\n    \"qRZAMI0KoD5@mIhThccLqX.qjn\",\n    \"CrFkHJl6Pz9bj@CkukdVNyAwyMdcvHBYDZ.vwf\"\n  ]\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"phoneNumber\": \"33689965433\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendTest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendTest"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) Id of the SMS campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export an SMS campaign's recipients",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"exportRecipients"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "13396752",
											"description": "(Required) id of the campaign"
										}
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"recipientsType\": \"answered\",\n  \"notifyURL\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/exportRecipients",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"exportRecipients"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Send an SMS campaign's report",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"smsCampaigns",
										":campaignId",
										"sendReport"
									],
									"variable": [
										{
											"key": "campaignId",
											"value": "{{companyId}}",
											"description": "(Required) id of the campaign"
										}
									]
								},
								"description": "Send report of Sent and Archived campaign, to the specified email addresses, with respective data and a pdf attachment in detail."
							},
							"response": [
								{
									"name": "Report has been successfully sent to the defined recipients",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Campaign ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": {\n    \"body\": \"Please find attached the report of our last email campaign.\",\n    \"to\": [\n      \"jim.suehan@example.com\",\n      \"jim.suehan@example.com\"\n    ]\n  },\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/smsCampaigns/:campaignId/sendReport",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"smsCampaigns",
												":campaignId",
												"sendReport"
											],
											"variable": [
												{
													"key": "campaignId",
													"value": "13396752",
													"description": "(Required) id of the campaign"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "WhatsApp Campaigns",
					"item": [
						{
							"name": "Get a Whatsapp campaign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 404;\r",
											"\r",
											"//Verify response code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(404);\r",
											"});\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has Not Found\", function () {\r",
											"    pm.response.to.have.status(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/?campaignId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										""
									],
									"query": [
										{
											"key": "campaignId",
											"value": "1",
											"description": "Pass the identifier of the campaign to be retrieved. \n"
										}
									]
								}
							},
							"response": [
								{
									"name": "Get a Whatsapp campaign",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/whatsappCampaigns/?campaignId=12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"whatsappCampaigns",
												""
											],
											"query": [
												{
													"key": "campaignId",
													"value": "12",
													"description": "Pass the identifier of the campaign to be retrieved. \n"
												}
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"id\": 1672035851100690,\n    \"campaignName\": \"Test Whatsapp Campaign\",\n    \"campaignStatus\": \"sent\",\n    \"scheduledAt\": \"2022-12-26T09:50:00.000Z\",\n    \"senderNumber\": 9368207029,\n    \"recipients\": {\n        \"type\": \"list\",\n        \"includedLists\": [\n            22\n        ],\n        \"excludedLists\": [\n            45\n        ]\n    },\n    \"template\": {\n        \"name\": \"official_campaign8\",\n        \"category\": \"MARKETING\",\n        \"language\": \"en\",\n        \"contains_button\": true,\n        \"display_header\": false,\n        \"components\": [\n            {\n                \"type\": \"BODY\",\n                \"text\": \"making it look like readable English.\"\n            },\n            {\n                \"type\": \"BUTTONS\",\n                \"buttons\": [\n                    {\n                        \"type\": \"URL\",\n                        \"text\": \"vLorem Ipsum is simply du\",\n                        \"url\": \"app.sendinblue\"\n                    },\n                    {\n                        \"type\": \"PHONE_NUMBER\",\n                        \"text\": \"Lorem Ipsum is simply dum\",\n                        \"phone_number\": \"+918800613137\"\n                    }\n                ]\n            }\n        ],\n        \"header_variables\": [\n            {\n                \"name\": \"FIRSTNAME\",\n                \"default\": \"INVALID HEADER\",\n                \"index\": 1,\n                \"datatype\": \"text\"\n            }\n        ],\n        \"header_type\": \"text\",\n        \"body_variable\": [],\n        \"button_type\": \"CALL_TO_ACTION\",\n        \"header_footer\": true\n    },\n    \"stats\": {\n        \"sent\": \"3,\",\n        \"delivered\": \"3,\",\n        \"read\": \"2,\",\n        \"unsubscribe\": \"0,\",\n        \"not_sent\": 4\n    },\n    \"createdAt\": \"2022-12-26T06:50:00.000Z\",\n    \"modifiedAt\": \"2022-12-26T08:50:00.000Z\"\n}"
								}
							]
						},
						{
							"name": "Delete a Whatsapp campaign",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/whatsappCampaigns/?campaignId=12",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"whatsappCampaigns",
										""
									],
									"query": [
										{
											"key": "campaignId",
											"value": "12"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Here you will find an overview of the WhatsApp Campaigns API. Currently, the actions available are fetching details of your WhatsApp campaigns or you can delete a WhatsApp campaign through the endpoints. You can check the endpoints on the Sendinblue API reference site at [API Reference > WhatsApp campaigns.](https://developers.sendinblue.com/reference/getwhatsappcampaign)\n\n## Requirements\n\nTo create and manage your Whatsapp campaigns you need to have access to the WhatsApp Campaigns app. If you have not already activated the WhatsApp platform on your account you can go to [Whatsapp Campaigns > Activating WhatsApp Campaigns.](https://developers.sendinblue.com/docs/activating-whatsapp-campaigns)\n\nYou can learn more in this [dedicated guide.](https://developers.sendinblue.com/docs/whatsapp-campaigns-1)"
				}
			],
			"description": "Manage , schedule and trigger your email, SMS and WhatsApp campaigns. Within this collection you can also fetch statistics for all your marketing operations.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Contact management",
			"item": [
				{
					"name": "Contacts",
					"item": [
						{
							"name": "Get all the contacts",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const createdAt = jsonData.contacts[0].createdAt;\r",
											"const id = jsonData.contacts[13].id;\r",
											"const email = jsonData.contacts[13].email;\r",
											"const count = jsonData.count\r",
											"const idRes = jsonData.contacts[0].id;\r",
											"const emailRes = jsonData.contacts[0].email;\r",
											"\r",
											"pm.environment.set(\"id_Res\", idRes);\r",
											"pm.environment.set(\"email_Res\", emailRes);\r",
											"\r",
											"if((id === 1) && (email === \"testcad77@gmail.com\")){\r",
											"    console.log(\"testcad77@gmail.com\")\r",
											"} else {\r",
											"    console.log(\"Email not found\");\r",
											"}\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Creation Date\", function () {\r",
											"    pm.expect(createdAt).to.eql(createdAt);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.contacts[13].id).to.eql(id);\r",
											"});\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"console.log(id);\r",
											"//console.log(email);\r",
											"console.log(createdAt)\r",
											"console.log(count)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									],
									"query": [
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "modifiedSince",
											"value": "YYYY-MM-DDTHH:mm:ss.SSSZ",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"contact1@example.com\",\n      \"id\": 247,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407250\",\n        \"IDENTIFICATION\": \"1-3RHQ-259\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Brennon\",\n        \"FIRST_NAME\": \"Meg\",\n        \"DOB\": \"1986-05-02T00:00:00.000Z\",\n        \"ADDRESS\": \"1 5th avenue\",\n        \"ZIP_CODE\": \"44300\",\n        \"CITY\": \"New-York\",\n        \"ACTION_CODE\": \"17HH98CH\"\n      }\n    },\n    {\n      \"email\": \"33058407248@mailin-sms.com\",\n      \"id\": 245,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-01T17:05:03.000Z\",\n      \"modifiedAt\": \"2017-05-01T17:05:03.000Z\",\n      \"listIds\": [\n        43,\n        61,\n        58\n      ],\n      \"attributes\": {\n        \"SMS\": \"33058407248\",\n        \"IDENTIFICATION\": \"1-78JS-432\",\n        \"CIV\": \"MS\",\n        \"LAST_NAME\": \"Press\",\n        \"FIRST_NAME\": \"Sophia\",\n        \"DOB\": \"1980-09-11T00:00:00.000Z\",\n        \"ADDRESS\": \"5 Flower Street\",\n        \"ZIP_CODE\": \"44119\",\n        \"CITY\": \"Seattle\",\n        \"ACTION_CODE\": \"17HU765\"\n      }\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts?limit=50&offset=0&modifiedSince=2022-02-01T00:00:00.000&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											],
											"query": [
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "modifiedSince",
													"value": "2022-02-01T00:00:00.000"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.id\r",
											"\r",
											"\r",
											"pm.environment.set(\"contact_id\", id);\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"pm.test(\"New Contact Id\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Function to generate a random string with given length\r",
											"function generateRandomString(length) {\r",
											"    var result = '';\r",
											"    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for (var i = 0; i < length; i++) {\r",
											"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Generate a random first name, last name, phone number & email\r",
											"var contactFirstName = generateRandomString(5);\r",
											"var contactLastName = generateRandomString(5);\r",
											"\r",
											"var phoneNumber = Math.floor(Math.random() * 100000000).toString();\r",
											"let contactPhoneNumber = '234' + phoneNumber;\r",
											"pm.environment.set(\"msisdn\", contactPhoneNumber) \r",
											"\r",
											"// Set country code to \"+234\" for Nigeria\r",
											"//var countryCode = \"+234\";\r",
											"//pm.environment.set(\"countryCode\", countryCode)\r",
											"\r",
											"var contactEmail = generateRandomString(5) + \"@yopmail.com\";\r",
											"\r",
											"\r",
											"\r",
											"// Set the request body with the random values\r",
											"pm.variables.set(\"firstName\", contactFirstName);\r",
											"pm.variables.set(\"lastName\", contactLastName);\r",
											"//pm.variables.set(\"phoneNumber\", contactPhoneNumber);\r",
											"//pm.variables.set(\"countryCode\", countryCode);\r",
											"pm.variables.set(\"email\", contactEmail);\r",
											"\r",
											"\r",
											"console.log(\"Generated Data:\");\r",
											"console.log(\"First Name: \" + contactFirstName);\r",
											"console.log(\"Last Name: \" + contactLastName);\r",
											"console.log(\"Phone Number: \" + contactPhoneNumber);\r",
											"//console.log(\"Country Code: \" + countryCode);\r",
											"console.log(\"Email: \" + contactEmail);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"attributes\": {\n        \"SMS\": \"{{msisdn}}\",\n        \"LASTNAME\": \"{{lastName}}\",\n        \"FIRSTNAME\": \"{{firstName}}\"\n    },\n    \"email\": \"{{email}}\",\n    \"assignToId\": \"655b2b6a37d1815642496c9d\",\n    \"listIds\": []\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts"
									]
								}
							},
							"response": [
								{
									"name": "Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 21\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"JOHN\"\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"listIds\": [\n    36\n  ],\n  \"updateEnabled\": false,\n  \"smtpBlacklistSender\": [\n    \"5l5on@XCyTwNVlbFYMuZJRtYQifJ.mvm\",\n    \"AHzfzNXj0fQ@ogSExyrBXmIaCyjopMPfNgGdxE.siws\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create Contact via DOI (Double-Opt-In) Flow",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\n{\n  \"email\": \"elly@example.com\",\n  \"attributes\": {\n    \"FNAME\": \"Elly\",\n    \"LNAME\": \"Roger\"\n  },\n  \"includeListIds\": [\n    36\n  ],\n  \"excludeListIds\": [\n    38\n  ],\n  \"templateId\": 2,\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"doubleOptinConfirmation"
									]
								}
							},
							"response": [
								{
									"name": "DOI Contact created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "DOI Contact updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"elly@example.com\",\n  \"includeListIds\": [\n    36\n  ],\n  \"redirectionUrl\": \"http://requestb.in/173lyyx1\",\n  \"templateId\": 2,\n  \"attributes\": {\n    \"FNAME\": \"John\",\n    \"LNANE\": \"Smith\"\n  },\n  \"excludeListIds\": [\n    6\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/doubleOptinConfirmation",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"doubleOptinConfirmation"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update multiple contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/batch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"batch"
									]
								}
							},
							"response": [
								{
									"name": "All contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.sendinblue.com/v3/\n/contacts/batch",
											"protocol": "https",
											"host": [
												"api",
												"sendinblue",
												"com"
											],
											"path": [
												"v3",
												"\n",
												"contacts",
												"batch"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Few contacts updated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"john@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"John\",\n        \"LNAME\": \"Smith\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"KcV-PaFnJ@eS.qz\",\n        \"bbrb5LcqfbXwIx@rSlyeERMpQugHPvTXhPZo.zmg\"\n      ]\n    },\n    {\n      \"email\": \"Anna@example.com\",\n      \"id\": 31,\n      \"attributes\": {\n        \"FNAME\": \"Anna Louise\"\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65\n      ],\n      \"unlinkListIds\": [\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"0f8VdF@RMbQgSGQHKuglhsPAzZSJcrVpq.njc\",\n        \"UZzlbOKm7qXU@mvJPCUvDwPNk.lhjd\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"batch"
											]
										}
									},
									"status": "Multi-Status (WebDAV) (RFC 4918)",
									"code": 207,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"successIds\": [\n    -42087947,\n    74324582\n  ],\n  \"failureIds\": [\n    670206,\n    -86165911\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"contacts\": [\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"proident__8\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"e7eb@lQEBFvQLPEkt.jldh\",\n        \"XpCRkVUJp-jwi@wH.cjt\"\n      ]\n    },\n    {\n      \"email\": \"elly@example.com\",\n      \"id\": 31,\n      \"sms\": \"+91xxxxxxxxxx\",\n      \"attributes\": {\n        \"exercitation41_\": {}\n      },\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"listIds\": [\n        65,\n        65\n      ],\n      \"unlinkListIds\": [\n        36,\n        36\n      ],\n      \"smtpBlacklistSender\": [\n        \"s1ORx3QG@wwTXjfg.xckw\",\n        \"PLC2NlHG8Msb@GbxoDEyLzfdXxPbpXCH.bcco\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/batch",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"batch"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Export contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"EXPORT\",\n    \"ids\": [],\n    \"is_all_selected\": true,\n    \"fe_query\": {\n        \"or\": [\n            {\n                \"and\": [\n                    {\n                        \"contact\": {\n                            \"field\": \"Subscription status\",\n                            \"dataType\": \"email_blacklisted\",\n                            \"operator\": \"blacklisted\",\n                            \"value\": [\n                                \"blacklisted\"\n                            ]\n                        },\n                        \"isValidated\": true\n                    }\n                ]\n            }\n        ]\n    },\n    \"searchBy\": \"\",\n    \"attributes\": [\n        \"LASTNAME\",\n        \"FIRSTNAME\",\n        \"SMS\"\n    ],\n    \"delimiter\": \",\",\n    \"sourceId\": null,\n    \"sourceType\": null,\n    \"isRecurring\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/export",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"export"
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input. File will be available in csv."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"export"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customContactFilter\": {\n    \"actionForContacts\": \"allContacts\",\n    \"actionForEmailCampaigns\": \"clickers\",\n    \"actionForSmsCampaigns\": \"softBounces\",\n    \"listId\": 2,\n    \"emailCampaignId\": 12,\n    \"smsCampaignId\": 12\n  },\n  \"exportAttributes\": [\n    \"NAME\",\n    \"NAME\"\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/export",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"export"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Import contacts",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"jsonBody\": [\n    {\n      \"ut_7f\": \"Lorem\",\n      \"deserunt_df\": \"Lorem\"\n    },\n    {\n      \"exercitation_30\": \"consequat Lorem\"\n    }\n  ],\n  \"lists\": {\n        \"2\": 2,\n        \"5\": 5,\n        \"7\": 7,\n        \"8\": 8,\n        \"9\": 9,\n        \"10\": 10,\n        \"11\": 11,\n        \"12\": 12,\n        \"13\": 13,\n        \"14\": 14,\n        \"29\": 29,\n        \"30\": 30\n    },\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 17\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"import"
									]
								},
								"description": "It returns the background process ID which on completion calls the notify URL that you have set in the input."
							},
							"response": [
								{
									"name": "process id created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "import by fileUrl",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "import by fileBody",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "import by jsonBody",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jsonBody\": [\n{   \n  \"email\":\"test@domain.com\",\n  \"attributes\":{\"FIRSTNAME\":\"Adam\"}\n}\n],\n  \"listIds\": [\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processId\": 78\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"fileUrl\": \"https://importfile.domain.com\",\n  \"fileBody\": \"NAME;SURNAME;EMAIL\\nSmith;John;john.smith@example.com\\nRoger;Ellie;ellie36@example.com\",\n  \"jsonBody\": [\n    {\n      \"esse_c6\": \"sunt minim nostrud \"\n    },\n    {\n      \"pariatur_81d\": \"laboris\"\n    }\n  ],\n  \"listIds\": [\n    76,\n    76\n  ],\n  \"notifyUrl\": \"http://requestb.in/173lyyx1\",\n  \"newList\": {\n    \"listName\": \"ContactImport - 2017-05\",\n    \"folderId\": 2\n  },\n  \"emailBlacklist\": false,\n  \"smsBlacklist\": false,\n  \"updateExistingContacts\": true,\n  \"emptyContactsAttributes\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/import",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"import"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a contact's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const ip = jsonData.statistics.unsubscriptions.adminUnsubscription[0].ip;\r",
											"\r",
											"\r",
											"//Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify email address\r",
											"pm.test(\"Verify that email macthes\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"domrq@yopmail.com\");\r",
											"});\r",
											"\r",
											"\r",
											"//Verify SMS\r",
											"pm.test(\"Verify Creation Date\", function () {\r",
											"    pm.expect(jsonData.attributes.SMS).to.eql(\"23440871854\");\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Contact ID\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(15);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify IP Address\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.statistics.unsubscriptions.adminUnsubscription[0].ip).to.eql(ip);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(jsonData.attributes.SMS);\r",
											"console.log(jsonData.id);\r",
											"console.log(ip);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"query": [
										{
											"key": "startDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate.\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "15",
											"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
										}
									]
								},
								"description": "Along with the contact details, this endpoint will show the statistics of contact for the recent 90 days by default. To fetch the earlier statistics, please use Get contact campaign stats ``https://developers.sendinblue.com/reference/contacts-7#getcontactstats`` endpoint with the appropriate date ranges."
							},
							"response": [
								{
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"peggy.rain@example.com\",\n  \"id\": 42,\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": false,\n  \"createdAt\": \"2017-05-02T16:40:31.000Z\",\n  \"modifiedAt\": \"2017-05-02T16:40:31.000Z\",\n  \"attributes\": {\n    \"FIRST_NAME\": \"Peggy\",\n    \"LAST_NAME\": \"Rain\",\n    \"SMS\": \"3087433387669\",\n    \"CIV\": \"1\",\n    \"DOB\": \"1986-04-13T00:00:00.000Z\",\n    \"ADDRESS\": \"987 5th avenue\",\n    \"ZIP_CODE\": \"87544\",\n    \"CITY\": \"New-York\",\n    \"AREA\": \"NY\"\n  },\n  \"listIds\": [\n    40\n  ],\n  \"statistics\": {\n    \"messagesSent\": [\n      {\n        \"campaignId\": 21,\n        \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n      },\n      {\n        \"campaignId\": 42,\n        \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n      }\n    ],\n    \"opened\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      },\n      {\n        \"campaignId\": 68,\n        \"count\": 1,\n        \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n        \"ip\": \"66.249.93.217\"\n      }\n    ],\n    \"clicked\": [\n      {\n        \"campaignId\": 21,\n        \"links\": [\n          {\n            \"count\": 2,\n            \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n            \"ip\": \"66.249.93.118\",\n            \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n          }\n        ]\n      }\n    ],\n    \"delivered\": [\n      {\n        \"campaignId\": 21,\n        \"count\": 2,\n        \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n        \"ip\": \"66.249.93.118\"\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact OR its SMS attribute value"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204\r",
											"\r",
											"\r",
											"//Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"//log response to the console\r",
											"console.log(responseCode)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "{{contact_id}}",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "You're not allowed to delete registered email contact with SendinBlue",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a contact",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"// Function to generate a random string with given length\r",
											"function generateRandomString(length) {\r",
											"    var result = '';\r",
											"    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r",
											"    var charactersLength = characters.length;\r",
											"    for (var i = 0; i < length; i++) {\r",
											"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Generate a random first name, last name, phone number & email\r",
											"var updateFirstName = generateRandomString(5);\r",
											"var updateLastName = generateRandomString(5);\r",
											"\r",
											"/*var phoneNumber = Math.floor(Math.random() * 100000000).toString();\r",
											"let contactPhoneNumber = '234' + phoneNumber;\r",
											"pm.environment.set(\"msisdn\", contactPhoneNumber)*/\r",
											"\r",
											"// Set country code to \"+234\" for Nigeria\r",
											"//var countryCode = \"+234\";\r",
											"//pm.environment.set(\"countryCode\", countryCode)\r",
											"\r",
											"/*var contactEmail = generateRandomString(5) + \"@yopmail.com\";*/\r",
											"\r",
											"\r",
											"\r",
											"// Set the request body with the random values\r",
											"pm.variables.set(\"update_firstName\", updateFirstName);\r",
											"pm.variables.set(\"update_lastName\", updateLastName);\r",
											"//pm.variables.set(\"phoneNumber\", contactPhoneNumber);\r",
											"//pm.variables.set(\"countryCode\", countryCode);\r",
											"//pm.variables.set(\"email\", contactEmail);\r",
											"\r",
											"\r",
											"console.log(\"Generated Updated Data:\");\r",
											"console.log(\"First Name: \" + updateFirstName);\r",
											"console.log(\"Last Name: \" + updateLastName);\r",
											"//console.log(\"Phone Number: \" + contactPhoneNumber);\r",
											"//console.log(\"Country Code: \" + countryCode);\r",
											"//console.log(\"Email: \" + contactEmail);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204\r",
											"\r",
											"\r",
											"//Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//log response to the console\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": " /*{\n            \"email\": \"{{email_Res}}\",\n            \"id\": {{id_Res}},\n            \"emailBlacklisted\": false,\n            \"smsBlacklisted\": false,\n            \"createdAt\": \"2023-11-29T11:02:30.882+01:00\",\n            \"modifiedAt\": \"2023-11-29T11:02:30.882+01:00\",\n            \"listIds\": [\n                2\n            ],\n            \"attributes\": {\n                \"LASTNAME\": \"Rome\",\n                \"FIRSTNAME\": \"bukky\",\n                \"SMS\": \"2349034123458\",\n                \"LANDLINE_NUMBER\": \"2349034123456\",\n                \"ADDRESS\": \"99, test road, UK\",\n                \"SEX\": \"Female\"\n            }\n        }*/\n\n   {\n            \"email\": \"poxal@yopmail.com\",\n            \"id\": 40,\n            \"emailBlacklisted\": false,\n            \"smsBlacklisted\": false,\n            \"createdAt\": \"2023-11-29T11:16:29.984+01:00\",\n            \"modifiedAt\": \"2023-11-29T11:16:29.984+01:00\",\n            \"listIds\": [],\n            \"attributes\": {\n                \"LASTNAME\": \"{{update_lirstName}}\",\n                \"FIRSTNAME\": \"{{update_firstName}}\",\n                \"SMS\": \"23437514221\"\n            }\n        }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier"
									],
									"variable": [
										{
											"key": "identifier",
											"value": "40"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attributes\": {\n    \"officia_53\": {},\n    \"deserunt_e\": {}\n  },\n  \"emailBlacklisted\": false,\n  \"smsBlacklisted\": true,\n  \"listIds\": [\n    65,\n    65\n  ],\n  \"unlinkListIds\": [\n    36,\n    36\n  ],\n  \"smtpBlacklistSender\": [\n    \"aAMh9rjM42lcQ@pdAwzjNyDhGJpjnLrFnDDi.ppk\",\n    \"vNiiwqB@yyrQQEHhLsBXdizLAH.bgb\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier"
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get email campaigns' statistics for a contact",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"//Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"//log response to the console\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/:identifier/campaignStats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										":identifier",
										"campaignStats"
									],
									"query": [
										{
											"key": "startDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if endDate is used.** Starting date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be lower than equal to endDate\n",
											"disabled": true
										},
										{
											"key": "endDate",
											"value": "YYYY-MM-DD",
											"description": "**Mandatory if startDate is used.** Ending date (YYYY-MM-DD) of the statistic events specific to campaigns. Must be greater than equal to startDate. Maximum difference between startDate and endDate should not be greater than 90 days\n",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "identifier",
											"value": "testcad77@gmail.com",
											"description": "(Required) Email (urlencoded) OR ID of the contact"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact campaign statistics informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"from\": \"sendermail@example.com\",\n  \"tags\": [\n    \"tag1\",\n    \"tag2\"\n  ],\n  \"messagesSent\": [\n    {\n      \"campaignId\": 21,\n      \"eventTime\": \"2016-05-03T20:15:13.000Z\"\n    },\n    {\n      \"campaignId\": 42,\n      \"eventTime\": \"2016-10-17T10:30:01.000Z\"\n    },\n    {\n      \"campaignId\": 45,\n      \"eventTime\": \"2016-11-09T11:45:02.000Z\"\n    }\n  ],\n  \"opened\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    },\n    {\n      \"campaignId\": 45,\n      \"count\": 1,\n      \"eventTime\": \"2017-01-30T13:56:40.000Z\",\n      \"ip\": \"66.249.93.217\"\n    }\n  ],\n  \"clicked\": [\n    {\n      \"campaignId\": 21,\n      \"links\": [\n        {\n          \"count\": 2,\n          \"eventTime\": \"2016-05-03T21:25:01.000Z\",\n          \"ip\": \"66.249.93.118\",\n          \"url\": \"https://url.domain.com/fbe5387ec717e333628380454f68670010b205ff/1/go?uid={EMAIL}&utm_source=sendinblue&utm_campaign=test_camp&utm_medium=email\"\n        }\n      ]\n    }\n  ],\n  \"delivered\": [\n    {\n      \"campaignId\": 21,\n      \"count\": 2,\n      \"eventTime\": \"2016-05-03T21:24:56.000Z\",\n      \"ip\": \"66.249.93.118\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Contact's email not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/:identifier/campaignStats?startDate=veniam elit in&endDate=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												":identifier",
												"campaignStats"
											],
											"query": [
												{
													"key": "startDate",
													"value": "veniam elit in"
												},
												{
													"key": "endDate",
													"value": "veniam elit in"
												}
											],
											"variable": [
												{
													"key": "identifier",
													"value": "veniam elit in",
													"description": "(Required) Email (urlencoded) OR ID of the contact"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Folders",
					"item": [
						{
							"name": "Get all folders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.folders.id;\r",
											"const name = jsonData.folders.name\r",
											"const folders = jsonData.folders;\r",
											"const foldersIdArray = jsonData.folders\r",
											"const count = jsonData.count;\r",
											"\r",
											"//To loop through the Array for Folder ID\r",
											"for(let i = 0; i < foldersIdArray.length; i++) {\r",
											"    const id = foldersIdArray[i].id;\r",
											"    console.log(`file ID for item ${i + 1}: ${id}`);\r",
											"}\r",
											"\r",
											"//To make a logical comparism of an ID and the name associated with it\r",
											"if((folders[4].id === 1) && (folders[4].name === \"Your first folder\" )){\r",
											"    console.log(folders[4].name + \" and \" + folders[4].id +  \" are  valid\")\r",
											"}\r",
											"else {\r",
											"    console.log(\"They are invalid\")\r",
											"}\r",
											"\r",
											"\r",
											"//To Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"\r",
											"//To verify the name of the item on the specified index\r",
											"pm.test(\"Verify name\", function () {\r",
											"    pm.expect(jsonData.folders[3].name).to.eql(folders[3].name);\r",
											"});\r",
											"\r",
											"\r",
											"//To Verify Count\r",
											"pm.test(\"Verify Count\", function () {\r",
											"    pm.expect(jsonData.count).to.eql(count);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode)\r",
											"console.log(folders[4].id);\r",
											"console.log(folders[4].name);\r",
											"console.log(count)\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "(Required) Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "(Required) Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Folders informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"folders\": [\n    {\n      \"id\": 42,\n      \"name\": \"Ninja_Form\",\n      \"totalBlacklisted\": 98,\n      \"totalSubscribers\": 4567,\n      \"uniqueSubscribers\": 4665\n    },\n    {\n      \"id\": 29,\n      \"name\": \"Prestashop\",\n      \"totalBlacklisted\": 10,\n      \"totalSubscribers\": 6543,\n      \"uniqueSubscribers\": 6553\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.id\r",
											"\r",
											"//To set an environment variable\r",
											"pm.environment.set(\"folder_id\", id)\r",
											"\r",
											"\r",
											"//To Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(201);\r",
											"});\r",
											"\r",
											"//To verify file Id\r",
											"pm.test(\"Verify file ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode)\r",
											"console.log(id)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// Array of meaningful words\r",
											"const meaningfulWords = ['WordPress', 'Conversations', 'Meetings', 'Call', 'Event', 'Schedule', 'Order', 'Conference', 'Customer'];\r",
											"\r",
											"// Function to get a random word from the array\r",
											"function getRandomWord() {\r",
											"    const randomIndex = Math.floor(Math.random() * meaningfulWords.length);\r",
											"    return meaningfulWords[randomIndex];\r",
											"}\r",
											"\r",
											"// Generate two meaningful words\r",
											"const word1 = getRandomWord();\r",
											"const word2 = getRandomWord();\r",
											"\r",
											"// Combine the words\r",
											"const meaningfulPhrase = `${word1} ${word2}`;\r",
											"\r",
											"// Set the generated phrase as an environment variable\r",
											"pm.environment.set('meaningfulPhrase', meaningfulPhrase);\r",
											"\r",
											"// Log the generated phrase for reference\r",
											"console.log(`Meaningful Phrase: ${meaningfulPhrase}`);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{meaningfulPhrase}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Returns a folder's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.id;\r",
											"const name = jsonData.name;\r",
											"\r",
											"\r",
											"//Verify repsonse code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify Folder Id\r",
											"pm.test(\"Verify folder ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"//Verify folder name\r",
											"pm.test(\"Verify folder name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(name);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"//Log responses to the console\r",
											"console.log(responseCode);\r",
											"console.log(id);\r",
											"console.log(name);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folder_id}}",
											"description": "(Required) id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"name\": \"Client_Folder\",\n  \"totalBlacklisted\": 987,\n  \"totalSubscribers\": 16778,\n  \"uniqueSubscribers\": 17765\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											"\r",
											"if((jsonData.folder.id === \"{{folder_id}}\") && (jsonData.folder.name === \"{{folder_name}}\" )){\r",
											"    console.log(folders[4].name + \" and \" + folders[4].id +  \" are  valid\")\r",
											"}\r",
											"else {\r",
											"    console.log(\"They are invalid\")\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"{{meaningfulPhrase}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folder_id}}",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Wordpress Contacts\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a folder (and all its lists)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//To Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"//To Verify reponse time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"//To verify that status has a name\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId"
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folder_id}}",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId"
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get lists in a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"\r",
											"//To Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"//To Verify reponse time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"//To verify that status has a name\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/folders/:folderId/lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"folders",
										":folderId",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "folderId",
											"value": "{{folder_id}}",
											"description": "(Required) Id of the folder"
										}
									]
								}
							},
							"response": [
								{
									"name": "Folder's Lists details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 46,\n      \"name\": \"Reactiv\",\n      \"totalSubscribers\": 7655,\n      \"totalBlacklisted\": 0,\n      \"uniqueSubscribers\": 7655\n    },\n    {\n      \"id\": 41,\n      \"name\": \"NY_Area\",\n      \"totalSubscribers\": 3654,\n      \"totalBlacklisted\": 23,\n      \"uniqueSubscribers\": 3677\n    },\n    {\n      \"id\": 22,\n      \"name\": \"VIP_Customer\",\n      \"totalSubscribers\": 8753,\n      \"totalBlacklisted\": 72,\n      \"uniqueSubscribers\": 8825\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Folder ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/folders/:folderId/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"folders",
												":folderId",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "folderId",
													"value": "13396752",
													"description": "(Required) Id of the folder"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Lists",
					"item": [
						{
							"name": "Get all the lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const lists = jsonData.lists;\r",
											"\r",
											"const count = jsonData.count;\r",
											"\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test('Verify lists 1st name & ID', function () {\r",
											"    pm.expect(jsonData.lists[0].id).to.eql(lists[0].id);\r",
											"    pm.expect(jsonData.lists[0].name).to.eql(lists[0].name);\r",
											"});\r",
											"\r",
											"pm.test('Verify lists 2nd name & ID', function () {\r",
											"    pm.expect(jsonData.lists[1].id).to.eql(lists[1].id);\r",
											"    pm.expect(jsonData.lists[1].name).to.eql(lists[1].name);\r",
											"});\r",
											"\r",
											"pm.test('Verify lists 3rd name & ID', function () {\r",
											"    pm.expect(jsonData.lists[2].id).to.eql(lists[2].id);\r",
											"    pm.expect(jsonData.lists[2].name).to.eql(lists[2].name);\r",
											"});\r",
											"\r",
											"pm.test('Verify lists 3rd name & ID', function () {\r",
											"    pm.expect(jsonData.count).to.eql(count);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(lists[1]);\r",
											"console.log(count);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Lists informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"lists\": [\n    {\n      \"id\": 53,\n      \"name\": \"Spanish_Speakers\",\n      \"totalSubscribers\": 5432,\n      \"totalBlacklisted\": 65,\n      \"uniqueSubscribers\": 5497,\n      \"folderId\": 1\n    },\n    {\n      \"id\": 50,\n      \"name\": \"Other\",\n      \"totalSubscribers\": 10976,\n      \"totalBlacklisted\": 765,\n      \"uniqueSubscribers\": 11741,\n      \"folderId\": 2\n    }\n  ],\n  \"count\": 2\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const id = jsonData.id\r",
											"\r",
											"pm.environment.set(\"list_id\", id)\r",
											"\r",
											"\r",
											"\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(201);\r",
											"});\r",
											"\r",
											"pm.test('Verify list ID', function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(id);\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"folderId\": 6,\n  \"name\": \"Wordpress Contacts\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"folderId\": 2,\n  \"name\": \"Magento Customer - ES\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get contacts in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"})\r",
											"\r",
											"pm.test('Verify response Body', function () {\r",
											"    pm.expect(jsonData.contacts).to.eql([]);\r",
											"    pm.expect(jsonData.count).to.eql(0);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts"
									],
									"query": [
										{
											"key": "modifiedSince",
											"value": "",
											"description": "Filter (urlencoded) the contacts modified after a given UTC date-time (YYYY-MM-DDTHH:mm:ss.SSSZ). **Prefer to pass your timezone in date-time format for accurate result.**\n",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "50",
											"description": "Number of documents per page",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Index of the first document of the page",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{list_id}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "Contact informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contacts\": [\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"id\": 45,\n      \"emailBlacklisted\": false,\n      \"smsBlacklisted\": true,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1,\n        2\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Pain\",\n        \"FIRSTNAME\": \"Alex\",\n        \"DOB\": \"2010-12-31T00:00:00.000Z\",\n        \"GENDER\": \"Kid\"\n      }\n    },\n    {\n      \"email\": \"john.smith@example.com\",\n      \"id\": 32,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Smith\",\n        \"FIRSTNAME\": \"John\",\n        \"DOB\": \"1986-06-21T00:00:00.000Z\",\n        \"GENDER\": \"Men\"\n      }\n    },\n    {\n      \"email\": \"helen.rose@example.com\",\n      \"id\": 65,\n      \"emailBlacklisted\": true,\n      \"smsBlacklisted\": false,\n      \"createdAt\": \"2017-05-12T12:30:00.000Z\",\n      \"modifiedAt\": \"2017-05-12T12:30:00.000Z\",\n      \"listIds\": [\n        12,\n        9,\n        20\n      ],\n      \"listUnsubscribed\": [\n        1\n      ],\n      \"attributes\": {\n        \"LASTNAME\": \"Rose\",\n        \"FIRSTNAME\": \"Helen\",\n        \"DOB\": \"1988-11-02T00:00:00.000Z\",\n        \"GENDER\": \"Women\",\n        \"SMS\": \"3375599887766\"\n      }\n    }\n  ],\n  \"count\": 17655\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts?modifiedSince=veniam elit in&limit=50&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts"
											],
											"query": [
												{
													"key": "modifiedSince",
													"value": "veniam elit in"
												},
												{
													"key": "limit",
													"value": "50"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Add existing contacts to a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const contacts = jsonData.contacts;\r",
											"\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(201);\r",
											"})\r",
											"\r",
											"pm.test('Verify Success Count ', function () {\r",
											"    pm.expect(jsonData.contacts.success[0]).to.eql(contacts.success[0]);\r",
											"});\r",
											"\r",
											"pm.test('Verify Failure Count', function () {\r",
											"    pm.expect(jsonData.contacts.failure).to.eql(contacts.failure);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(contacts.success[0]);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"ADD_TO_LIST\",\n    \"is_all_selected\": false,\n    \"is_anonymous_selected\": false,\n    \"is_conversation_anonymous_contact_selected\": false,\n    \"ids\": [\n        25\n    ],\n    \"link_list_ids\": [\n        10\n    ],\n    \"fe_query\": {\n        \"or\": [\n            {\n                \"and\": [\n                    {\n                        \"contact\": {\n                            \"field\": \"List\",\n                            \"dataType\": \"list\",\n                            \"operator\": \"in\",\n                            \"value\": [\n                                5\n                            ]\n                        },\n                        \"isValidated\": true\n                    }\n                ]\n            }\n        ]\n    },\n    \"searchBy\": \"\",\n    \"source_list\": 5\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"add"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{list_id}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts have been added successfully to the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"add"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a contact from a list",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"action\": \"CONTACT_DELETE\",\n    \"is_all_selected\": false,\n    \"is_anonymous_selected\": false,\n    \"is_conversation_anonymous_contact_selected\": false,\n    \"ids\": [\n        25\n    ],\n    \"fe_query\": {\n        \"or\": [\n            {\n                \"and\": [\n                    {\n                        \"contact\": {\n                            \"field\": \"List\",\n                            \"dataType\": \"list\",\n                            \"operator\": \"in\",\n                            \"value\": [\n                                14\n                            ]\n                        },\n                        \"isValidated\": true\n                    }\n                ]\n            }\n        ]\n    },\n    \"searchBy\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId",
										"contacts",
										"remove"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{list_id}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "All contacts have been removed successfully from the list with details of failed ones",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ],\n  \"failure\": [\n    \"david@example.com\"\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emails\": [\n    \"jeff32@example.com\",\n    \"jim56@example.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId/contacts/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId",
												"contacts",
												"remove"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a list's details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const id = jsonData.id\r",
											"\r",
											"const name = jsonData.name\r",
											"\r",
											"const dynamicList = jsonData.dynamicList\r",
											"\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"})\r",
											"\r",
											"pm.test('Verify ID', function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test('Verify name', function () {\r",
											"    pm.expect(jsonData.name).to.eql(name);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test('Verify Dynamic List state', function () {\r",
											"    pm.expect(jsonData.dynamicList).to.eql(dynamicList);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id)\r",
											"console.log(name)\r",
											"console.log(dynamicList)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{list_id}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "List informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 12,\n  \"name\": \"Newsletter_Weekly\",\n  \"totalSubscribers\": 6533,\n  \"totalBlacklisted\": 63,\n  \"uniqueSubscribers\": 6596,\n  \"folderId\": 1,\n  \"createdAt\": \"2016-02-26T11:56:08.000Z\",\n  \"campaignStats\": [\n    {\n      \"campaignId\": 15,\n      \"stats\": {\n        \"uniqueClicks\": 701,\n        \"clickers\": 789,\n        \"complaints\": 0,\n        \"delivered\": 6632,\n        \"sent\": 6645,\n        \"softBounces\": 34,\n        \"hardBounces\": 4,\n        \"uniqueViews\": 3442,\n        \"unsubscriptions\": 4,\n        \"viewed\": 4322,\n        \"deferred\": 0\n      }\n    },\n    {\n      \"campaignId\": 45,\n      \"stats\": {\n        \"uniqueClicks\": 654,\n        \"clickers\": 788,\n        \"complaints\": 1,\n        \"delivered\": 4078,\n        \"sent\": 4334,\n        \"softBounces\": 18,\n        \"hardBounces\": 2,\n        \"uniqueViews\": 987,\n        \"unsubscriptions\": 4,\n        \"viewed\": 1555,\n        \"deferred\": 0\n      }\n    }\n  ],\n  \"dynamicList\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"\r",
											"const id = jsonData.id\r",
											"\r",
											"const name = jsonData.name\r",
											"\r",
											"const dynamicList = jsonData.dynamicList\r",
											"\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"})\r",
											"\r",
											"pm.test('Verify ID', function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test('Verify name', function () {\r",
											"    pm.expect(jsonData.name).to.eql(name);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test('Verify Dynamic List state', function () {\r",
											"    pm.expect(jsonData.dynamicList).to.eql(dynamicList);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id)\r",
											"console.log(name)\r",
											"console.log(dynamicList)\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Wordpresss Contacts\",\n  \"folderId\": \"{{folder_id}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{list_id}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "List updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Magento Customer - ES\",\n  \"folderId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"//To Verify status code\r",
											"pm.test('Verify Status Code', function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"//To verify that status code has a name\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"//To Verify response time\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/lists/:listId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"lists",
										":listId"
									],
									"variable": [
										{
											"key": "listId",
											"value": "{{list_id}}",
											"description": "(Required) Id of the list"
										}
									]
								}
							},
							"response": [
								{
									"name": "List deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "List ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/lists/:listId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"lists",
												":listId"
											],
											"variable": [
												{
													"key": "listId",
													"value": "13396752",
													"description": "(Required) Id of the list"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Attributes",
					"item": [
						{
							"name": "List all attributes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const attributes = jsonData.attributes;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify attribute first object list\", function () {\r",
											"    pm.expect(attributes[0].name).to.eql(\"BLACKLIST\");\r",
											"    pm.expect(attributes[0].category).to.eql(\"global\");\r",
											"    pm.expect(attributes[0].type).to.eql(\"float\");\r",
											"    pm.expect(attributes[0].calculatedValue).to.eql(\"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Attributes 2nd name, READERS\", function () {\r",
											"    pm.expect(attributes[1].name).to.eql(\"READERS\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Attributes 3rd name, CLICKERS\", function () {\r",
											"    pm.expect(attributes[2].name).to.eql(\"CLICKERS\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Attributes 4th name, LASTNAME\", function () {\r",
											"    pm.expect(attributes[3].name).to.eql(\"LASTNAME\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Attributes 5th name, FIRSTNAME\", function () {\r",
											"    pm.expect(attributes[4].name).to.eql(\"FIRSTNAME\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"console.log(attributes[0]);\r",
											"console.log(attributes[1].name);\r",
											"console.log(attributes[2].name);\r",
											"console.log(attributes[3].name);\r",
											"console.log(attributes[4].name);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes"
									]
								}
							},
							"response": [
								{
									"name": "Attributes listed",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"attributes\": [\n    {\n      \"name\": \"LASTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"FIRSTNAME\",\n      \"category\": \"normal\",\n      \"type\": \"text\"\n    },\n    {\n      \"name\": \"DOB\",\n      \"category\": \"normal\",\n      \"type\": \"date\"\n    },\n    {\n      \"name\": \"GENDER\",\n      \"category\": \"category\",\n      \"type\": \"text\",\n      \"enumeration\": [\n        {\n          \"value\": 1,\n          \"label\": \"Men\"\n        },\n        {\n          \"value\": 2,\n          \"label\": \"Women\"\n        },\n        {\n          \"value\": 3,\n          \"label\": \"Kid\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update contact attribute",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"//Verify status code\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(204);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"//Verify that status code has a string\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"\r",
											"//Verify response time\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n            \"name\": \"ADDRESS\",\n            \"category\": \"normal\",\n            \"type\": \"text\",\n            \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\"\n\n        }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global",
											"description": "(Required) Category of the attribute"
										},
										{
											"key": "attributeName",
											"value": "BLACKLIST",
											"description": "(Required) Name of the existing attribute"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Attribute not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Men\",\n      \"value\": 1\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create contact attribute",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"act\": \"add\",\n    \"data\": {\n        \"field\": \"SEX\",\n        \"dataType\": \"Text\",\n         \"calculatedValue\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\"\n    },\n    \"attrType\": \"list\",\n    \"dataTypeValKey\": {\n        \"text\": \"Text\",\n        \"date\": \"Date\",\n        \"float\": \"Number\",\n        \"category\": \"Category\",\n        \"boolean\": \"Boolean\",\n        \"ID\": \"ID\"\n    },\n    \n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwczpcL1wvbXkuYnJldm8uY29tXC9saXN0c1wvYXR0cmlidXRlcyIsImF1ZCI6Imh0dHBzOlwvXC9teS5icmV2by5jb21cLyIsInN1YiI6IjY3OTU0ODgiLCJpYXQiOjAsImp0aSI6IiIsInJrZXkiOiIwemJobFE1ZmhUIn0.Wbx0Ai5A7RK-NdMaDbiApvu_jBCXM9r7wDOl9pdI0ro\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": "global"
										},
										{
											"key": "attributeName",
											"value": "SEX"
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"value\": \"COUNT[BLACKLISTED,BLACKLISTED,<,NOW()]\",\n  \"enumeration\": [\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    },\n    {\n      \"label\": \"Women\",\n      \"value\": 1\n    }\n  ],\n  \"type\": \"text\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete an attribute",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"action\": \"CONTACT_DELETE\",\r\n    \"is_all_selected\": false,\r\n    \"is_anonymous_selected\": false,\r\n    \"is_conversation_anonymous_contact_selected\": false,\r\n    \"ids\": [\r\n        17\r\n    ],\r\n    \"fe_query\": {},\r\n    \"searchBy\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"contacts",
										"attributes",
										":attributeCategory",
										":attributeName"
									],
									"variable": [
										{
											"key": "attributeCategory",
											"value": ""
										},
										{
											"key": "attributeName",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "Attribute deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Attribute not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/contacts/attributes/:attributeCategory/:attributeName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"contacts",
												"attributes",
												":attributeCategory",
												":attributeName"
											],
											"variable": [
												{
													"key": "attributeCategory",
													"value": "global",
													"description": "(Required) Category of the attribute"
												},
												{
													"key": "attributeName",
													"value": "veniam elit in",
													"description": "(Required) Name of the existing attribute"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					],
					"auth": {
						"type": "apikey"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"description": "This collection contains the services to create bulk updates to contacts, create data import jobs, organize and segment your lists, among others.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Accounts and settings",
			"item": [
				{
					"name": "Webhooks",
					"item": [
						{
							"name": "Get all webhooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200\r",
											"console.log(responseCode);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Verify URL\", function () {\r",
											"    pm.expect(jsonData.webhooks[0]).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.webhooks[1]).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(jsonData.webhooks[0])\r",
											"console.log(jsonData.webhooks[1])\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks?type=marketing&sort=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									],
									"query": [
										{
											"key": "type",
											"value": "marketing",
											"description": "Filter on webhook type"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of webhook creation"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhooks informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"webhooks\": [\n    {\n      \"url\": \"https://example.domain.com/webhook/events/kzfxxxxxxxx0uyo1\",\n      \"id\": 9864,\n      \"description\": \"Webhook triggered on campaign openings\",\n      \"events\": [\n        \"opened\"\n      ],\n      \"type\": \"transac\",\n      \"createdAt\": \"2016-07-18T12:30:09.000Z\",\n      \"modifiedAt\": \"2016-07-18T16:00:50.000Z\"\n    },\n    {\n      \"url\": \"http://exmaple.domain.com/15kxxxxxn1\",\n      \"id\": 22770,\n      \"description\": \"Webhook triggered on campaign hard bounces\",\n      \"events\": [\n        \"hardBounces\"\n      ],\n      \"type\": \"marketing\",\n      \"createdAt\": \"2017-02-20T14:30:00.000Z\",\n      \"modifiedAt\": \"2017-02-20T19:00:00.000Z\"\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks?type=transactional&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											],
											"query": [
												{
													"key": "type",
													"value": "transactional"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a webhook",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"function getRandomString(length) {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    let result = '';\r",
											"    for (let i = 0; i < length; i++) {\r",
											"        const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"        result += characters.charAt(randomIndex);\r",
											"    }\r",
											"    return result;\r",
											"}\r",
											"\r",
											"// Original URL\r",
											"const url = 'http://requestb.in/173lyyx3';\r",
											"\r",
											"// Extract the characters after the forward slash\r",
											"const pathAfterSlash = url.split('/').pop();\r",
											"\r",
											"// Generate a random string\r",
											"const randomString = getRandomString(pathAfterSlash.length);\r",
											"\r",
											"// Update the characters after the forward slash with the random string\r",
											"const updatedURL = url.replace(pathAfterSlash, randomString);\r",
											"\r",
											"pm.environment.set(\"updatedURL\", updatedURL) \r",
											"\r",
											"// Log the updated URL for reference\r",
											"console.log(`Updated URL: ${updatedURL}`);\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"/*function getRandomCharacters() {\r",
											"    const characters = 'abcdefghijklmnopqrstuvwxyz0123456789';\r",
											"    const randomIndex = Math.floor(Math.random() * characters.length);\r",
											"    return characters.charAt(randomIndex);\r",
											"}\r",
											"\r",
											"//\"url\": \"https://webhook.site/5ebc5d36-217f-4989-81fd-5f02cbb49c63\"\r",
											"const originalURL = 'http://requestb.in/21try65';\r",
											"\r",
											"// Extract the last character\r",
											"const lastCharacters = originalURL.slice(-6);\r",
											"\r",
											"// Generate a random character\r",
											"const randomCharacter = getRandomCharacters();\r",
											"\r",
											"// Update the last character with the random character\r",
											"const updatedURL = originalURL.slice(0, -6) + randomCharacter;\r",
											"\r",
											"// Log the updated URL for reference\r",
											"console.log(`Updated URL: ${updatedURL}`);\r",
											"*/\r",
											"\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201\r",
											"console.log(responseCode);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"const jsonData = pm.response.json();\r",
											"const id =  jsonData.id;\r",
											"pm.environment.set(\"myWebhookId\", id);\r",
											"\r",
											"pm.test(\"Verify ID from the response body\", function () {\r",
											"    \r",
											"    pm.expect(jsonData.id).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
											"});\r",
											"\r",
											"console.log(\" My Webhook Id: \" + id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"events\": [\n        \"delivered\"\n    ],\n    \"url\": \"{{updatedURL}}\",\n    \"description\": \"test for SMS\",\n    \"type\": \"marketing\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks"
									]
								}
							},
							"response": [
								{
									"name": "successfully created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"events\": [\n    \"unsubscribed\",\n    \"unsubscribed\"\n  ],\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on unsubscription\",\n  \"type\": \"marketing\",\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get a webhook details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200\r",
											"console.log(responseCode);\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify URL\", function () {\r",
											"    pm.expect(jsonData.url).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.not.eql(null);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											"console.log(jsonData.url)\r",
											"console.log(jsonData.id)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "{{myWebhookId}}",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"http://example.domain.com/1brxxxxxx5p1\",\n  \"id\": 7287,\n  \"description\": \"Webhook triggered on campaign openings and addition of lists\",\n  \"events\": [\n    \"listAdditions\",\n    \"opened\"\n  ],\n  \"type\": \"marketing\",\n  \"createdAt\": \"2016-06-07T09:10:10.000Z\",\n  \"modifiedAt\": \"2016-06-08T11:30:00.000Z\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Update a webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204\r",
											"console.log(responseCode);\r",
											"\r",
											"pm.test(\"Verify that Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 100ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"url\": \"{{updatedURL}}\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "{{myWebhookId}}",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"url\": \"http://requestb.in/173lyyx1\",\n  \"description\": \"Webhook triggered on contact hardbounce\",\n  \"events\": [\n    \"hardBounce\",\n    \"hardBounce\"\n  ],\n  \"domain\": \"example.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"})\r",
											"\r",
											"pm.test(\"Response time is less than 500ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/webhooks/:webhookId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"webhooks",
										":webhookId"
									],
									"variable": [
										{
											"key": "webhookId",
											"value": "{{myWebhookId}}",
											"description": "(Required) Id of the webhook"
										}
									]
								}
							},
							"response": [
								{
									"name": "Webhook deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Webhook ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/webhooks/:webhookId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"webhooks",
												":webhookId"
											],
											"variable": [
												{
													"key": "webhookId",
													"value": "13396752",
													"description": "(Required) Id of the webhook"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Reseller",
					"item": [
						{
							"name": "Credits",
							"item": [
								{
									"name": "Add Email and/or SMS credits to a specific child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"add"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Credits added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 450,\n  \"email\": 1200\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/add",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"add"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Remove Email and/or SMS credits from a specific child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"credits",
												"remove"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Credits removed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"child\": {\n    \"sms\": 500,\n    \"email\": 2000\n  },\n  \"reseller\": {\n    \"sms\": 12900,\n    \"email\": 2000000\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"sms\": 300,\n  \"email\": 500\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/credits/remove",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"credits",
														"remove"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "IP management",
							"item": [
								{
									"name": "Associate a dedicated IP to the child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"associate"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Dedicated IP is associated to the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/associate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"associate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Dissociate a dedicated IP to the child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"ips",
												"dissociate"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Dedicated IP is dissociated from the child",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ip\": \"123.65.8.22\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/ips/dissociate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"ips",
														"dissociate"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Domains",
							"item": [
								{
									"name": "Get all sender domains for a specific child account",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Sender domains of the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"domain\": \"mycustomdomain.com\",\n    \"active\": true\n  },\n  {\n    \"domain\": \"mynewdomain.com\",\n    \"active\": true\n  }\n]"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Create a domain for a child account",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Domain added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"mychilddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update the sender domain of reseller's child based on the childIdentifier and domainName passed",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												},
												{
													"key": "domainName",
													"value": "",
													"description": "(Required) Pass the existing domain that needs to be updated"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child domain updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"domain\": \"myupdateddomain.com\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be updated"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete the sender domain of the reseller child based on the childIdentifier and domainName passed",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"domains",
												":domainName"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												},
												{
													"key": "domainName",
													"value": "",
													"description": "(Required) Pass the existing domain that needs to be deleted"
												}
											]
										}
									},
									"response": [
										{
											"name": "child domain deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/domains/:domainName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"domains",
														":domainName"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														},
														{
															"key": "domainName",
															"value": "veniam elit in",
															"description": "(Required) Pass the existing domain that needs to be deleted"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Child accounts",
							"item": [
								{
									"name": "Get a child account's details",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "Information for the child",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyCompany\",\n  \"credits\": {\n    \"emailCredits\": 98555,\n    \"smsCredits\": 87556\n  },\n  \"statistics\": {\n    \"previousMonthTotalSent\": 7654,\n    \"currentMonthTotalSent\": 4566,\n    \"totalSent\": 987554\n  },\n  \"password\": \"abC0xxxxx3jkL\",\n  \"ips\": [\n    \"176.2.39.4\",\n    \"231.43.21.7\"\n  ],\n  \"apiKeys\": {\n    \"v2\": [\n      {\n        \"name\": \"N˚2\",\n        \"key\": \"nOpxxxxxy7z\"\n      }\n    ],\n    \"v3\": [\n      {\n        \"name\": \"N˚3\",\n        \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n      }\n    ]\n  }\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child based on the child identifier supplied",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"companyName\": \"Your Company\",\n  \"password\": \"Pa55w0rd65\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Delete a single reseller child based on the child identifier supplied",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or child id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "child deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or child id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Update info of reseller's child account status based on the identifier supplied",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountStatus"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "reseller's child account status updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"transactionalEmail\": false,\n  \"transactionalSms\": false,\n  \"marketingAutomation\": true,\n  \"smsCampaign\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the status of a reseller's child account creation, whether it is successfully created (exists) or not based on the childIdentifier supplied",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"accountCreationStatus"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										}
									},
									"response": [
										{
											"name": "status of reseller's child account",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"childAccountCreated\": true\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/accountCreationStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"accountCreationStatus"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get session token to access Sendinblue (SSO)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children",
												":childIdentifier",
												"auth"
											],
											"variable": [
												{
													"key": "childIdentifier",
													"value": "",
													"description": "(Required) Either auth key or id of reseller's child"
												}
											]
										},
										"description": "It returns a session [token] which will remain valid for a short period of time. A child account will be able to access a white-labeled section by using the following url pattern => https:/email.mydomain.com/login/sso?token=[token]"
									},
									"response": [
										{
											"name": "Session token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
										},
										{
											"name": "bad request",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Child auth key or child id not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children/:childIdentifier/auth",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children",
														":childIdentifier",
														"auth"
													],
													"variable": [
														{
															"key": "childIdentifier",
															"value": "veniam elit in",
															"description": "(Required) Either auth key or id of reseller's child"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Get the list of all children accounts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											],
											"query": [
												{
													"key": "limit",
													"value": "10",
													"description": "Number of documents for child accounts information per page"
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Index of the first document in the page"
												}
											]
										}
									},
									"response": [
										{
											"name": "list of children",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"children\": [\n    {\n      \"email\": \"john.smith@example.com\",\n      \"firstName\": \"John\",\n      \"lastName\": \"Smith\",\n      \"companyName\": \"MyCompany\",\n      \"credits\": {\n        \"emailCredits\": 98555,\n        \"smsCredits\": 87556\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 7654,\n        \"currentMonthTotalSent\": 4566,\n        \"totalSent\": 987554\n      },\n      \"password\": \"abC0xxxxxx3jkL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"N˚2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"N˚3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187588\n    },\n    {\n      \"email\": \"alex.pain@example.com\",\n      \"firstName\": \"Alex\",\n      \"lastName\": \"Pain\",\n      \"companyName\": \"MyStore\",\n      \"credits\": {\n        \"emailCredits\": 2000,\n        \"smsCredits\": 0\n      },\n      \"statistics\": {\n        \"previousMonthTotalSent\": 654,\n        \"currentMonthTotalSent\": 300,\n        \"totalSent\": 6553\n      },\n      \"password\": \"abC0xxxxx64kL\",\n      \"ips\": [\n        \"176.2.39.4\",\n        \"231.43.21.7\"\n      ],\n      \"apiKeys\": {\n        \"v2\": [\n          {\n            \"name\": \"N˚2\",\n            \"key\": \"nOpxxxxxy7z\"\n          }\n        ],\n        \"v3\": [\n          {\n            \"name\": \"N˚3\",\n            \"key\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\"\n          }\n        ]\n      },\n      \"id\": 187669\n    }\n  ]\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/reseller/children?limit=10&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													],
													"query": [
														{
															"key": "limit",
															"value": "10"
														},
														{
															"key": "offset",
															"value": "0"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								},
								{
									"name": "Creates a reseller child",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/reseller/children",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"reseller",
												"children"
											]
										}
									},
									"response": [
										{
											"name": "child created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authKey\": \"xkeysib-21881axxxxxcc92e04-mIrexxxx7z\",\n  \"id\": 1234567\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										},
										{
											"name": "Current account is not a reseller",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: apikey",
														"key": "api-key",
														"value": "<API Key>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"companyName\": \"Your Company\",\n  \"email\": \"josh.cruise@example.com\",\n  \"firstName\": \"Josh\",\n  \"lastName\": \"Cruise\",\n  \"password\": \"Pa55w0rd65\",\n  \"language\": \"en\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/reseller/children",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"reseller",
														"children"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
										}
									]
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Process",
					"item": [
						{
							"name": "Return all the processes for your account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const processes = jsonData.processes;\r",
											"const firstId  = jsonData.processes[0].firstId;\r",
											"const count = jsonData.count;\r",
											"const id = jsonData.processes[0].id\r",
											"\r",
											"pm.environment.set(\"process_id\", id)\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Process ID\", function () {\r",
											"    pm.expect(jsonData.processes[0].firstId).to.eql(firstId);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Processes 2nd items\", function () {\r",
											"    pm.expect(jsonData.processes[1]).to.eql(processes[1]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Processes 3rd items\", function () {\r",
											"    pm.expect(jsonData.processes[2]).to.eql(processes[2]);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Processes 4th items\", function () {\r",
											"    pm.expect(jsonData.processes[3]).to.eql(processes[3]);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Processes 5th items\", function () {\r",
											"    pm.expect(jsonData.processes[4]).to.eql(processes[4]);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Processes 5th items\", function () {\r",
											"    pm.expect(jsonData.count).to.eql(count);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(count)\r",
											"console.log(id)\r",
											"console.log(processes[2])"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "limit",
											"value": "10",
											"description": "Number limitation for the result returned",
											"disabled": true
										},
										{
											"key": "offset",
											"value": "0",
											"description": "Beginning point in the list to retrieve from.",
											"disabled": true
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Sort the results in the ascending/descending order of record creation. Default order is **descending** if `sort` is not passed",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "processes informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"processes\": [\n    {\n      \"id\": 40,\n      \"status\": \"completed\",\n      \"name\": \"TRANS-CALC\"\n    },\n    {\n      \"id\": 43,\n      \"status\": \"queued\",\n      \"name\": \"TRANS-GLOBAL-CALC\"\n    },\n    {\n      \"id\": 194,\n      \"status\": \"completed\",\n      \"name\": \"SEARCH_EXPORT_USERS\",\n      \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n    }\n  ],\n  \"count\": 3\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes?limit=10&offset=0&sort=desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes"
											],
											"query": [
												{
													"key": "limit",
													"value": "10"
												},
												{
													"key": "offset",
													"value": "0"
												},
												{
													"key": "sort",
													"value": "desc"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Return the informations for a process",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const id  = jsonData.id;\r",
											"const status = jsonData.status;\r",
											"const name = jsonData.name;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Process ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify status\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(status);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify name\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(name);\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json; charset=utf-8\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(id)\r",
											"console.log(status)\r",
											"console.log(name)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/processes/:processId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"processes",
										":processId"
									],
									"variable": [
										{
											"key": "processId",
											"value": "{{process_id}}",
											"description": "(Required) Id of the process"
										}
									]
								}
							},
							"response": [
								{
									"name": "process informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 194,\n  \"status\": \"completed\",\n  \"name\": \"SEARCH_EXPORT_USERS\",\n  \"export_url\": \"<a href=\\\"https://export-url.com/upload/file-name.csv\\\" target=\\\"_blank\\\">filename.csv</a>\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Process ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/processes/:processId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"processes",
												":processId"
											],
											"variable": [
												{
													"key": "processId",
													"value": "13396752",
													"description": "(Required) Id of the process"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"processId is invalid\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Corporate",
					"item": [
						{
							"name": "Get the details of requested master account",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/masterAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"masterAccount"
									]
								},
								"description": "This endpoint will provide the details of the master account."
							},
							"response": [
								{
									"name": "Master account details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/masterAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"masterAccount"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"sample@example.com\",\n  \"companyName\": \"Corp Sample 1-1\",\n  \"id\": 1003286,\n  \"currencyCode\": \"INR\",\n  \"timezone\": \"Europe/Paris\",\n  \"billingInfo\": {\n    \"email\": \"sample@example.com\",\n    \"companyName\": \"Corp Sample 1-1\",\n    \"name\": {\n      \"givenName\": \"Uday\",\n      \"familyName\": \"Pandit\"\n    },\n    \"address\": {\n      \"streetAddress\": \"C-92\",\n      \"locality\": \"Pandav Nagar, New Delhi\",\n      \"postalCode\": \"560048\",\n      \"stateCode\": \"UP\",\n      \"countryCode\": \"IN\"\n    }\n  },\n  \"planInfo\": {\n    \"currencyCode\": \"INR\",\n    \"nextBillingAt\": 1637739295,\n    \"price\": 2100,\n    \"planPeriod\": \"month\",\n    \"subAccounts\": 15,\n    \"features\": [\n      {\n        \"name\": \"MULTI_USER\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 15,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"ADVANCED_REPORTING\",\n        \"unitValue\": 1,\n        \"quantity\": 12,\n        \"used\": 1,\n        \"remaining\": 11\n      },\n      {\n        \"name\": \"INBOX\",\n        \"unitValue\": 1,\n        \"quantity\": 10,\n        \"used\": 10,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"LANDING_PAGE\",\n        \"unitValue\": 5,\n        \"quantity\": 10,\n        \"used\": 11,\n        \"remaining\": 0\n      },\n      {\n        \"name\": \"RECURRING_CREDITS\",\n        \"unitValue\": 1,\n        \"quantity\": 500,\n        \"used\": 1,\n        \"remaining\": 499\n      }\n    ]\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/masterAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"masterAccount"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get the list of all the sub-accounts of the master account.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									],
									"query": [
										{
											"key": "offset",
											"value": "",
											"description": "(Required) Index of the first sub-account in the page",
											"disabled": true
										},
										{
											"key": "limit",
											"value": "",
											"description": "(Required) Number of sub-accounts to be displayed on each page",
											"disabled": true
										}
									]
								},
								"description": "This endpoint will provide the list all the sub-accounts of the master account."
							},
							"response": [
								{
									"name": "Sub-accounts list",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"count\": 3,\n  \"subAccounts\": [\n    {\n      \"id\": 4043629,\n      \"companyName\": \"Company1\",\n      \"active\": \"true,\",\n      \"createdAt\": 1631523176\n    },\n    {\n      \"id\": 3984002,\n      \"companyName\": \"Company2\",\n      \"active\": true,\n      \"createdAt\": 1629439311\n    },\n    {\n      \"id\": 3524191,\n      \"companyName\": \"Company3\",\n      \"active\": true,\n      \"createdAt\": 1614713641\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount?offset=-41398727&limit=-41398727",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											],
											"query": [
												{
													"key": "offset",
													"value": "-41398727"
												},
												{
													"key": "limit",
													"value": "-41398727"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sub-account under a master account.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount"
									]
								},
								"description": "This endpoint will create a new sub-account under a master account"
							},
							"response": [
								{
									"name": "Created sub-account ID",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 4109344\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"companyName\": \"Test Sub-account\",\n  \"email\": \"test-sub@example.com\",\n  \"timezone\": \"Europe/Paris\",\n  \"language\": \"en\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Missing companyName attribute in the request\"\n}"
								}
							]
						},
						{
							"name": "Generate SSO token to access Sendinblue",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										"ssoToken"
									]
								},
								"description": "This endpoint generates an sso token to authenticate and access a sub-account of the master using the account endpoint https://app.sendinblue.com/account/login/sub-account/sso/[token], where [token] will be replaced by the actual token."
							},
							"response": [
								{
									"name": "Session token",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"5cadaxxxxxxxxxxxxxxxxxxxx5a179f85a0\"\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"invalid_parameter\",\n  \"message\": \"Invalid sub-account id.\"\n}"
								},
								{
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 3232323,\n  \"email\": \"vipin+subaccount@sendinblue.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/ssoToken",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												"ssoToken"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						},
						{
							"name": "Get sub-account details",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "133",
											"description": "(Required) Id of the sub-account organization"
										}
									]
								},
								"description": "This endpoint will provide the details for the specified sub-account company"
							},
							"response": [
								{
									"name": "Sub-account organization details",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"Uday Pandit\",\n  \"email\": \"uday+1@sendinblue.com\",\n  \"companyName\": \"API-Sub-26thOct21-4\",\n  \"planInfo\": {\n    \"credits\": {\n      \"sms\": 1234,\n      \"emails\": {\n        \"quantity\": 2000,\n        \"remaining\": 1955\n      },\n      \"features\": {\n        \"inbox\": {\n          \"quantity\": 20,\n          \"remaining\": 12\n        },\n        \"landingPage\": {\n          \"quantity\": 25,\n          \"remaining\": 14\n        },\n        \"users\": {\n          \"quantity\": 30,\n          \"remaining\": 14\n        }\n      },\n      \"planType\": \"paid\"\n    }\n  }\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sub-account",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "133",
											"description": "(Required) Id of the sub-account organization to be deleted"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returned when sub-account is deleted succesfully",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"missing_parameter\",\n  \"message\": \"Sub-account 2039dfsddf885 is not valid\"\n}"
								},
								{
									"name": "sub-account not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization to be deleted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"document_not_found\",\n  \"message\": \"Sub-account 2039885 was not found\"\n}"
								}
							]
						},
						{
							"name": "Update sub-account plan",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"corporate",
										"subAccount",
										":id",
										"plan"
									],
									"variable": [
										{
											"key": "id",
											"value": "133",
											"description": "(Required) Id of the sub-account organization"
										}
									]
								},
								"description": "This endpoint will update the sub-account plan"
							},
							"response": [
								{
									"name": "Sub account plan updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Current account is not a master account",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"credits\": {\n    \"email\": 5000\n  },\n  \"features\": {\n    \"users\": 15,\n    \"landingPage\": 20,\n    \"inbox\": 10\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/corporate/subAccount/:id/plan",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"corporate",
												"subAccount",
												":id",
												"plan"
											],
											"variable": [
												{
													"key": "id",
													"value": "13396752",
													"description": "(Required) Id of the sub-account organization"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"permission_denied\",\n  \"message\": \"Access forbidden.\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Account data",
					"item": [
						{
							"name": "Get your account information, plan and credits details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode  = 200\r",
											"console.log(responseCode)\r",
											"const jsonData = pm.response.json()\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify Email Address\", function () {\r",
											"    pm.expect(jsonData.email).to.eql(\"testcad77@gmail.com\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Fiestname\", function () {\r",
											"    pm.expect(jsonData.firstName).to.eql(\"Elizabeth\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Verify lastname\", function () {\r",
											"    pm.expect(jsonData.lastName).to.eql(\"Ezirim\");\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Company name\", function () {\r",
											"    pm.expect(jsonData.companyName).to.eql(\"Testaholics\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has OK\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"\r",
											"\r",
											"console.log(jsonData.email)\r",
											"console.log(jsonData.firstName)\r",
											"console.log(jsonData.lastName)\r",
											"console.log(jsonData.companyName)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account"
									]
								}
							},
							"response": [
								{
									"name": "account informations",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"plan\": [\n    {\n      \"type\": \"payAsYouGo\",\n      \"credits\": 5000,\n      \"creditsType\": \"sendLimit\"\n    },\n    {\n      \"type\": \"subscription\",\n      \"credits\": 39983,\n      \"creditsType\": \"sendLimit\",\n      \"startDate\": \"2017-03-11T00:00:00.000Z\",\n      \"endDate\": \"2017-04-11T00:00:00.000Z\"\n    },\n    {\n      \"type\": \"sms\",\n      \"credits\": 999.5360000000001,\n      \"creditsType\": \"sendLimit\"\n    }\n  ],\n  \"relay\": {\n    \"enabled\": true,\n    \"data\": {\n      \"userName\": \"john.smith@example.com\",\n      \"relay\": \"smtp-relay.domain.com\",\n      \"port\": 587\n    }\n  },\n  \"marketingAutomation\": {\n    \"key\": \"kzfr5xxxxxxttuyo1\",\n    \"enabled\": true\n  },\n  \"email\": \"john.smith@example.com\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Smith\",\n  \"companyName\": \"MyShop\",\n  \"address\": {\n    \"city\": \"New-York\",\n    \"street\": \"1677B 8th Avenue\",\n    \"zipCode\": \"7665\",\n    \"country\": \"USA\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Senders",
					"item": [
						{
							"name": "Get the list of all your senders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const senders  = jsonData.senders[0];\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify First  ID\", function () {\r",
											"    pm.expect(jsonData.senders[0]).to.eql(senders);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(senders[0]);\r",
											"\r",
											"postman.setNextRequest(\"Create a new sender\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									],
									"query": [
										{
											"key": "ip",
											"value": "",
											"description": "Filter your senders for a specific ip. **Available for dedicated IP usage only**\n",
											"disabled": true
										},
										{
											"key": "domain",
											"value": "",
											"description": "Filter your senders for a specific domain",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "list of senders",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"senders\": [\n    {\n      \"id\": 1,\n      \"name\": \"Marketing\",\n      \"email\": \"marketing@mycompany.com\",\n      \"active\": true,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 100\n        }\n      ]\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Newsletter\",\n      \"email\": \"newsletter@mycompany.com\",\n      \"active\": false,\n      \"ips\": [\n        {\n          \"ip\": \"123.98.689.7\",\n          \"domain\": \"mycompany.com\",\n          \"weight\": 50\n        },\n        {\n          \"ip\": \"123.98.643.2\",\n          \"domain\": \"news.mycompany.com\",\n          \"weight\": 50\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders?ip=veniam elit in&domain=veniam elit in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											],
											"query": [
												{
													"key": "ip",
													"value": "veniam elit in"
												},
												{
													"key": "domain",
													"value": "veniam elit in"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Create a new sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 201;\r",
											"const jsonData = pm.response.json();\r",
											"const id = jsonData.id;\r",
											"\r",
											"\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ID\", function () {\r",
											"    pm.expect(jsonData.id).to.eql(id);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has Created\", function () {\r",
											"    pm.response.to.have.status(\"Created\");\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode);\r",
											"console.log(id);\r",
											"\r",
											"postman.setNextRequest(\"Get all the dedicated IPs for your account\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders"
									]
								}
							},
							"response": [
								{
									"name": "sender created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 5,\n  \"spfError\": true,\n  \"dkimError\": false\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"newsletter@mycompany.com\",\n  \"name\": \"Newsletter\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for your account",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const ips  = jsonData.ips;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify ips\", function () {\r",
											"    pm.expect(jsonData.ips).to.eql(ips);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(ips)\r",
											"\r",
											"\r",
											"postman.setNextRequest(\"Update a sender\")"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										"ips"
									]
								}
							},
							"response": [
								{
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												"ips"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"67.145.89.3\",\n      \"active\": true,\n      \"domain\": \"mailing.myshop.com\"\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"76.76.125.9\",\n      \"active\": true,\n      \"domain\": \"newsletter.myshop.com\"\n    },\n    {\n      \"id\": 6,\n      \"ip\": \"123.65.8.22\",\n      \"active\": false,\n      \"domain\": \"notifications.myshop.com\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)\r",
											"\r",
											"postman.setNextRequest(\"Get all the dedicated IPs for a sender\")\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Newsletters\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "2",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"name": "sender updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Newsletter\",\n  \"email\": \"newsletter@mycompany.com\",\n  \"ips\": [\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    },\n    {\n      \"domain\": \"mycompany.com\",\n      \"ip\": \"123.98.689.7\",\n      \"weight\": 50\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Delete a sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 204;\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    \r",
											"    pm.expect(responseCode).to.eql(responseCode);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 1000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code name has No Content\", function () {\r",
											"    pm.response.to.have.status(\"No Content\");\r",
											"});\r",
											"\r",
											"console.log(responseCode)"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "2",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"name": "sender deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						},
						{
							"name": "Get all the dedicated IPs for a sender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var responseCode = 200;\r",
											"const jsonData = pm.response.json();\r",
											"const ips  = jsonData.ips;\r",
											"\r",
											"\r",
											"pm.test(\"Verify Status Code\", function () {\r",
											"    pm.expect(responseCode).to.eql(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify Ips\", function () {\r",
											"    pm.expect(jsonData.ips).to.eql(ips);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 2000ms\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
											"});\r",
											"\r",
											"\r",
											"console.log(responseCode)\r",
											"console.log(ips)\r",
											"\r",
											"postman.setNextRequest(null)\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/senders/:senderId/ips",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"senders",
										":senderId",
										"ips"
									],
									"variable": [
										{
											"key": "senderId",
											"value": "2",
											"description": "(Required) Id of the sender"
										}
									]
								}
							},
							"response": [
								{
									"name": "list of dedicated IPs",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"ips\": [\n    {\n      \"id\": 3,\n      \"ip\": \"123.65.8.22\",\n      \"domain\": \"mailing.myshop.dom\",\n      \"weight\": 40\n    },\n    {\n      \"id\": 5,\n      \"ip\": \"123.43.21.3\",\n      \"domain\": \"newsletter.myshop.dom\",\n      \"weight\": 60\n    }\n  ]\n}"
								},
								{
									"name": "bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								},
								{
									"name": "Sender ID not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "api-key",
												"value": "<API Key>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/senders/:senderId/ips",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"senders",
												":senderId",
												"ips"
											],
											"variable": [
												{
													"key": "senderId",
													"value": "13396752",
													"description": "(Required) Id of the sender"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"code\": \"method_not_allowed\",\n  \"message\": \"POST Method is not allowed on this path\"\n}"
								}
							]
						}
					]
				}
			],
			"description": "Under this collection you can manage multiple account specific objects such as:  \n\n\\-> Webhooks for Transactional events, Marketing events , Payments events and Inbound Parsing API events.\n\n\\-> Reseller and Sub-accounts settings such as credit allocation , creation and deletion.\n\n\\-> Track asynchronous processes being done for your account such as contact imports, ecommerce imports, data exports etc.\n\n\\-> Get information about your plan and credits.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{Elizabeth-api-key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.sendinblue.com/v3",
			"type": "string"
		},
		{
			"key": "task_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "note_id",
			"value": "",
			"type": "string"
		}
	]
}